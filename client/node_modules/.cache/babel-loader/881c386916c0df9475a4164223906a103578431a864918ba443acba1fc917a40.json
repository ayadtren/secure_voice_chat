{"ast":null,"code":"import React,{useEffect,useState}from'react';import QRCode from'qrcode.react';import{Button}from'./ui/button';import{cn}from'../lib/utils';/**\n * QR Code Generator Component\n * \n * Generates a QR code for easy connection between devices on the local network.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {string} props.connectionData - Data to encode in the QR code (typically room ID or connection details)\n * @param {string} props.className - Optional CSS class names\n * @param {Function} props.onDownload - Optional callback when QR code is downloaded\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QRCodeGenerator=_ref=>{let{connectionData,className,onDownload}=_ref;const[qrValue,setQrValue]=useState('');useEffect(()=>{// Format the connection data for QR code\n// This could be a JSON string with room ID and any other necessary connection details\nif(connectionData){try{const formattedData=typeof connectionData==='string'?connectionData:JSON.stringify(connectionData);setQrValue(formattedData);}catch(error){console.error('Error formatting QR code data:',error);setQrValue('');}}},[connectionData]);// Handle QR code download\nconst handleDownload=()=>{const canvas=document.getElementById('connection-qrcode');if(canvas){const dataUrl=canvas.toDataURL('image/png');const link=document.createElement('a');link.href=dataUrl;link.download='secure-voice-chat-qrcode.png';document.body.appendChild(link);link.click();document.body.removeChild(link);if(onDownload){onDownload();}}};if(!qrValue){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm',className),children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-4 bg-white rounded-lg\",children:/*#__PURE__*/_jsx(QRCode,{id:\"connection-qrcode\",value:qrValue,size:200,level:\"H\"// High error correction for better scanning\n,includeMargin:true,renderAs:\"canvas\",\"aria-label\":\"QR code for secure connection\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2 w-full\",children:[/*#__PURE__*/_jsx(Button,{onClick:handleDownload,variant:\"outline\",className:\"w-full\",\"aria-label\":\"Download QR code\",children:\"Download QR Code\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-muted-foreground text-center\",children:\"Scan this code with another device to connect securely\"})]})]});};export default QRCodeGenerator;","map":{"version":3,"names":["React","useEffect","useState","QRCode","Button","cn","jsx","_jsx","jsxs","_jsxs","QRCodeGenerator","_ref","connectionData","className","onDownload","qrValue","setQrValue","formattedData","JSON","stringify","error","console","handleDownload","canvas","document","getElementById","dataUrl","toDataURL","link","createElement","href","download","body","appendChild","click","removeChild","children","id","value","size","level","includeMargin","renderAs","onClick","variant"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/QRCodeGenerator.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { Button } from './ui/button';\nimport { cn } from '../lib/utils';\n\n/**\n * QR Code Generator Component\n * \n * Generates a QR code for easy connection between devices on the local network.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {string} props.connectionData - Data to encode in the QR code (typically room ID or connection details)\n * @param {string} props.className - Optional CSS class names\n * @param {Function} props.onDownload - Optional callback when QR code is downloaded\n */\nconst QRCodeGenerator = ({ connectionData, className, onDownload }) => {\n  const [qrValue, setQrValue] = useState('');\n  \n  useEffect(() => {\n    // Format the connection data for QR code\n    // This could be a JSON string with room ID and any other necessary connection details\n    if (connectionData) {\n      try {\n        const formattedData = typeof connectionData === 'string' \n          ? connectionData \n          : JSON.stringify(connectionData);\n        setQrValue(formattedData);\n      } catch (error) {\n        console.error('Error formatting QR code data:', error);\n        setQrValue('');\n      }\n    }\n  }, [connectionData]);\n\n  // Handle QR code download\n  const handleDownload = () => {\n    const canvas = document.getElementById('connection-qrcode');\n    if (canvas) {\n      const dataUrl = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = 'secure-voice-chat-qrcode.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      if (onDownload) {\n        onDownload();\n      }\n    }\n  };\n\n  if (!qrValue) {\n    return null;\n  }\n\n  return (\n    <div className={cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm', className)}>\n      <div className=\"mb-4 p-4 bg-white rounded-lg\">\n        <QRCode\n          id=\"connection-qrcode\"\n          value={qrValue}\n          size={200}\n          level=\"H\" // High error correction for better scanning\n          includeMargin={true}\n          renderAs=\"canvas\"\n          aria-label=\"QR code for secure connection\"\n        />\n      </div>\n      \n      <div className=\"space-y-2 w-full\">\n        <Button \n          onClick={handleDownload}\n          variant=\"outline\"\n          className=\"w-full\"\n          aria-label=\"Download QR code\"\n        >\n          Download QR Code\n        </Button>\n        \n        <p className=\"text-sm text-muted-foreground text-center\">\n          Scan this code with another device to connect securely\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,OAASC,MAAM,KAAQ,aAAa,CACpC,OAASC,EAAE,KAAQ,cAAc,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAWA,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAA+C,IAA9C,CAAEC,cAAc,CAAEC,SAAS,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAChE,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE1CD,SAAS,CAAC,IAAM,CACd;AACA;AACA,GAAIW,cAAc,CAAE,CAClB,GAAI,CACF,KAAM,CAAAK,aAAa,CAAG,MAAO,CAAAL,cAAc,GAAK,QAAQ,CACpDA,cAAc,CACdM,IAAI,CAACC,SAAS,CAACP,cAAc,CAAC,CAClCI,UAAU,CAACC,aAAa,CAAC,CAC3B,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtDJ,UAAU,CAAC,EAAE,CAAC,CAChB,CACF,CACF,CAAC,CAAE,CAACJ,cAAc,CAAC,CAAC,CAEpB;AACA,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,MAAM,CAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAC3D,GAAIF,MAAM,CAAE,CACV,KAAM,CAAAG,OAAO,CAAGH,MAAM,CAACI,SAAS,CAAC,WAAW,CAAC,CAC7C,KAAM,CAAAC,IAAI,CAAGJ,QAAQ,CAACK,aAAa,CAAC,GAAG,CAAC,CACxCD,IAAI,CAACE,IAAI,CAAGJ,OAAO,CACnBE,IAAI,CAACG,QAAQ,CAAG,8BAA8B,CAC9CP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACL,IAAI,CAAC,CAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC,CACZV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACP,IAAI,CAAC,CAE/B,GAAId,UAAU,CAAE,CACdA,UAAU,CAAC,CAAC,CACd,CACF,CACF,CAAC,CAED,GAAI,CAACC,OAAO,CAAE,CACZ,MAAO,KAAI,CACb,CAEA,mBACEN,KAAA,QAAKI,SAAS,CAAER,EAAE,CAAC,6DAA6D,CAAEQ,SAAS,CAAE,CAAAuB,QAAA,eAC3F7B,IAAA,QAAKM,SAAS,CAAC,8BAA8B,CAAAuB,QAAA,cAC3C7B,IAAA,CAACJ,MAAM,EACLkC,EAAE,CAAC,mBAAmB,CACtBC,KAAK,CAAEvB,OAAQ,CACfwB,IAAI,CAAE,GAAI,CACVC,KAAK,CAAC,GAAI;AAAA,CACVC,aAAa,CAAE,IAAK,CACpBC,QAAQ,CAAC,QAAQ,CACjB,aAAW,+BAA+B,CAC3C,CAAC,CACC,CAAC,cAENjC,KAAA,QAAKI,SAAS,CAAC,kBAAkB,CAAAuB,QAAA,eAC/B7B,IAAA,CAACH,MAAM,EACLuC,OAAO,CAAErB,cAAe,CACxBsB,OAAO,CAAC,SAAS,CACjB/B,SAAS,CAAC,QAAQ,CAClB,aAAW,kBAAkB,CAAAuB,QAAA,CAC9B,kBAED,CAAQ,CAAC,cAET7B,IAAA,MAAGM,SAAS,CAAC,2CAA2C,CAAAuB,QAAA,CAAC,wDAEzD,CAAG,CAAC,EACD,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}