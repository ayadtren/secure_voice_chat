{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/components/VideoChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { WebRTCManager } from '../utils/webrtcManager';\nimport { clsx } from 'clsx';\nimport { cn } from '../lib/utils';\nimport QRCodeGenerator from './QRCodeGenerator';\nimport VideoContainer from './VideoContainer';\nimport VideoControls from './VideoControls';\nimport CameraPermissionGuide from './CameraPermissionGuide';\nimport VideoQualityControls from './VideoQualityControls';\nimport NetworkQualityIndicator from './NetworkQualityIndicator';\n\n/**\n * VideoChatRoom Component\n * \n * Main component for the video/voice chat room functionality.\n * Handles WebRTC connections, audio/video processing, and UI for the chat.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoChatRoom = ({\n  roomId,\n  userId,\n  onLeave\n}) => {\n  _s();\n  var _cameraStatus$browser;\n  const [socket, setSocket] = useState(null);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [connectedPeers, setConnectedPeers] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState({});\n  const [audioLevels, setAudioLevels] = useState({});\n  const [connectionQualities, setConnectionQualities] = useState({});\n  const [error, setError] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [showQRCode, setShowQRCode] = useState(false);\n\n  // Video-related state\n  const [isVideoEnabled, setIsVideoEnabled] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [cameraStatus, setCameraStatus] = useState(null);\n  const [localVideoStream, setLocalVideoStream] = useState(null);\n  const [remoteVideoStreams, setRemoteVideoStreams] = useState({});\n\n  // Phase 2 features - Video quality and network monitoring\n  const [currentVideoQuality, setCurrentVideoQuality] = useState('high');\n  const [networkQuality, setNetworkQuality] = useState(100);\n  const [networkMetrics, setNetworkMetrics] = useState(null);\n\n  // References\n  const audioRefs = useRef({});\n  const animationFrameRef = useRef(null);\n\n  // Initialize socket and WebRTC manager\n  useEffect(() => {\n    // Create socket connection to signaling server\n    const newSocket = io(process.env.REACT_APP_SIGNALING_SERVER || window.location.origin, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: window.location.protocol === 'https:',\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    setSocket(newSocket);\n\n    // Socket event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to signaling server');\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Connection error:', err);\n      setError('Failed to connect to the signaling server. Please try again.');\n    });\n\n    // Clean up on unmount\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Initialize WebRTC manager when socket is ready\n  useEffect(() => {\n    if (!socket || !roomId) return;\n    const manager = new WebRTCManager(socket, {\n      userId,\n      onPeerConnect: handlePeerConnect,\n      onPeerDisconnect: handlePeerDisconnect,\n      onSpeakingChange: handleSpeakingChange,\n      onAudioQualityChange: handleAudioQualityChange,\n      onError: errorMsg => setError(errorMsg),\n      onMicrophoneStatus: handleMicrophoneStatus,\n      onCameraStatus: handleCameraStatus,\n      onLocalVideo: handleLocalVideo,\n      onRemoteVideo: handleRemoteVideo,\n      onVideoStatusChange: handleVideoStatusChange,\n      onNetworkQualityChange: handleNetworkQualityChange // Phase 2 - Network quality monitoring\n    });\n    setWebrtcManager(manager);\n\n    // Initialize WebRTC and join room\n    manager.initialize(roomId).then(() => {\n      setIsConnecting(false);\n      startAudioLevelMonitoring(manager);\n\n      // Get available video devices\n      manager.getVideoDevices().then(devices => {\n        setVideoDevices(devices);\n      });\n\n      // Set initial video quality (Phase 2)\n      if (manager.setVideoQuality) {\n        manager.setVideoQuality(currentVideoQuality);\n      }\n    }).catch(err => {\n      console.error('Failed to initialize WebRTC:', err);\n      setError('Failed to access microphone. Please check your permissions.');\n      setIsConnecting(false);\n    });\n\n    // Clean up on unmount\n    return () => {\n      if (manager) {\n        manager.dispose();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [socket, roomId, userId]);\n\n  // Handle peer connection\n  const handlePeerConnect = (peerId, stream) => {\n    console.log(`Peer connected: ${peerId}`);\n\n    // Add to connected peers\n    setConnectedPeers(prevPeers => {\n      if (!prevPeers.includes(peerId)) {\n        return [...prevPeers, peerId];\n      }\n      return prevPeers;\n    });\n\n    // Create audio element for peer\n    if (stream) {\n      const audioElement = new Audio();\n      audioElement.srcObject = stream;\n      audioElement.autoplay = true;\n\n      // Store audio element reference\n      audioRefs.current[peerId] = audioElement;\n\n      // Start playing\n      audioElement.play().catch(err => {\n        console.error('Error playing audio:', err);\n      });\n    }\n  };\n\n  // Handle peer disconnection\n  const handlePeerDisconnect = peerId => {\n    console.log(`Peer disconnected: ${peerId}`);\n\n    // Remove from connected peers\n    setConnectedPeers(prevPeers => prevPeers.filter(id => id !== peerId));\n\n    // Remove speaking status\n    setPeerSpeaking(prevState => {\n      const newState = {\n        ...prevState\n      };\n      delete newState[peerId];\n      return newState;\n    });\n\n    // Remove audio levels\n    setAudioLevels(prevLevels => {\n      const newLevels = {\n        ...prevLevels\n      };\n      delete newLevels[peerId];\n      return newLevels;\n    });\n\n    // Remove connection quality\n    setConnectionQualities(prevQualities => {\n      const newQualities = {\n        ...prevQualities\n      };\n      delete newQualities[peerId];\n      return newQualities;\n    });\n\n    // Remove video stream\n    setRemoteVideoStreams(prevStreams => {\n      const newStreams = {\n        ...prevStreams\n      };\n      delete newStreams[peerId];\n      return newStreams;\n    });\n\n    // Clean up audio element\n    if (audioRefs.current[peerId]) {\n      audioRefs.current[peerId].srcObject = null;\n      delete audioRefs.current[peerId];\n    }\n  };\n\n  // Handle speaking change\n  const handleSpeakingChange = speaking => {\n    setIsSpeaking(speaking);\n  };\n\n  // Handle remote peer speaking change\n  const handlePeerSpeakingChange = (peerId, speaking) => {\n    setPeerSpeaking(prevState => ({\n      ...prevState,\n      [peerId]: speaking\n    }));\n  };\n\n  // Handle audio quality change\n  const handleAudioQualityChange = (peerId, quality, metrics) => {\n    setConnectionQualities(prevQualities => ({\n      ...prevQualities,\n      [peerId]: {\n        quality,\n        metrics\n      }\n    }));\n  };\n\n  // Handle microphone status change\n  const handleMicrophoneStatus = status => {\n    // This can be used to show microphone permission UI if needed\n    console.log('Microphone status:', status);\n  };\n\n  // Handle camera status change\n  const handleCameraStatus = status => {\n    setCameraStatus(status);\n  };\n\n  // Handle local video stream\n  const handleLocalVideo = stream => {\n    setLocalVideoStream(stream);\n  };\n\n  // Handle remote video stream\n  const handleRemoteVideo = (peerId, stream) => {\n    setRemoteVideoStreams(prevStreams => ({\n      ...prevStreams,\n      [peerId]: stream\n    }));\n  };\n\n  // Handle video status change\n  const handleVideoStatusChange = enabled => {\n    setIsVideoEnabled(enabled);\n  };\n\n  // Handle network quality change\n  const handleNetworkQualityChange = (quality, metrics) => {\n    setNetworkQuality(quality);\n    setNetworkMetrics(metrics);\n  };\n\n  // Handle video quality change (Phase 2)\n  const handleVideoQualityChange = qualityPreset => {\n    if (webrtcManager && webrtcManager.setVideoQuality) {\n      webrtcManager.setVideoQuality(qualityPreset.id);\n      setCurrentVideoQuality(qualityPreset.id);\n    }\n  };\n\n  // Start monitoring audio levels\n  const startAudioLevelMonitoring = manager => {\n    const updateAudioLevels = () => {\n      if (!manager) return;\n\n      // Update local audio level\n      const localLevel = manager.getAudioLevel();\n      setAudioLevels(prevLevels => ({\n        ...prevLevels,\n        local: localLevel\n      }));\n\n      // Continue monitoring\n      animationFrameRef.current = requestAnimationFrame(updateAudioLevels);\n    };\n\n    // Start monitoring\n    updateAudioLevels();\n  };\n\n  // Toggle mute\n  const handleToggleMute = () => {\n    if (webrtcManager) {\n      const newMuteState = webrtcManager.toggleMute();\n      setIsMuted(newMuteState);\n    }\n  };\n\n  // Toggle video\n  const handleToggleVideo = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n\n  // Switch camera\n  const handleSwitchCamera = async deviceId => {\n    if (webrtcManager) {\n      await webrtcManager.switchCamera(deviceId);\n    }\n  };\n\n  // Retry camera access\n  const handleRetryCameraAccess = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n\n  // Leave room\n  const handleLeaveRoom = () => {\n    if (webrtcManager) {\n      webrtcManager.leaveRoom();\n    }\n    if (onLeave) {\n      onLeave();\n    }\n  };\n\n  // Toggle QR code display\n  const handleToggleQRCode = () => {\n    setShowQRCode(prev => !prev);\n  };\n\n  // Generate connection data for QR code\n  const getConnectionData = () => {\n    return JSON.stringify({\n      roomId,\n      server: window.location.origin\n    });\n  };\n\n  // Calculate grid columns based on number of participants\n  const getGridColumns = () => {\n    const totalParticipants = 1 + connectedPeers.length; // Local user + peers\n\n    if (totalParticipants === 1) return 'grid-cols-1';\n    if (totalParticipants === 2) return 'grid-cols-1 md:grid-cols-2';\n    if (totalParticipants <= 4) return 'grid-cols-2';\n    if (totalParticipants <= 6) return 'grid-cols-2 md:grid-cols-3';\n    return 'grid-cols-2 md:grid-cols-3 lg:grid-cols-4';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-gradient-to-b from-white to-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b border-gray-200 bg-white shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: [connectedPeers.length, \" \", connectedPeers.length === 1 ? 'peer' : 'peers', \" connected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 mr-2\",\n            children: \"Network:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NetworkQualityIndicator, {\n            quality: networkQuality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), networkMetrics && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-2 text-xs text-gray-500\",\n            children: [networkMetrics.bitrate ? `${Math.round(networkMetrics.bitrate / 1000)} kbps` : '', networkMetrics.rtt ? ` | ${Math.round(networkMetrics.rtt)}ms` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleQRCode,\n          className: clsx('inline-flex items-center justify-center px-2 py-[calc(--spacing(1.5)-1px)]', 'rounded-lg border border-transparent ring-1 shadow-sm ring-black/10', 'text-sm font-medium whitespace-nowrap text-gray-950', 'data-hover:bg-gray-50'),\n          \"aria-label\": showQRCode ? \"Hide QR code\" : \"Show QR code for connection\",\n          children: showQRCode ? \"Hide QR\" : \"Show QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleMute,\n          className: clsx('inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]', 'rounded-full border border-transparent shadow-md', 'text-base font-medium whitespace-nowrap', isMuted ? 'bg-white/15 ring-1 ring-[#D15052]/15 text-gray-950 data-hover:bg-white/20' : 'bg-gray-950 text-white data-hover:bg-gray-800', 'after:absolute after:inset-0 after:rounded-full after:shadow-[inset_0_0_2px_1px_#ffffff4d]'),\n          \"aria-label\": isMuted ? \"Unmute microphone\" : \"Mute microphone\",\n          children: isMuted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"w-5 h-5 mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"1\",\n                y1: \"1\",\n                x2: \"23\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"19\",\n                x2: \"12\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"8\",\n                y1: \"23\",\n                x2: \"16\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), \"Unmute\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"w-5 h-5 mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 10v2a7 7 0 0 1-14 0v-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"19\",\n                x2: \"12\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"8\",\n                y1: \"23\",\n                x2: \"16\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), \"Mute\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoControls, {\n          isVideoEnabled: isVideoEnabled,\n          onToggleVideo: handleToggleVideo,\n          onSwitchCamera: handleSwitchCamera,\n          videoDevices: videoDevices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoQualityControls, {\n          currentQuality: currentVideoQuality,\n          onQualityChange: handleVideoQualityChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveRoom,\n          className: clsx('inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]', 'rounded-full border border-transparent bg-[#D15052] shadow-md', 'text-base font-medium whitespace-nowrap text-white', 'data-hover:bg-[#C04042]'),\n          \"aria-label\": \"Leave chat room\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 overflow-auto\",\n      children: isConnecting ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2 text-gray-900\",\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Setting up secure connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium text-[#D15052] mb-2\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveRoom,\n          className: clsx('inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]', 'rounded-full border border-transparent bg-gray-950 shadow-md', 'text-base font-medium whitespace-nowrap text-white', 'data-hover:bg-gray-800'),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-4\",\n        children: [showQRCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-xl shadow-md mx-auto max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(QRCodeGenerator, {\n            connectionData: getConnectionData(),\n            className: \"mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center mt-4 text-sm text-gray-500\",\n            children: \"Scan to join this room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 15\n        }, this), cameraStatus && cameraStatus.status !== 'granted' && isVideoEnabled && /*#__PURE__*/_jsxDEV(CameraPermissionGuide, {\n          status: cameraStatus.status,\n          instructions: cameraStatus.instructions,\n          browser: (_cameraStatus$browser = cameraStatus.browser) === null || _cameraStatus$browser === void 0 ? void 0 : _cameraStatus$browser.name,\n          onRetry: handleRetryCameraAccess,\n          className: \"mx-auto max-w-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx('grid gap-4', getGridColumns(), 'auto-rows-fr'),\n          children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n            stream: localVideoStream,\n            isMuted: true,\n            isLocal: true,\n            displayName: userId,\n            isSpeaking: isSpeaking,\n            isVideoEnabled: isVideoEnabled && localVideoStream !== null,\n            connectionQuality: networkQuality,\n            className: \"aspect-video h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), connectedPeers.map(peerId => {\n            var _connectionQualities$;\n            return /*#__PURE__*/_jsxDEV(VideoContainer, {\n              stream: remoteVideoStreams[peerId],\n              isMuted: false,\n              isLocal: false,\n              displayName: peerId,\n              isSpeaking: peerSpeaking[peerId] || false,\n              isVideoEnabled: remoteVideoStreams[peerId] !== undefined,\n              connectionQuality: ((_connectionQualities$ = connectionQualities[peerId]) === null || _connectionQualities$ === void 0 ? void 0 : _connectionQualities$.quality) || 100,\n              className: \"aspect-video h-full\"\n            }, peerId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 358,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChatRoom, \"kp/3kuXYSljDnc8RkCzYOR9JQQU=\");\n_c = VideoChatRoom;\nexport default VideoChatRoom;\nvar _c;\n$RefreshReg$(_c, \"VideoChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","WebRTCManager","clsx","cn","QRCodeGenerator","VideoContainer","VideoControls","CameraPermissionGuide","VideoQualityControls","NetworkQualityIndicator","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoChatRoom","roomId","userId","onLeave","_s","_cameraStatus$browser","socket","setSocket","webrtcManager","setWebrtcManager","connectedPeers","setConnectedPeers","isMuted","setIsMuted","isSpeaking","setIsSpeaking","peerSpeaking","setPeerSpeaking","audioLevels","setAudioLevels","connectionQualities","setConnectionQualities","error","setError","isConnecting","setIsConnecting","showQRCode","setShowQRCode","isVideoEnabled","setIsVideoEnabled","videoDevices","setVideoDevices","cameraStatus","setCameraStatus","localVideoStream","setLocalVideoStream","remoteVideoStreams","setRemoteVideoStreams","currentVideoQuality","setCurrentVideoQuality","networkQuality","setNetworkQuality","networkMetrics","setNetworkMetrics","audioRefs","animationFrameRef","newSocket","process","env","REACT_APP_SIGNALING_SERVER","window","location","origin","path","transports","secure","protocol","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","err","current","cancelAnimationFrame","disconnect","manager","onPeerConnect","handlePeerConnect","onPeerDisconnect","handlePeerDisconnect","onSpeakingChange","handleSpeakingChange","onAudioQualityChange","handleAudioQualityChange","onError","errorMsg","onMicrophoneStatus","handleMicrophoneStatus","onCameraStatus","handleCameraStatus","onLocalVideo","handleLocalVideo","onRemoteVideo","handleRemoteVideo","onVideoStatusChange","handleVideoStatusChange","onNetworkQualityChange","handleNetworkQualityChange","initialize","then","startAudioLevelMonitoring","getVideoDevices","devices","setVideoQuality","catch","dispose","peerId","stream","prevPeers","includes","audioElement","Audio","srcObject","autoplay","play","filter","id","prevState","newState","prevLevels","newLevels","prevQualities","newQualities","prevStreams","newStreams","speaking","handlePeerSpeakingChange","quality","metrics","status","enabled","handleVideoQualityChange","qualityPreset","updateAudioLevels","localLevel","getAudioLevel","local","requestAnimationFrame","handleToggleMute","newMuteState","toggleMute","handleToggleVideo","videoEnabled","toggleVideo","handleSwitchCamera","deviceId","switchCamera","handleRetryCameraAccess","handleLeaveRoom","leaveRoom","handleToggleQRCode","prev","getConnectionData","JSON","stringify","server","getGridColumns","totalParticipants","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","bitrate","Math","round","rtt","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","onToggleVideo","onSwitchCamera","currentQuality","onQualityChange","connectionData","instructions","browser","name","onRetry","isLocal","displayName","connectionQuality","map","_connectionQualities$","undefined","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/VideoChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { WebRTCManager } from '../utils/webrtcManager';\nimport { clsx } from 'clsx';\nimport { cn } from '../lib/utils';\nimport QRCodeGenerator from './QRCodeGenerator';\nimport VideoContainer from './VideoContainer';\nimport VideoControls from './VideoControls';\nimport CameraPermissionGuide from './CameraPermissionGuide';\nimport VideoQualityControls from './VideoQualityControls';\nimport NetworkQualityIndicator from './NetworkQualityIndicator';\n\n/**\n * VideoChatRoom Component\n * \n * Main component for the video/voice chat room functionality.\n * Handles WebRTC connections, audio/video processing, and UI for the chat.\n */\nconst VideoChatRoom = ({ roomId, userId, onLeave }) => {\n  const [socket, setSocket] = useState(null);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [connectedPeers, setConnectedPeers] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState({});\n  const [audioLevels, setAudioLevels] = useState({});\n  const [connectionQualities, setConnectionQualities] = useState({});\n  const [error, setError] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [showQRCode, setShowQRCode] = useState(false);\n  \n  // Video-related state\n  const [isVideoEnabled, setIsVideoEnabled] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [cameraStatus, setCameraStatus] = useState(null);\n  const [localVideoStream, setLocalVideoStream] = useState(null);\n  const [remoteVideoStreams, setRemoteVideoStreams] = useState({});\n  \n  // Phase 2 features - Video quality and network monitoring\n  const [currentVideoQuality, setCurrentVideoQuality] = useState('high');\n  const [networkQuality, setNetworkQuality] = useState(100);\n  const [networkMetrics, setNetworkMetrics] = useState(null);\n  \n  // References\n  const audioRefs = useRef({});\n  const animationFrameRef = useRef(null);\n  \n  // Initialize socket and WebRTC manager\n  useEffect(() => {\n    // Create socket connection to signaling server\n    const newSocket = io(process.env.REACT_APP_SIGNALING_SERVER || window.location.origin, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: window.location.protocol === 'https:',\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n    \n    setSocket(newSocket);\n    \n    // Socket event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to signaling server');\n    });\n    \n    newSocket.on('connect_error', (err) => {\n      console.error('Connection error:', err);\n      setError('Failed to connect to the signaling server. Please try again.');\n    });\n    \n    // Clean up on unmount\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      \n      newSocket.disconnect();\n    };\n  }, []);\n  \n  // Initialize WebRTC manager when socket is ready\n  useEffect(() => {\n    if (!socket || !roomId) return;\n    \n    const manager = new WebRTCManager(socket, {\n      userId,\n      onPeerConnect: handlePeerConnect,\n      onPeerDisconnect: handlePeerDisconnect,\n      onSpeakingChange: handleSpeakingChange,\n      onAudioQualityChange: handleAudioQualityChange,\n      onError: (errorMsg) => setError(errorMsg),\n      onMicrophoneStatus: handleMicrophoneStatus,\n      onCameraStatus: handleCameraStatus,\n      onLocalVideo: handleLocalVideo,\n      onRemoteVideo: handleRemoteVideo,\n      onVideoStatusChange: handleVideoStatusChange,\n      onNetworkQualityChange: handleNetworkQualityChange, // Phase 2 - Network quality monitoring\n    });\n    \n    setWebrtcManager(manager);\n    \n    // Initialize WebRTC and join room\n    manager.initialize(roomId)\n      .then(() => {\n        setIsConnecting(false);\n        startAudioLevelMonitoring(manager);\n        \n        // Get available video devices\n        manager.getVideoDevices().then(devices => {\n          setVideoDevices(devices);\n        });\n        \n        // Set initial video quality (Phase 2)\n        if (manager.setVideoQuality) {\n          manager.setVideoQuality(currentVideoQuality);\n        }\n      })\n      .catch((err) => {\n        console.error('Failed to initialize WebRTC:', err);\n        setError('Failed to access microphone. Please check your permissions.');\n        setIsConnecting(false);\n      });\n    \n    // Clean up on unmount\n    return () => {\n      if (manager) {\n        manager.dispose();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [socket, roomId, userId]);\n  \n  // Handle peer connection\n  const handlePeerConnect = (peerId, stream) => {\n    console.log(`Peer connected: ${peerId}`);\n    \n    // Add to connected peers\n    setConnectedPeers((prevPeers) => {\n      if (!prevPeers.includes(peerId)) {\n        return [...prevPeers, peerId];\n      }\n      return prevPeers;\n    });\n    \n    // Create audio element for peer\n    if (stream) {\n      const audioElement = new Audio();\n      audioElement.srcObject = stream;\n      audioElement.autoplay = true;\n      \n      // Store audio element reference\n      audioRefs.current[peerId] = audioElement;\n      \n      // Start playing\n      audioElement.play().catch((err) => {\n        console.error('Error playing audio:', err);\n      });\n    }\n  };\n  \n  // Handle peer disconnection\n  const handlePeerDisconnect = (peerId) => {\n    console.log(`Peer disconnected: ${peerId}`);\n    \n    // Remove from connected peers\n    setConnectedPeers((prevPeers) => prevPeers.filter((id) => id !== peerId));\n    \n    // Remove speaking status\n    setPeerSpeaking((prevState) => {\n      const newState = { ...prevState };\n      delete newState[peerId];\n      return newState;\n    });\n    \n    // Remove audio levels\n    setAudioLevels((prevLevels) => {\n      const newLevels = { ...prevLevels };\n      delete newLevels[peerId];\n      return newLevels;\n    });\n    \n    // Remove connection quality\n    setConnectionQualities((prevQualities) => {\n      const newQualities = { ...prevQualities };\n      delete newQualities[peerId];\n      return newQualities;\n    });\n    \n    // Remove video stream\n    setRemoteVideoStreams((prevStreams) => {\n      const newStreams = { ...prevStreams };\n      delete newStreams[peerId];\n      return newStreams;\n    });\n    \n    // Clean up audio element\n    if (audioRefs.current[peerId]) {\n      audioRefs.current[peerId].srcObject = null;\n      delete audioRefs.current[peerId];\n    }\n  };\n  \n  // Handle speaking change\n  const handleSpeakingChange = (speaking) => {\n    setIsSpeaking(speaking);\n  };\n  \n  // Handle remote peer speaking change\n  const handlePeerSpeakingChange = (peerId, speaking) => {\n    setPeerSpeaking((prevState) => ({\n      ...prevState,\n      [peerId]: speaking,\n    }));\n  };\n  \n  // Handle audio quality change\n  const handleAudioQualityChange = (peerId, quality, metrics) => {\n    setConnectionQualities((prevQualities) => ({\n      ...prevQualities,\n      [peerId]: { quality, metrics },\n    }));\n  };\n  \n  // Handle microphone status change\n  const handleMicrophoneStatus = (status) => {\n    // This can be used to show microphone permission UI if needed\n    console.log('Microphone status:', status);\n  };\n  \n  // Handle camera status change\n  const handleCameraStatus = (status) => {\n    setCameraStatus(status);\n  };\n  \n  // Handle local video stream\n  const handleLocalVideo = (stream) => {\n    setLocalVideoStream(stream);\n  };\n  \n  // Handle remote video stream\n  const handleRemoteVideo = (peerId, stream) => {\n    setRemoteVideoStreams((prevStreams) => ({\n      ...prevStreams,\n      [peerId]: stream,\n    }));\n  };\n  \n  // Handle video status change\n  const handleVideoStatusChange = (enabled) => {\n    setIsVideoEnabled(enabled);\n  };\n  \n  // Handle network quality change\n  const handleNetworkQualityChange = (quality, metrics) => {\n    setNetworkQuality(quality);\n    setNetworkMetrics(metrics);\n  };\n  \n  // Handle video quality change (Phase 2)\n  const handleVideoQualityChange = (qualityPreset) => {\n    if (webrtcManager && webrtcManager.setVideoQuality) {\n      webrtcManager.setVideoQuality(qualityPreset.id);\n      setCurrentVideoQuality(qualityPreset.id);\n    }\n  };\n  \n  // Start monitoring audio levels\n  const startAudioLevelMonitoring = (manager) => {\n    const updateAudioLevels = () => {\n      if (!manager) return;\n      \n      // Update local audio level\n      const localLevel = manager.getAudioLevel();\n      \n      setAudioLevels((prevLevels) => ({\n        ...prevLevels,\n        local: localLevel,\n      }));\n      \n      // Continue monitoring\n      animationFrameRef.current = requestAnimationFrame(updateAudioLevels);\n    };\n    \n    // Start monitoring\n    updateAudioLevels();\n  };\n  \n  // Toggle mute\n  const handleToggleMute = () => {\n    if (webrtcManager) {\n      const newMuteState = webrtcManager.toggleMute();\n      setIsMuted(newMuteState);\n    }\n  };\n  \n  // Toggle video\n  const handleToggleVideo = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n  \n  // Switch camera\n  const handleSwitchCamera = async (deviceId) => {\n    if (webrtcManager) {\n      await webrtcManager.switchCamera(deviceId);\n    }\n  };\n  \n  // Retry camera access\n  const handleRetryCameraAccess = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n  \n  // Leave room\n  const handleLeaveRoom = () => {\n    if (webrtcManager) {\n      webrtcManager.leaveRoom();\n    }\n    \n    if (onLeave) {\n      onLeave();\n    }\n  };\n  \n  // Toggle QR code display\n  const handleToggleQRCode = () => {\n    setShowQRCode((prev) => !prev);\n  };\n  \n  // Generate connection data for QR code\n  const getConnectionData = () => {\n    return JSON.stringify({\n      roomId,\n      server: window.location.origin,\n    });\n  };\n  \n  // Calculate grid columns based on number of participants\n  const getGridColumns = () => {\n    const totalParticipants = 1 + connectedPeers.length; // Local user + peers\n    \n    if (totalParticipants === 1) return 'grid-cols-1';\n    if (totalParticipants === 2) return 'grid-cols-1 md:grid-cols-2';\n    if (totalParticipants <= 4) return 'grid-cols-2';\n    if (totalParticipants <= 6) return 'grid-cols-2 md:grid-cols-3';\n    return 'grid-cols-2 md:grid-cols-3 lg:grid-cols-4';\n  };\n  \n  return (\n    <div className=\"flex flex-col h-full bg-gradient-to-b from-white to-gray-50\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-white shadow-sm\">\n        <div className=\"flex items-center space-x-2\">\n          <h2 className=\"text-lg font-medium text-gray-900\">Room: {roomId}</h2>\n          <div className=\"text-sm text-gray-500\">\n            {connectedPeers.length} {connectedPeers.length === 1 ? 'peer' : 'peers'} connected\n          </div>\n          {/* Network quality indicator (Phase 2) */}\n          <div className=\"flex items-center ml-4\">\n            <span className=\"text-sm text-gray-500 mr-2\">Network:</span>\n            <NetworkQualityIndicator quality={networkQuality} />\n            {networkMetrics && (\n              <div className=\"ml-2 text-xs text-gray-500\">\n                {networkMetrics.bitrate ? `${Math.round(networkMetrics.bitrate / 1000)} kbps` : ''}\n                {networkMetrics.rtt ? ` | ${Math.round(networkMetrics.rtt)}ms` : ''}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleToggleQRCode}\n            className={clsx(\n              'inline-flex items-center justify-center px-2 py-[calc(--spacing(1.5)-1px)]',\n              'rounded-lg border border-transparent ring-1 shadow-sm ring-black/10',\n              'text-sm font-medium whitespace-nowrap text-gray-950',\n              'data-hover:bg-gray-50'\n            )}\n            aria-label={showQRCode ? \"Hide QR code\" : \"Show QR code for connection\"}\n          >\n            {showQRCode ? \"Hide QR\" : \"Show QR\"}\n          </button>\n          \n          <button\n            onClick={handleToggleMute}\n            className={clsx(\n              'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]',\n              'rounded-full border border-transparent shadow-md',\n              'text-base font-medium whitespace-nowrap',\n              isMuted ? \n                'bg-white/15 ring-1 ring-[#D15052]/15 text-gray-950 data-hover:bg-white/20' : \n                'bg-gray-950 text-white data-hover:bg-gray-800',\n              'after:absolute after:inset-0 after:rounded-full after:shadow-[inset_0_0_2px_1px_#ffffff4d]'\n            )}\n            aria-label={isMuted ? \"Unmute microphone\" : \"Mute microphone\"}\n          >\n            {isMuted ? (\n              <>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-5 h-5 mr-2\">\n                  <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n                  <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n                  <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n                  <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n                  <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n                </svg>\n                Unmute\n              </>\n            ) : (\n              <>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-5 h-5 mr-2\">\n                  <path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path>\n                  <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n                  <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n                  <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n                </svg>\n                Mute\n              </>\n            )}\n          </button>\n          \n          <VideoControls \n            isVideoEnabled={isVideoEnabled}\n            onToggleVideo={handleToggleVideo}\n            onSwitchCamera={handleSwitchCamera}\n            videoDevices={videoDevices}\n          />\n          \n          <VideoQualityControls \n            currentQuality={currentVideoQuality}\n            onQualityChange={handleVideoQualityChange}\n          />\n          \n          <button\n            onClick={handleLeaveRoom}\n            className={clsx(\n              'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]',\n              'rounded-full border border-transparent bg-[#D15052] shadow-md',\n              'text-base font-medium whitespace-nowrap text-white',\n              'data-hover:bg-[#C04042]'\n            )}\n            aria-label=\"Leave chat room\"\n          >\n            Leave\n          </button>\n        </div>\n      </div>\n      \n      {/* Main content */}\n      <div className=\"flex-1 p-4 overflow-auto\">\n        {isConnecting ? (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            <div className=\"text-lg font-medium mb-2 text-gray-900\">Connecting...</div>\n            <div className=\"text-sm text-gray-500\">\n              Setting up secure connection\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            <div className=\"text-lg font-medium text-[#D15052] mb-2\">Error</div>\n            <div className=\"text-sm text-gray-500 mb-4\">{error}</div>\n            <button\n              onClick={handleLeaveRoom}\n              className={clsx(\n                'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]',\n                'rounded-full border border-transparent bg-gray-950 shadow-md',\n                'text-base font-medium whitespace-nowrap text-white',\n                'data-hover:bg-gray-800'\n              )}\n            >\n              Go Back\n            </button>\n          </div>\n        ) : (\n          <div className=\"flex flex-col space-y-4\">\n            {/* QR Code */}\n            {showQRCode && (\n              <div className=\"bg-white p-6 rounded-xl shadow-md mx-auto max-w-xs\">\n                <QRCodeGenerator\n                  connectionData={getConnectionData()}\n                  className=\"mx-auto\"\n                />\n                <p className=\"text-center mt-4 text-sm text-gray-500\">\n                  Scan to join this room\n                </p>\n              </div>\n            )}\n            \n            {/* Camera permission guide */}\n            {cameraStatus && cameraStatus.status !== 'granted' && isVideoEnabled && (\n              <CameraPermissionGuide\n                status={cameraStatus.status}\n                instructions={cameraStatus.instructions}\n                browser={cameraStatus.browser?.name}\n                onRetry={handleRetryCameraAccess}\n                className=\"mx-auto max-w-md\"\n              />\n            )}\n            \n            {/* Video grid */}\n            <div className={clsx(\n              'grid gap-4',\n              getGridColumns(),\n              'auto-rows-fr'\n            )}>\n              {/* Local user */}\n              <VideoContainer\n                stream={localVideoStream}\n                isMuted={true}\n                isLocal={true}\n                displayName={userId}\n                isSpeaking={isSpeaking}\n                isVideoEnabled={isVideoEnabled && localVideoStream !== null}\n                connectionQuality={networkQuality}\n                className=\"aspect-video h-full\"\n              />\n              \n              {/* Connected peers */}\n              {connectedPeers.map((peerId) => (\n                <VideoContainer\n                  key={peerId}\n                  stream={remoteVideoStreams[peerId]}\n                  isMuted={false}\n                  isLocal={false}\n                  displayName={peerId}\n                  isSpeaking={peerSpeaking[peerId] || false}\n                  isVideoEnabled={remoteVideoStreams[peerId] !== undefined}\n                  connectionQuality={connectionQualities[peerId]?.quality || 100}\n                  className=\"aspect-video h-full\"\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoChatRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}