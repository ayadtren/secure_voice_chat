{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{io}from'socket.io-client';import'./App.css';import UserList from'./components/UserList';import AudioControls from'./components/AudioControls';import ConnectionStatus from'./components/ConnectionStatus';import Login from'./components/Login';import{WebRTCManager}from'./utils/webrtcManager';import QRCodeGenerator from'./components/QRCodeGenerator';import QRCodeScanner from'./components/QRCodeScanner';import{Button}from'./components/ui/button';// Configuration\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const SERVER_URL=process.env.REACT_APP_SERVER_URL||window.location.origin;function App(){// State\nconst[socket,setSocket]=useState(null);const[connected,setConnected]=useState(false);const[username,setUsername]=useState('');const[users,setUsers]=useState([]);const[currentCall,setCurrentCall]=useState(null);const[callStatus,setCallStatus]=useState('idle');// idle, calling, connected\nconst[audioEnabled,setAudioEnabled]=useState(true);const[networkQuality,setNetworkQuality]=useState(100);// 0-100\nconst[darkMode,setDarkMode]=useState(window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches);const[showQRCode,setShowQRCode]=useState(false);const[showQRScanner,setShowQRScanner]=useState(false);const[isSpeaking,setIsSpeaking]=useState(false);const[peerSpeaking,setPeerSpeaking]=useState(false);const[webrtcManager,setWebrtcManager]=useState(null);// Refs\nconst localStream=useRef(null);const localAudioRef=useRef(null);const remoteAudioRef=useRef(null);// Cleanup local audio stream\nconst cleanupLocalStream=()=>{if(localStream.current){const tracks=localStream.current.getTracks();tracks.forEach(track=>track.stop());localStream.current=null;}if(localAudioRef.current){localAudioRef.current.srcObject=null;}};// Handle call end (cleanup)\nconst handleCallEnd=useCallback(()=>{if(webrtcManager){webrtcManager.dispose();setWebrtcManager(null);}cleanupLocalStream();setCurrentCall(null);setCallStatus('idle');setNetworkQuality(100);setIsSpeaking(false);setPeerSpeaking(false);},[webrtcManager]);// Initialize socket connection\nuseEffect(()=>{const newSocket=io(SERVER_URL,{reconnectionAttempts:10,reconnectionDelay:1000,reconnectionDelayMax:5000,timeout:20000});setSocket(newSocket);// Socket event listeners\nnewSocket.on('connect',()=>{console.log('Connected to server');setConnected(true);});newSocket.on('disconnect',()=>{console.log('Disconnected from server');setConnected(false);handleCallEnd();});newSocket.on('error',error=>{console.error('Socket error:',error);alert(`Error: ${error.message}`);});newSocket.on('userList',userList=>{setUsers(userList.filter(user=>user.id!==newSocket.id));});newSocket.on('registered',data=>{console.log('Registered as:',data.username);setUsername(data.username);});// WebRTC signaling events\nnewSocket.on('offer',async _ref=>{let{from,offer}=_ref;console.log('Received offer from:',from);// If already in a call, reject\nif(callStatus!=='idle'){newSocket.emit('busy',{target:from});return;}// Get caller info\nconst caller=users.find(user=>user.id===from);if(!caller)return;// Ask user to accept call\nconst accept=window.confirm(`Incoming call from ${caller.username}. Accept?`);if(!accept){newSocket.emit('reject',{target:from});return;}try{// Setup WebRTC connection using enhanced manager\nconst manager=new WebRTCManager(newSocket,{userId:newSocket.id,onPeerConnect:(peerId,stream)=>{if(remoteAudioRef.current&&stream){remoteAudioRef.current.srcObject=stream;}setCallStatus('connected');},onPeerDisconnect:()=>{handleCallEnd();},onSpeakingChange:speaking=>{setIsSpeaking(speaking);},onAudioQualityChange:(peerId,quality)=>{setNetworkQuality(Math.round(quality));},onError:error=>{console.error('WebRTC error:',error);alert(`WebRTC error: ${error}`);}});setWebrtcManager(manager);// Initialize and accept the call\nawait manager.initialize(from);await manager.acceptIncomingCall(from,offer);setCurrentCall(caller);setCallStatus('connected');}catch(error){console.error('Error accepting call:',error);alert('Failed to accept call. Please try again.');}});newSocket.on('answer',async _ref2=>{let{from,answer}=_ref2;console.log('Received answer from:',from);if(!webrtcManager||callStatus!=='calling')return;try{await webrtcManager.handleAnswer(from,answer);console.log('Remote description set successfully');setCallStatus('connected');}catch(error){console.error('Error setting remote description:',error);handleCallEnd();}});newSocket.on('iceCandidate',async _ref3=>{let{from,candidate}=_ref3;console.log('Received ICE candidate from:',from);if(!webrtcManager)return;try{await webrtcManager.addIceCandidate(from,candidate);console.log('Added ICE candidate successfully');}catch(error){console.error('Error adding ICE candidate:',error);}});newSocket.on('speaking',_ref4=>{let{userId,speaking}=_ref4;if(currentCall&&userId===currentCall.id){setPeerSpeaking(speaking);}});newSocket.on('reject',()=>{alert('Call was rejected');handleCallEnd();});newSocket.on('busy',()=>{alert('User is busy');handleCallEnd();});newSocket.on('callEnded',()=>{alert('Call ended by the other user');handleCallEnd();});// Cleanup on unmount\nreturn()=>{if(newSocket){newSocket.disconnect();}cleanupLocalStream();if(webrtcManager){webrtcManager.dispose();}};},[callStatus,currentCall,handleCallEnd,users,webrtcManager]);// Handle dark mode preference changes\nuseEffect(()=>{const mediaQuery=window.matchMedia('(prefers-color-scheme: dark)');const handleChange=e=>setDarkMode(e.matches);mediaQuery.addEventListener('change',handleChange);return()=>mediaQuery.removeEventListener('change',handleChange);},[]);// Apply dark mode class to body\nuseEffect(()=>{if(darkMode){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}},[darkMode]);// Handle user registration\nconst handleLogin=async username=>{if(!socket||!connected){alert('Not connected to server');return;}socket.emit('register',{username});};// Start a call with a user\nconst startCall=async targetUser=>{if(callStatus!=='idle')return;try{// Create new WebRTC manager\nconst manager=new WebRTCManager(socket,{userId:socket.id,onPeerConnect:(peerId,stream)=>{if(remoteAudioRef.current&&stream){remoteAudioRef.current.srcObject=stream;}setCallStatus('connected');},onPeerDisconnect:()=>{handleCallEnd();},onSpeakingChange:speaking=>{setIsSpeaking(speaking);},onAudioQualityChange:(peerId,quality)=>{setNetworkQuality(Math.round(quality));},onError:error=>{console.error('WebRTC error:',error);alert(`WebRTC error: ${error}`);}});setWebrtcManager(manager);// Initialize and start the call\nawait manager.initialize(targetUser.id);await manager.startCall(targetUser.id);setCurrentCall(targetUser);setCallStatus('calling');}catch(error){console.error('Error starting call:',error);alert('Failed to start call. Please try again.');handleCallEnd();}};// End the current call\nconst endCall=()=>{if(!socket||!currentCall)return;socket.emit('callEnded',{target:currentCall.id});handleCallEnd();};// Toggle microphone\nconst toggleMicrophone=()=>{if(webrtcManager){const enabled=webrtcManager.toggleMicrophone();setAudioEnabled(enabled);}else if(localStream.current){const audioTrack=localStream.current.getAudioTracks()[0];if(audioTrack){audioTrack.enabled=!audioTrack.enabled;setAudioEnabled(audioTrack.enabled);}}};// Toggle dark mode\nconst toggleDarkMode=()=>{setDarkMode(!darkMode);};// Handle QR code scan result\nconst handleQRScan=data=>{try{const connectionData=JSON.parse(data);if(connectionData.roomId&&connectionData.userId){// Start call with scanned user\nconst user={id:connectionData.userId,username:connectionData.username||'User via QR'};startCall(user);setShowQRScanner(false);}}catch(error){console.error('Invalid QR code data:',error);alert('Invalid QR code. Please try again.');}};// Generate QR code data\nconst getQRCodeData=()=>{return JSON.stringify({roomId:socket===null||socket===void 0?void 0:socket.id,userId:socket===null||socket===void 0?void 0:socket.id,username:username});};return/*#__PURE__*/_jsxs(\"div\",{className:`app ${darkMode?'dark-mode':'light-mode'}`,children:[/*#__PURE__*/_jsxs(\"header\",{className:\"app-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Secure Voice Chat\"}),/*#__PURE__*/_jsx(\"button\",{className:\"theme-toggle\",onClick:toggleDarkMode,\"aria-label\":darkMode?'Switch to light mode':'Switch to dark mode',children:darkMode?'☀️':'🌙'})]}),/*#__PURE__*/_jsx(\"main\",{className:\"app-content\",children:!username?/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,connected:connected}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ConnectionStatus,{connected:connected,callStatus:callStatus,currentCall:currentCall,networkQuality:networkQuality,isSpeaking:isSpeaking,peerSpeaking:peerSpeaking}),callStatus==='idle'?/*#__PURE__*/_jsxs(\"div\",{className:\"connection-options\",children:[/*#__PURE__*/_jsx(UserList,{users:users,onCallUser:startCall}),/*#__PURE__*/_jsxs(\"div\",{className:\"qr-options\",children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setShowQRCode(!showQRCode),variant:\"outline\",children:showQRCode?'Hide QR Code':'Show QR Code'}),/*#__PURE__*/_jsx(Button,{onClick:()=>setShowQRScanner(!showQRScanner),variant:\"outline\",children:showQRScanner?'Hide QR Scanner':'Scan QR Code'}),showQRCode&&/*#__PURE__*/_jsx(\"div\",{className:\"qr-container\",children:/*#__PURE__*/_jsx(QRCodeGenerator,{data:getQRCodeData(),size:200,title:\"Scan to connect with me\"})}),showQRScanner&&/*#__PURE__*/_jsx(\"div\",{className:\"qr-container\",children:/*#__PURE__*/_jsx(QRCodeScanner,{onScan:handleQRScan,onError:error=>console.error('QR scan error:',error),onClose:()=>setShowQRScanner(false)})})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"call-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:callStatus==='calling'?`Calling ${currentCall===null||currentCall===void 0?void 0:currentCall.username}...`:`In call with ${currentCall===null||currentCall===void 0?void 0:currentCall.username}`}),/*#__PURE__*/_jsxs(\"div\",{className:\"speaking-indicators\",children:[isSpeaking&&/*#__PURE__*/_jsx(\"div\",{className:\"speaking-indicator you\",children:\"You are speaking\"}),peerSpeaking&&/*#__PURE__*/_jsxs(\"div\",{className:\"speaking-indicator peer\",children:[currentCall===null||currentCall===void 0?void 0:currentCall.username,\" is speaking\"]})]}),/*#__PURE__*/_jsx(AudioControls,{audioEnabled:audioEnabled,onToggleMicrophone:toggleMicrophone,onEndCall:endCall})]})]})}),/*#__PURE__*/_jsx(\"footer\",{className:\"app-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"End-to-end encrypted \\u2022 Zero persistence \\u2022 Local network only\"})}),/*#__PURE__*/_jsx(\"audio\",{ref:localAudioRef,muted:true,autoPlay:true,playsInline:true}),/*#__PURE__*/_jsx(\"audio\",{ref:remoteAudioRef,autoPlay:true,playsInline:true})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","UserList","AudioControls","ConnectionStatus","Login","WebRTCManager","QRCodeGenerator","QRCodeScanner","Button","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","SERVER_URL","process","env","REACT_APP_SERVER_URL","window","location","origin","App","socket","setSocket","connected","setConnected","username","setUsername","users","setUsers","currentCall","setCurrentCall","callStatus","setCallStatus","audioEnabled","setAudioEnabled","networkQuality","setNetworkQuality","darkMode","setDarkMode","matchMedia","matches","showQRCode","setShowQRCode","showQRScanner","setShowQRScanner","isSpeaking","setIsSpeaking","peerSpeaking","setPeerSpeaking","webrtcManager","setWebrtcManager","localStream","localAudioRef","remoteAudioRef","cleanupLocalStream","current","tracks","getTracks","forEach","track","stop","srcObject","handleCallEnd","dispose","newSocket","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","on","console","log","error","alert","message","userList","filter","user","id","data","_ref","from","offer","emit","target","caller","find","accept","confirm","manager","userId","onPeerConnect","peerId","stream","onPeerDisconnect","onSpeakingChange","speaking","onAudioQualityChange","quality","Math","round","onError","initialize","acceptIncomingCall","_ref2","answer","handleAnswer","_ref3","candidate","addIceCandidate","_ref4","disconnect","mediaQuery","handleChange","e","addEventListener","removeEventListener","document","body","classList","add","remove","handleLogin","startCall","targetUser","endCall","toggleMicrophone","enabled","audioTrack","getAudioTracks","toggleDarkMode","handleQRScan","connectionData","JSON","parse","roomId","getQRCodeData","stringify","className","children","onClick","onLogin","onCallUser","variant","size","title","onScan","onClose","onToggleMicrophone","onEndCall","ref","muted","autoPlay","playsInline"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport UserList from './components/UserList';\nimport AudioControls from './components/AudioControls';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport Login from './components/Login';\nimport { WebRTCManager } from './utils/webrtcManager';\nimport QRCodeGenerator from './components/QRCodeGenerator';\nimport QRCodeScanner from './components/QRCodeScanner';\nimport { Button } from './components/ui/button';\n\n// Configuration\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || window.location.origin;\n\nfunction App() {\n  // State\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n  const [currentCall, setCurrentCall] = useState(null);\n  const [callStatus, setCallStatus] = useState('idle'); // idle, calling, connected\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [networkQuality, setNetworkQuality] = useState(100); // 0-100\n  const [darkMode, setDarkMode] = useState(\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [showQRScanner, setShowQRScanner] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState(false);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  \n  // Refs\n  const localStream = useRef(null);\n  const localAudioRef = useRef(null);\n  const remoteAudioRef = useRef(null);\n  \n  // Cleanup local audio stream\n  const cleanupLocalStream = () => {\n    if (localStream.current) {\n      const tracks = localStream.current.getTracks();\n      tracks.forEach(track => track.stop());\n      localStream.current = null;\n    }\n    \n    if (localAudioRef.current) {\n      localAudioRef.current.srcObject = null;\n    }\n  };\n  \n  // Handle call end (cleanup)\n  const handleCallEnd = useCallback(() => {\n    if (webrtcManager) {\n      webrtcManager.dispose();\n      setWebrtcManager(null);\n    }\n    \n    cleanupLocalStream();\n    \n    setCurrentCall(null);\n    setCallStatus('idle');\n    setNetworkQuality(100);\n    setIsSpeaking(false);\n    setPeerSpeaking(false);\n  }, [webrtcManager]);\n  \n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io(SERVER_URL, {\n      reconnectionAttempts: 10,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n    });\n    \n    setSocket(newSocket);\n    \n    // Socket event listeners\n    newSocket.on('connect', () => {\n      console.log('Connected to server');\n      setConnected(true);\n    });\n    \n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n      handleCallEnd();\n    });\n    \n    newSocket.on('error', (error) => {\n      console.error('Socket error:', error);\n      alert(`Error: ${error.message}`);\n    });\n    \n    newSocket.on('userList', (userList) => {\n      setUsers(userList.filter(user => user.id !== newSocket.id));\n    });\n    \n    newSocket.on('registered', (data) => {\n      console.log('Registered as:', data.username);\n      setUsername(data.username);\n    });\n    \n    // WebRTC signaling events\n    newSocket.on('offer', async ({ from, offer }) => {\n      console.log('Received offer from:', from);\n      \n      // If already in a call, reject\n      if (callStatus !== 'idle') {\n        newSocket.emit('busy', { target: from });\n        return;\n      }\n      \n      // Get caller info\n      const caller = users.find(user => user.id === from);\n      if (!caller) return;\n      \n      // Ask user to accept call\n      const accept = window.confirm(`Incoming call from ${caller.username}. Accept?`);\n      if (!accept) {\n        newSocket.emit('reject', { target: from });\n        return;\n      }\n      \n      try {\n        // Setup WebRTC connection using enhanced manager\n        const manager = new WebRTCManager(newSocket, {\n          userId: newSocket.id,\n          onPeerConnect: (peerId, stream) => {\n            if (remoteAudioRef.current && stream) {\n              remoteAudioRef.current.srcObject = stream;\n            }\n            setCallStatus('connected');\n          },\n          onPeerDisconnect: () => {\n            handleCallEnd();\n          },\n          onSpeakingChange: (speaking) => {\n            setIsSpeaking(speaking);\n          },\n          onAudioQualityChange: (peerId, quality) => {\n            setNetworkQuality(Math.round(quality));\n          },\n          onError: (error) => {\n            console.error('WebRTC error:', error);\n            alert(`WebRTC error: ${error}`);\n          }\n        });\n        \n        setWebrtcManager(manager);\n        \n        // Initialize and accept the call\n        await manager.initialize(from);\n        await manager.acceptIncomingCall(from, offer);\n        \n        setCurrentCall(caller);\n        setCallStatus('connected');\n        \n      } catch (error) {\n        console.error('Error accepting call:', error);\n        alert('Failed to accept call. Please try again.');\n      }\n    });\n    \n    newSocket.on('answer', async ({ from, answer }) => {\n      console.log('Received answer from:', from);\n      \n      if (!webrtcManager || callStatus !== 'calling') return;\n      \n      try {\n        await webrtcManager.handleAnswer(from, answer);\n        console.log('Remote description set successfully');\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error setting remote description:', error);\n        handleCallEnd();\n      }\n    });\n    \n    newSocket.on('iceCandidate', async ({ from, candidate }) => {\n      console.log('Received ICE candidate from:', from);\n      \n      if (!webrtcManager) return;\n      \n      try {\n        await webrtcManager.addIceCandidate(from, candidate);\n        console.log('Added ICE candidate successfully');\n      } catch (error) {\n        console.error('Error adding ICE candidate:', error);\n      }\n    });\n    \n    newSocket.on('speaking', ({ userId, speaking }) => {\n      if (currentCall && userId === currentCall.id) {\n        setPeerSpeaking(speaking);\n      }\n    });\n    \n    newSocket.on('reject', () => {\n      alert('Call was rejected');\n      handleCallEnd();\n    });\n    \n    newSocket.on('busy', () => {\n      alert('User is busy');\n      handleCallEnd();\n    });\n    \n    newSocket.on('callEnded', () => {\n      alert('Call ended by the other user');\n      handleCallEnd();\n    });\n    \n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n      cleanupLocalStream();\n      if (webrtcManager) {\n        webrtcManager.dispose();\n      }\n    };\n  }, [callStatus, currentCall, handleCallEnd, users, webrtcManager]);\n  \n  // Handle dark mode preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => setDarkMode(e.matches);\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  \n  // Apply dark mode class to body\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  \n  // Handle user registration\n  const handleLogin = async (username) => {\n    if (!socket || !connected) {\n      alert('Not connected to server');\n      return;\n    }\n    \n    socket.emit('register', { username });\n  };\n  \n  // Start a call with a user\n  const startCall = async (targetUser) => {\n    if (callStatus !== 'idle') return;\n    \n    try {\n      // Create new WebRTC manager\n      const manager = new WebRTCManager(socket, {\n        userId: socket.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: () => {\n          handleCallEnd();\n        },\n        onSpeakingChange: (speaking) => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (peerId, quality) => {\n          setNetworkQuality(Math.round(quality));\n        },\n        onError: (error) => {\n          console.error('WebRTC error:', error);\n          alert(`WebRTC error: ${error}`);\n        }\n      });\n      \n      setWebrtcManager(manager);\n      \n      // Initialize and start the call\n      await manager.initialize(targetUser.id);\n      await manager.startCall(targetUser.id);\n      \n      setCurrentCall(targetUser);\n      setCallStatus('calling');\n      \n    } catch (error) {\n      console.error('Error starting call:', error);\n      alert('Failed to start call. Please try again.');\n      handleCallEnd();\n    }\n  };\n  \n  // End the current call\n  const endCall = () => {\n    if (!socket || !currentCall) return;\n    \n    socket.emit('callEnded', { target: currentCall.id });\n    handleCallEnd();\n  };\n  \n  // Toggle microphone\n  const toggleMicrophone = () => {\n    if (webrtcManager) {\n      const enabled = webrtcManager.toggleMicrophone();\n      setAudioEnabled(enabled);\n    } else if (localStream.current) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setAudioEnabled(audioTrack.enabled);\n      }\n    }\n  };\n  \n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  \n  // Handle QR code scan result\n  const handleQRScan = (data) => {\n    try {\n      const connectionData = JSON.parse(data);\n      if (connectionData.roomId && connectionData.userId) {\n        // Start call with scanned user\n        const user = {\n          id: connectionData.userId,\n          username: connectionData.username || 'User via QR'\n        };\n        startCall(user);\n        setShowQRScanner(false);\n      }\n    } catch (error) {\n      console.error('Invalid QR code data:', error);\n      alert('Invalid QR code. Please try again.');\n    }\n  };\n  \n  // Generate QR code data\n  const getQRCodeData = () => {\n    return JSON.stringify({\n      roomId: socket?.id,\n      userId: socket?.id,\n      username: username\n    });\n  };\n  \n  return (\n    <div className={`app ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <header className=\"app-header\">\n        <h1>Secure Voice Chat</h1>\n        <button \n          className=\"theme-toggle\" \n          onClick={toggleDarkMode} \n          aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\n        >\n          {darkMode ? '☀️' : '🌙'}\n        </button>\n      </header>\n      \n      <main className=\"app-content\">\n        {!username ? (\n          <Login onLogin={handleLogin} connected={connected} />\n        ) : (\n          <>\n            <ConnectionStatus \n              connected={connected} \n              callStatus={callStatus} \n              currentCall={currentCall}\n              networkQuality={networkQuality}\n              isSpeaking={isSpeaking}\n              peerSpeaking={peerSpeaking}\n            />\n            \n            {callStatus === 'idle' ? (\n              <div className=\"connection-options\">\n                <UserList \n                  users={users} \n                  onCallUser={startCall} \n                />\n                \n                <div className=\"qr-options\">\n                  <Button \n                    onClick={() => setShowQRCode(!showQRCode)}\n                    variant=\"outline\"\n                  >\n                    {showQRCode ? 'Hide QR Code' : 'Show QR Code'}\n                  </Button>\n                  \n                  <Button \n                    onClick={() => setShowQRScanner(!showQRScanner)}\n                    variant=\"outline\"\n                  >\n                    {showQRScanner ? 'Hide QR Scanner' : 'Scan QR Code'}\n                  </Button>\n                  \n                  {showQRCode && (\n                    <div className=\"qr-container\">\n                      <QRCodeGenerator \n                        data={getQRCodeData()} \n                        size={200}\n                        title=\"Scan to connect with me\"\n                      />\n                    </div>\n                  )}\n                  \n                  {showQRScanner && (\n                    <div className=\"qr-container\">\n                      <QRCodeScanner \n                        onScan={handleQRScan}\n                        onError={(error) => console.error('QR scan error:', error)}\n                        onClose={() => setShowQRScanner(false)}\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n            ) : (\n              <div className=\"call-container\">\n                <h2>\n                  {callStatus === 'calling' \n                    ? `Calling ${currentCall?.username}...` \n                    : `In call with ${currentCall?.username}`}\n                </h2>\n                \n                <div className=\"speaking-indicators\">\n                  {isSpeaking && <div className=\"speaking-indicator you\">You are speaking</div>}\n                  {peerSpeaking && <div className=\"speaking-indicator peer\">{currentCall?.username} is speaking</div>}\n                </div>\n                \n                <AudioControls \n                  audioEnabled={audioEnabled} \n                  onToggleMicrophone={toggleMicrophone} \n                  onEndCall={endCall} \n                />\n              </div>\n            )}\n          </>\n        )}\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>End-to-end encrypted • Zero persistence • Local network only</p>\n      </footer>\n      \n      {/* Hidden audio elements */}\n      <audio ref={localAudioRef} muted autoPlay playsInline />\n      <audio ref={remoteAudioRef} autoPlay playsInline />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}