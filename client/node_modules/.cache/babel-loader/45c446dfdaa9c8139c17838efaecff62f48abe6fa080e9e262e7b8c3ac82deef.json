{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Html5Qrcode}from'html5-qrcode';import{Button}from'./ui/button';import{cn}from'../lib/utils';/**\n * QR Code Scanner Component\n * \n * Scans QR codes using device camera to facilitate easy connection between devices.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {Function} props.onScanSuccess - Callback when QR code is successfully scanned\n * @param {Function} props.onScanError - Optional callback when scanning encounters an error\n * @param {string} props.className - Optional CSS class names\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QRCodeScanner=_ref=>{let{onScanSuccess,onScanError,className}=_ref;const[scanning,setScanning]=useState(false);const[html5QrCode,setHtml5QrCode]=useState(null);const[cameras,setCameras]=useState([]);const[selectedCamera,setSelectedCamera]=useState(null);const[permissionDenied,setPermissionDenied]=useState(false);// Initialize scanner on component mount\nuseEffect(()=>{const qrCodeInstance=new Html5Qrcode('qr-reader');setHtml5QrCode(qrCodeInstance);// Get list of cameras\nHtml5Qrcode.getCameras().then(devices=>{if(devices&&devices.length){setCameras(devices);setSelectedCamera(devices[0].id);// Default to first camera\n}}).catch(err=>{console.error('Error getting cameras',err);});// Cleanup on unmount\nreturn()=>{if(qrCodeInstance&&qrCodeInstance.isScanning){qrCodeInstance.stop().catch(err=>console.error('Error stopping scanner',err));}};},[]);const startScanner=()=>{if(!html5QrCode||!selectedCamera)return;setScanning(true);setPermissionDenied(false);const config={fps:10,qrbox:{width:250,height:250},aspectRatio:1.0};html5QrCode.start(selectedCamera,config,decodedText=>{// Handle successful scan\ntry{let connectionData;// Try to parse as JSON if possible\ntry{connectionData=JSON.parse(decodedText);}catch{// If not JSON, use as string\nconnectionData=decodedText;}// Stop scanning after successful scan\nhtml5QrCode.stop().then(()=>{setScanning(false);onScanSuccess(connectionData);}).catch(err=>console.error('Error stopping scanner',err));}catch(error){console.error('Error processing QR code data:',error);if(onScanError){onScanError(error);}}},errorMessage=>{// Handle scan error (mostly for debugging)\nconsole.log('QR Code scanning error:',errorMessage);}).catch(err=>{console.error('Error starting scanner',err);if(err.toString().includes('permission')){setPermissionDenied(true);}setScanning(false);if(onScanError){onScanError(err);}});};const stopScanner=()=>{if(html5QrCode&&html5QrCode.isScanning){html5QrCode.stop().then(()=>{setScanning(false);}).catch(err=>{console.error('Error stopping scanner',err);});}};const handleCameraChange=e=>{setSelectedCamera(e.target.value);if(scanning){stopScanner();}};return/*#__PURE__*/_jsxs(\"div\",{className:cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm',className),children:[/*#__PURE__*/_jsx(\"div\",{id:\"qr-reader\",className:\"w-full max-w-[300px] h-[300px] bg-muted rounded-lg overflow-hidden\"}),permissionDenied&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 p-3 bg-destructive/10 text-destructive rounded-md text-sm\",children:\"Camera permission denied. Please allow camera access to scan QR codes.\"}),cameras.length>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 w-full\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"camera-select\",className:\"block text-sm font-medium mb-1\",children:\"Select Camera\"}),/*#__PURE__*/_jsx(\"select\",{id:\"camera-select\",value:selectedCamera||'',onChange:handleCameraChange,className:\"w-full p-2 rounded-md border border-input bg-background\",disabled:scanning,children:cameras.map(camera=>/*#__PURE__*/_jsx(\"option\",{value:camera.id,children:camera.label||`Camera ${camera.id}`},camera.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 space-x-2\",children:!scanning?/*#__PURE__*/_jsx(Button,{onClick:startScanner,disabled:!selectedCamera,\"aria-label\":\"Start scanning QR code\",children:\"Start Scanning\"}):/*#__PURE__*/_jsx(Button,{onClick:stopScanner,variant:\"secondary\",\"aria-label\":\"Stop scanning QR code\",children:\"Stop Scanning\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-sm text-muted-foreground text-center\",children:\"Point your camera at a Secure Voice Chat QR code to connect\"})]});};export default QRCodeScanner;","map":{"version":3,"names":["React","useState","useEffect","Html5Qrcode","Button","cn","jsx","_jsx","jsxs","_jsxs","QRCodeScanner","_ref","onScanSuccess","onScanError","className","scanning","setScanning","html5QrCode","setHtml5QrCode","cameras","setCameras","selectedCamera","setSelectedCamera","permissionDenied","setPermissionDenied","qrCodeInstance","getCameras","then","devices","length","id","catch","err","console","error","isScanning","stop","startScanner","config","fps","qrbox","width","height","aspectRatio","start","decodedText","connectionData","JSON","parse","errorMessage","log","toString","includes","stopScanner","handleCameraChange","e","target","value","children","htmlFor","onChange","disabled","map","camera","label","onClick","variant"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/QRCodeScanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { Button } from './ui/button';\nimport { cn } from '../lib/utils';\n\n/**\n * QR Code Scanner Component\n * \n * Scans QR codes using device camera to facilitate easy connection between devices.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {Function} props.onScanSuccess - Callback when QR code is successfully scanned\n * @param {Function} props.onScanError - Optional callback when scanning encounters an error\n * @param {string} props.className - Optional CSS class names\n */\nconst QRCodeScanner = ({ onScanSuccess, onScanError, className }) => {\n  const [scanning, setScanning] = useState(false);\n  const [html5QrCode, setHtml5QrCode] = useState(null);\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n  const [permissionDenied, setPermissionDenied] = useState(false);\n\n  // Initialize scanner on component mount\n  useEffect(() => {\n    const qrCodeInstance = new Html5Qrcode('qr-reader');\n    setHtml5QrCode(qrCodeInstance);\n\n    // Get list of cameras\n    Html5Qrcode.getCameras()\n      .then(devices => {\n        if (devices && devices.length) {\n          setCameras(devices);\n          setSelectedCamera(devices[0].id); // Default to first camera\n        }\n      })\n      .catch(err => {\n        console.error('Error getting cameras', err);\n      });\n\n    // Cleanup on unmount\n    return () => {\n      if (qrCodeInstance && qrCodeInstance.isScanning) {\n        qrCodeInstance.stop()\n          .catch(err => console.error('Error stopping scanner', err));\n      }\n    };\n  }, []);\n\n  const startScanner = () => {\n    if (!html5QrCode || !selectedCamera) return;\n\n    setScanning(true);\n    setPermissionDenied(false);\n\n    const config = {\n      fps: 10,\n      qrbox: { width: 250, height: 250 },\n      aspectRatio: 1.0,\n    };\n\n    html5QrCode.start(\n      selectedCamera,\n      config,\n      (decodedText) => {\n        // Handle successful scan\n        try {\n          let connectionData;\n          \n          // Try to parse as JSON if possible\n          try {\n            connectionData = JSON.parse(decodedText);\n          } catch {\n            // If not JSON, use as string\n            connectionData = decodedText;\n          }\n          \n          // Stop scanning after successful scan\n          html5QrCode.stop()\n            .then(() => {\n              setScanning(false);\n              onScanSuccess(connectionData);\n            })\n            .catch(err => console.error('Error stopping scanner', err));\n        } catch (error) {\n          console.error('Error processing QR code data:', error);\n          if (onScanError) {\n            onScanError(error);\n          }\n        }\n      },\n      (errorMessage) => {\n        // Handle scan error (mostly for debugging)\n        console.log('QR Code scanning error:', errorMessage);\n      }\n    ).catch(err => {\n      console.error('Error starting scanner', err);\n      if (err.toString().includes('permission')) {\n        setPermissionDenied(true);\n      }\n      setScanning(false);\n      if (onScanError) {\n        onScanError(err);\n      }\n    });\n  };\n\n  const stopScanner = () => {\n    if (html5QrCode && html5QrCode.isScanning) {\n      html5QrCode.stop()\n        .then(() => {\n          setScanning(false);\n        })\n        .catch(err => {\n          console.error('Error stopping scanner', err);\n        });\n    }\n  };\n\n  const handleCameraChange = (e) => {\n    setSelectedCamera(e.target.value);\n    if (scanning) {\n      stopScanner();\n    }\n  };\n\n  return (\n    <div className={cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm', className)}>\n      <div id=\"qr-reader\" className=\"w-full max-w-[300px] h-[300px] bg-muted rounded-lg overflow-hidden\"></div>\n      \n      {permissionDenied && (\n        <div className=\"mt-4 p-3 bg-destructive/10 text-destructive rounded-md text-sm\">\n          Camera permission denied. Please allow camera access to scan QR codes.\n        </div>\n      )}\n      \n      {cameras.length > 1 && (\n        <div className=\"mt-4 w-full\">\n          <label htmlFor=\"camera-select\" className=\"block text-sm font-medium mb-1\">\n            Select Camera\n          </label>\n          <select\n            id=\"camera-select\"\n            value={selectedCamera || ''}\n            onChange={handleCameraChange}\n            className=\"w-full p-2 rounded-md border border-input bg-background\"\n            disabled={scanning}\n          >\n            {cameras.map(camera => (\n              <option key={camera.id} value={camera.id}>\n                {camera.label || `Camera ${camera.id}`}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n      \n      <div className=\"mt-4 space-x-2\">\n        {!scanning ? (\n          <Button \n            onClick={startScanner} \n            disabled={!selectedCamera}\n            aria-label=\"Start scanning QR code\"\n          >\n            Start Scanning\n          </Button>\n        ) : (\n          <Button \n            onClick={stopScanner} \n            variant=\"secondary\"\n            aria-label=\"Stop scanning QR code\"\n          >\n            Stop Scanning\n          </Button>\n        )}\n      </div>\n      \n      <p className=\"mt-4 text-sm text-muted-foreground text-center\">\n        Point your camera at a Secure Voice Chat QR code to connect\n      </p>\n    </div>\n  );\n};\n\nexport default QRCodeScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}