{"ast":null,"code":"import React from'react';/**\n * ConnectionStatus component displays the current connection state\n * and call status, as well as network quality indicators\n */import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function ConnectionStatus(_ref){let{connected,callStatus,currentCall,networkQuality,isSpeaking,peerSpeaking}=_ref;// Determine status text based on connection and call state\nlet statusText=connected?'Connected to server':'Disconnected from server';if(connected&&callStatus==='calling'){statusText=`Calling ${currentCall===null||currentCall===void 0?void 0:currentCall.username}...`;}else if(connected&&callStatus==='connected'){statusText=`In call with ${currentCall===null||currentCall===void 0?void 0:currentCall.username}`;}// Determine quality color based on network quality\nlet qualityColor='#4caf50';// Good (green)\nif(networkQuality<50){qualityColor='#f44336';// Poor (red)\n}else if(networkQuality<80){qualityColor='#ff9800';// Fair (orange)\n}return/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status\",children:[/*#__PURE__*/_jsx(\"div\",{className:`status-indicator ${connected?'status-connected':'status-disconnected'}`,title:connected?'Connected':'Disconnected',\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"span\",{children:statusText}),callStatus==='connected'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"network-quality\",title:`Network quality: ${networkQuality}%`,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Quality:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"quality-indicator\",children:/*#__PURE__*/_jsx(\"div\",{className:\"quality-bar\",style:{width:`${networkQuality}%`,backgroundColor:qualityColor},\"aria-label\":`Network quality: ${networkQuality}%`})})]}),isSpeaking&&/*#__PURE__*/_jsx(\"div\",{className:\"status-speaking you\",title:\"You are speaking\",children:/*#__PURE__*/_jsx(\"span\",{className:\"speaking-dot\"})}),peerSpeaking&&/*#__PURE__*/_jsx(\"div\",{className:\"status-speaking peer\",title:`${currentCall===null||currentCall===void 0?void 0:currentCall.username} is speaking`,children:/*#__PURE__*/_jsx(\"span\",{className:\"speaking-dot peer\"})})]})]});}export default ConnectionStatus;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ConnectionStatus","_ref","connected","callStatus","currentCall","networkQuality","isSpeaking","peerSpeaking","statusText","username","qualityColor","className","children","title","style","width","backgroundColor"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/ConnectionStatus.js"],"sourcesContent":["import React from 'react';\n\n/**\n * ConnectionStatus component displays the current connection state\n * and call status, as well as network quality indicators\n */\nfunction ConnectionStatus({ connected, callStatus, currentCall, networkQuality, isSpeaking, peerSpeaking }) {\n  // Determine status text based on connection and call state\n  let statusText = connected ? 'Connected to server' : 'Disconnected from server';\n  \n  if (connected && callStatus === 'calling') {\n    statusText = `Calling ${currentCall?.username}...`;\n  } else if (connected && callStatus === 'connected') {\n    statusText = `In call with ${currentCall?.username}`;\n  }\n  \n  // Determine quality color based on network quality\n  let qualityColor = '#4caf50'; // Good (green)\n  \n  if (networkQuality < 50) {\n    qualityColor = '#f44336'; // Poor (red)\n  } else if (networkQuality < 80) {\n    qualityColor = '#ff9800'; // Fair (orange)\n  }\n  \n  return (\n    <div className=\"connection-status\">\n      <div \n        className={`status-indicator ${connected ? 'status-connected' : 'status-disconnected'}`}\n        title={connected ? 'Connected' : 'Disconnected'}\n        aria-hidden=\"true\"\n      />\n      \n      <span>{statusText}</span>\n      \n      {callStatus === 'connected' && (\n        <>\n          <div className=\"network-quality\" title={`Network quality: ${networkQuality}%`}>\n            <span>Quality:</span>\n            <div className=\"quality-indicator\">\n              <div \n                className=\"quality-bar\" \n                style={{ \n                  width: `${networkQuality}%`,\n                  backgroundColor: qualityColor\n                }}\n                aria-label={`Network quality: ${networkQuality}%`}\n              />\n            </div>\n          </div>\n          \n          {isSpeaking && (\n            <div className=\"status-speaking you\" title=\"You are speaking\">\n              <span className=\"speaking-dot\"></span>\n            </div>\n          )}\n          \n          {peerSpeaking && (\n            <div className=\"status-speaking peer\" title={`${currentCall?.username} is speaking`}>\n              <span className=\"speaking-dot peer\"></span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAIA,QAAS,CAAAC,gBAAgBA,CAAAC,IAAA,CAAmF,IAAlF,CAAEC,SAAS,CAAEC,UAAU,CAAEC,WAAW,CAAEC,cAAc,CAAEC,UAAU,CAAEC,YAAa,CAAC,CAAAN,IAAA,CACxG;AACA,GAAI,CAAAO,UAAU,CAAGN,SAAS,CAAG,qBAAqB,CAAG,0BAA0B,CAE/E,GAAIA,SAAS,EAAIC,UAAU,GAAK,SAAS,CAAE,CACzCK,UAAU,CAAG,WAAWJ,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEK,QAAQ,KAAK,CACpD,CAAC,IAAM,IAAIP,SAAS,EAAIC,UAAU,GAAK,WAAW,CAAE,CAClDK,UAAU,CAAG,gBAAgBJ,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEK,QAAQ,EAAE,CACtD,CAEA;AACA,GAAI,CAAAC,YAAY,CAAG,SAAS,CAAE;AAE9B,GAAIL,cAAc,CAAG,EAAE,CAAE,CACvBK,YAAY,CAAG,SAAS,CAAE;AAC5B,CAAC,IAAM,IAAIL,cAAc,CAAG,EAAE,CAAE,CAC9BK,YAAY,CAAG,SAAS,CAAE;AAC5B,CAEA,mBACEb,KAAA,QAAKc,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCjB,IAAA,QACEgB,SAAS,CAAE,oBAAoBT,SAAS,CAAG,kBAAkB,CAAG,qBAAqB,EAAG,CACxFW,KAAK,CAAEX,SAAS,CAAG,WAAW,CAAG,cAAe,CAChD,cAAY,MAAM,CACnB,CAAC,cAEFP,IAAA,SAAAiB,QAAA,CAAOJ,UAAU,CAAO,CAAC,CAExBL,UAAU,GAAK,WAAW,eACzBN,KAAA,CAAAE,SAAA,EAAAa,QAAA,eACEf,KAAA,QAAKc,SAAS,CAAC,iBAAiB,CAACE,KAAK,CAAE,oBAAoBR,cAAc,GAAI,CAAAO,QAAA,eAC5EjB,IAAA,SAAAiB,QAAA,CAAM,UAAQ,CAAM,CAAC,cACrBjB,IAAA,QAAKgB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCjB,IAAA,QACEgB,SAAS,CAAC,aAAa,CACvBG,KAAK,CAAE,CACLC,KAAK,CAAE,GAAGV,cAAc,GAAG,CAC3BW,eAAe,CAAEN,YACnB,CAAE,CACF,aAAY,oBAAoBL,cAAc,GAAI,CACnD,CAAC,CACC,CAAC,EACH,CAAC,CAELC,UAAU,eACTX,IAAA,QAAKgB,SAAS,CAAC,qBAAqB,CAACE,KAAK,CAAC,kBAAkB,CAAAD,QAAA,cAC3DjB,IAAA,SAAMgB,SAAS,CAAC,cAAc,CAAO,CAAC,CACnC,CACN,CAEAJ,YAAY,eACXZ,IAAA,QAAKgB,SAAS,CAAC,sBAAsB,CAACE,KAAK,CAAE,GAAGT,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEK,QAAQ,cAAe,CAAAG,QAAA,cAClFjB,IAAA,SAAMgB,SAAS,CAAC,mBAAmB,CAAO,CAAC,CACxC,CACN,EACD,CACH,EACE,CAAC,CAEV,CAEA,cAAe,CAAAX,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}