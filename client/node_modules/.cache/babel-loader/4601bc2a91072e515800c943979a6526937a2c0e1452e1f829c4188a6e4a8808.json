{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/components/NetworkQualityIndicator.jsx\";\nimport React from 'react';\nimport { cn } from '../lib/utils';\n\n/**\n * Network Quality Indicator component\n * Displays a visual representation of network quality\n * \n * @param {Object} props - Component properties\n * @param {number} props.quality - Network quality score (0-100)\n * @param {string} props.className - Additional CSS classes\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkQualityIndicator = ({\n  quality = 100,\n  className\n}) => {\n  // Determine quality level\n  const getQualityLevel = () => {\n    if (quality >= 80) return 'excellent';\n    if (quality >= 60) return 'good';\n    if (quality >= 40) return 'fair';\n    if (quality >= 20) return 'poor';\n    return 'critical';\n  };\n  const qualityLevel = getQualityLevel();\n\n  // Determine how many bars to fill based on quality\n  const getFilledBars = () => {\n    if (quality >= 80) return 4;\n    if (quality >= 60) return 3;\n    if (quality >= 40) return 2;\n    if (quality >= 20) return 1;\n    return 0;\n  };\n  const filledBars = getFilledBars();\n\n  // Generate bars\n  const bars = Array.from({\n    length: 4\n  }, (_, i) => {\n    const isFilled = i < filledBars;\n    const barHeight = `${(i + 1) * 3}px`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn(\"w-1 rounded-sm mx-[1px] transition-colors duration-300\", isFilled ? {\n        'bg-green-500': qualityLevel === 'excellent',\n        'bg-green-400': qualityLevel === 'good',\n        'bg-yellow-400': qualityLevel === 'fair',\n        'bg-orange-400': qualityLevel === 'poor',\n        'bg-red-500': qualityLevel === 'critical'\n      } : 'bg-gray-300 dark:bg-gray-700'),\n      style: {\n        height: barHeight\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn(\"flex items-end h-4\", className),\n    title: `Network Quality: ${quality}%`,\n    children: bars\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c = NetworkQualityIndicator;\nexport default NetworkQualityIndicator;\nvar _c;\n$RefreshReg$(_c, \"NetworkQualityIndicator\");","map":{"version":3,"names":["React","cn","jsxDEV","_jsxDEV","NetworkQualityIndicator","quality","className","getQualityLevel","qualityLevel","getFilledBars","filledBars","bars","Array","from","length","_","i","isFilled","barHeight","style","height","fileName","_jsxFileName","lineNumber","columnNumber","title","children","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/NetworkQualityIndicator.jsx"],"sourcesContent":["import React from 'react';\nimport { cn } from '../lib/utils';\n\n/**\n * Network Quality Indicator component\n * Displays a visual representation of network quality\n * \n * @param {Object} props - Component properties\n * @param {number} props.quality - Network quality score (0-100)\n * @param {string} props.className - Additional CSS classes\n */\nconst NetworkQualityIndicator = ({ quality = 100, className }) => {\n  // Determine quality level\n  const getQualityLevel = () => {\n    if (quality >= 80) return 'excellent';\n    if (quality >= 60) return 'good';\n    if (quality >= 40) return 'fair';\n    if (quality >= 20) return 'poor';\n    return 'critical';\n  };\n  \n  const qualityLevel = getQualityLevel();\n  \n  // Determine how many bars to fill based on quality\n  const getFilledBars = () => {\n    if (quality >= 80) return 4;\n    if (quality >= 60) return 3;\n    if (quality >= 40) return 2;\n    if (quality >= 20) return 1;\n    return 0;\n  };\n  \n  const filledBars = getFilledBars();\n  \n  // Generate bars\n  const bars = Array.from({ length: 4 }, (_, i) => {\n    const isFilled = i < filledBars;\n    const barHeight = `${(i + 1) * 3}px`;\n    \n    return (\n      <div \n        key={i}\n        className={cn(\n          \"w-1 rounded-sm mx-[1px] transition-colors duration-300\",\n          isFilled ? {\n            'bg-green-500': qualityLevel === 'excellent',\n            'bg-green-400': qualityLevel === 'good',\n            'bg-yellow-400': qualityLevel === 'fair',\n            'bg-orange-400': qualityLevel === 'poor',\n            'bg-red-500': qualityLevel === 'critical',\n          } : 'bg-gray-300 dark:bg-gray-700'\n        )}\n        style={{ height: barHeight }}\n      />\n    );\n  });\n  \n  return (\n    <div className={cn(\"flex items-end h-4\", className)} title={`Network Quality: ${quality}%`}>\n      {bars}\n    </div>\n  );\n};\n\nexport default NetworkQualityIndicator;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,cAAc;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA;AAQA,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC,OAAO,GAAG,GAAG;EAAEC;AAAU,CAAC,KAAK;EAChE;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIF,OAAO,IAAI,EAAE,EAAE,OAAO,WAAW;IACrC,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,MAAM;IAChC,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,MAAM;IAChC,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,MAAM;IAChC,OAAO,UAAU;EACnB,CAAC;EAED,MAAMG,YAAY,GAAGD,eAAe,CAAC,CAAC;;EAEtC;EACA,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIJ,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC;IAC3B,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC;IAC3B,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC;IAC3B,IAAIA,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC;IAC3B,OAAO,CAAC;EACV,CAAC;EAED,MAAMK,UAAU,GAAGD,aAAa,CAAC,CAAC;;EAElC;EACA,MAAME,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK;IAC/C,MAAMC,QAAQ,GAAGD,CAAC,GAAGN,UAAU;IAC/B,MAAMQ,SAAS,GAAG,GAAG,CAACF,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI;IAEpC,oBACEb,OAAA;MAEEG,SAAS,EAAEL,EAAE,CACX,wDAAwD,EACxDgB,QAAQ,GAAG;QACT,cAAc,EAAET,YAAY,KAAK,WAAW;QAC5C,cAAc,EAAEA,YAAY,KAAK,MAAM;QACvC,eAAe,EAAEA,YAAY,KAAK,MAAM;QACxC,eAAe,EAAEA,YAAY,KAAK,MAAM;QACxC,YAAY,EAAEA,YAAY,KAAK;MACjC,CAAC,GAAG,8BACN,CAAE;MACFW,KAAK,EAAE;QAAEC,MAAM,EAAEF;MAAU;IAAE,GAXxBF,CAAC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYP,CAAC;EAEN,CAAC,CAAC;EAEF,oBACErB,OAAA;IAAKG,SAAS,EAAEL,EAAE,CAAC,oBAAoB,EAAEK,SAAS,CAAE;IAACmB,KAAK,EAAE,oBAAoBpB,OAAO,GAAI;IAAAqB,QAAA,EACxFf;EAAI;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GAnDIvB,uBAAuB;AAqD7B,eAAeA,uBAAuB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}