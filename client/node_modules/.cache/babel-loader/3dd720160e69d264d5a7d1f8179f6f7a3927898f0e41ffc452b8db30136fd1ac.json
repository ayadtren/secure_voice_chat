{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/components/QRCodeScanner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { Button } from './ui/button';\nimport { cn } from '../lib/utils';\n\n/**\n * QR Code Scanner Component\n * \n * Scans QR codes using device camera to facilitate easy connection between devices.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {Function} props.onScan - Callback when QR code is successfully scanned\n * @param {Function} props.onError - Optional callback when scanning encounters an error\n * @param {Function} props.onClose - Optional callback when scanner is closed\n * @param {string} props.className - Optional CSS class names\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeScanner = ({\n  onScan,\n  onError,\n  onClose,\n  className\n}) => {\n  _s();\n  const [scanning, setScanning] = useState(false);\n  const [html5QrCode, setHtml5QrCode] = useState(null);\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n  const [permissionDenied, setPermissionDenied] = useState(false);\n\n  // Initialize scanner on component mount\n  useEffect(() => {\n    const qrCodeInstance = new Html5Qrcode('qr-reader');\n    setHtml5QrCode(qrCodeInstance);\n\n    // Get list of cameras\n    Html5Qrcode.getCameras().then(devices => {\n      if (devices && devices.length) {\n        setCameras(devices);\n        setSelectedCamera(devices[0].id); // Default to first camera\n      }\n    }).catch(err => {\n      console.error('Error getting cameras', err);\n      if (onError) {\n        onError(err);\n      }\n    });\n\n    // Cleanup on unmount\n    return () => {\n      if (qrCodeInstance) {\n        try {\n          if (qrCodeInstance.isScanning) {\n            qrCodeInstance.stop().catch(err => console.error('Error stopping scanner on unmount', err));\n          }\n        } catch (error) {\n          console.error('Error during QR scanner cleanup', error);\n        }\n      }\n    };\n  }, [onError]);\n  const startScanner = () => {\n    if (!html5QrCode || !selectedCamera) return;\n    setScanning(true);\n    setPermissionDenied(false);\n    const config = {\n      fps: 10,\n      qrbox: {\n        width: 250,\n        height: 250\n      },\n      aspectRatio: 1.0\n    };\n    html5QrCode.start(selectedCamera, config, decodedText => {\n      // Handle successful scan\n      try {\n        let connectionData;\n\n        // Try to parse as JSON if possible\n        try {\n          connectionData = JSON.parse(decodedText);\n        } catch {\n          // If not JSON, use as string\n          connectionData = decodedText;\n        }\n\n        // Stop scanning after successful scan\n        html5QrCode.stop().then(() => {\n          setScanning(false);\n          if (onScan) {\n            onScan(connectionData);\n          }\n        }).catch(err => {\n          console.error('Error stopping scanner after scan', err);\n          if (onError) {\n            onError(err);\n          }\n        });\n      } catch (error) {\n        console.error('Error processing QR code data:', error);\n        if (onError) {\n          onError(error);\n        }\n      }\n    }, errorMessage => {\n      // Handle scan error (mostly for debugging)\n      console.log('QR Code scanning error:', errorMessage);\n      // Don't call onError for every frame error\n    }).catch(err => {\n      console.error('Error starting scanner', err);\n      if (err.toString().includes('permission')) {\n        setPermissionDenied(true);\n      }\n      setScanning(false);\n      if (onError) {\n        onError(err);\n      }\n    });\n  };\n  const stopScanner = () => {\n    if (html5QrCode) {\n      try {\n        if (html5QrCode.isScanning) {\n          html5QrCode.stop().then(() => {\n            setScanning(false);\n            if (onClose) {\n              onClose();\n            }\n          }).catch(err => {\n            console.error('Error stopping scanner', err);\n            if (onError) {\n              onError(err);\n            }\n          });\n        } else {\n          setScanning(false);\n          if (onClose) {\n            onClose();\n          }\n        }\n      } catch (error) {\n        console.error('Error checking scanner state', error);\n        setScanning(false);\n        if (onError) {\n          onError(error);\n        }\n      }\n    }\n  };\n  const handleCameraChange = e => {\n    setSelectedCamera(e.target.value);\n    if (scanning) {\n      stopScanner();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm', className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"qr-reader\",\n      className: \"w-full max-w-[300px] h-[300px] bg-muted rounded-lg overflow-hidden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), permissionDenied && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 bg-destructive/10 text-destructive rounded-md text-sm\",\n      children: \"Camera permission denied. Please allow camera access to scan QR codes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), cameras.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-select\",\n        className: \"block text-sm font-medium mb-1\",\n        children: \"Select Camera\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"camera-select\",\n        value: selectedCamera || '',\n        onChange: handleCameraChange,\n        className: \"w-full p-2 rounded-md border border-input bg-background\",\n        disabled: scanning,\n        children: cameras.map(camera => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: camera.id,\n          children: camera.label || `Camera ${camera.id}`\n        }, camera.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 space-x-2\",\n      children: [!scanning ? /*#__PURE__*/_jsxDEV(Button, {\n        onClick: startScanner,\n        disabled: !selectedCamera,\n        \"aria-label\": \"Start scanning QR code\",\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        onClick: stopScanner,\n        variant: \"secondary\",\n        \"aria-label\": \"Stop scanning QR code\",\n        children: \"Stop Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          stopScanner();\n          if (onClose) {\n            onClose();\n          }\n        },\n        variant: \"outline\",\n        \"aria-label\": \"Close QR scanner\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-sm text-muted-foreground text-center\",\n      children: \"Point your camera at a Secure Voice Chat QR code to connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeScanner, \"ycPK+6KGkmLv6MhvXry7kFRrtKw=\");\n_c = QRCodeScanner;\nexport default QRCodeScanner;\nvar _c;\n$RefreshReg$(_c, \"QRCodeScanner\");","map":{"version":3,"names":["React","useState","useEffect","Html5Qrcode","Button","cn","jsxDEV","_jsxDEV","QRCodeScanner","onScan","onError","onClose","className","_s","scanning","setScanning","html5QrCode","setHtml5QrCode","cameras","setCameras","selectedCamera","setSelectedCamera","permissionDenied","setPermissionDenied","qrCodeInstance","getCameras","then","devices","length","id","catch","err","console","error","isScanning","stop","startScanner","config","fps","qrbox","width","height","aspectRatio","start","decodedText","connectionData","JSON","parse","errorMessage","log","toString","includes","stopScanner","handleCameraChange","e","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","disabled","map","camera","label","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/QRCodeScanner.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Html5Qrcode } from 'html5-qrcode';\nimport { Button } from './ui/button';\nimport { cn } from '../lib/utils';\n\n/**\n * QR Code Scanner Component\n * \n * Scans QR codes using device camera to facilitate easy connection between devices.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {Function} props.onScan - Callback when QR code is successfully scanned\n * @param {Function} props.onError - Optional callback when scanning encounters an error\n * @param {Function} props.onClose - Optional callback when scanner is closed\n * @param {string} props.className - Optional CSS class names\n */\nconst QRCodeScanner = ({ onScan, onError, onClose, className }) => {\n  const [scanning, setScanning] = useState(false);\n  const [html5QrCode, setHtml5QrCode] = useState(null);\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState(null);\n  const [permissionDenied, setPermissionDenied] = useState(false);\n\n  // Initialize scanner on component mount\n  useEffect(() => {\n    const qrCodeInstance = new Html5Qrcode('qr-reader');\n    setHtml5QrCode(qrCodeInstance);\n\n    // Get list of cameras\n    Html5Qrcode.getCameras()\n      .then(devices => {\n        if (devices && devices.length) {\n          setCameras(devices);\n          setSelectedCamera(devices[0].id); // Default to first camera\n        }\n      })\n      .catch(err => {\n        console.error('Error getting cameras', err);\n        if (onError) {\n          onError(err);\n        }\n      });\n\n    // Cleanup on unmount\n    return () => {\n      if (qrCodeInstance) {\n        try {\n          if (qrCodeInstance.isScanning) {\n            qrCodeInstance.stop()\n              .catch(err => console.error('Error stopping scanner on unmount', err));\n          }\n        } catch (error) {\n          console.error('Error during QR scanner cleanup', error);\n        }\n      }\n    };\n  }, [onError]);\n\n  const startScanner = () => {\n    if (!html5QrCode || !selectedCamera) return;\n\n    setScanning(true);\n    setPermissionDenied(false);\n\n    const config = {\n      fps: 10,\n      qrbox: { width: 250, height: 250 },\n      aspectRatio: 1.0,\n    };\n\n    html5QrCode.start(\n      selectedCamera,\n      config,\n      (decodedText) => {\n        // Handle successful scan\n        try {\n          let connectionData;\n          \n          // Try to parse as JSON if possible\n          try {\n            connectionData = JSON.parse(decodedText);\n          } catch {\n            // If not JSON, use as string\n            connectionData = decodedText;\n          }\n          \n          // Stop scanning after successful scan\n          html5QrCode.stop()\n            .then(() => {\n              setScanning(false);\n              if (onScan) {\n                onScan(connectionData);\n              }\n            })\n            .catch(err => {\n              console.error('Error stopping scanner after scan', err);\n              if (onError) {\n                onError(err);\n              }\n            });\n        } catch (error) {\n          console.error('Error processing QR code data:', error);\n          if (onError) {\n            onError(error);\n          }\n        }\n      },\n      (errorMessage) => {\n        // Handle scan error (mostly for debugging)\n        console.log('QR Code scanning error:', errorMessage);\n        // Don't call onError for every frame error\n      }\n    ).catch(err => {\n      console.error('Error starting scanner', err);\n      if (err.toString().includes('permission')) {\n        setPermissionDenied(true);\n      }\n      setScanning(false);\n      if (onError) {\n        onError(err);\n      }\n    });\n  };\n\n  const stopScanner = () => {\n    if (html5QrCode) {\n      try {\n        if (html5QrCode.isScanning) {\n          html5QrCode.stop()\n            .then(() => {\n              setScanning(false);\n              if (onClose) {\n                onClose();\n              }\n            })\n            .catch(err => {\n              console.error('Error stopping scanner', err);\n              if (onError) {\n                onError(err);\n              }\n            });\n        } else {\n          setScanning(false);\n          if (onClose) {\n            onClose();\n          }\n        }\n      } catch (error) {\n        console.error('Error checking scanner state', error);\n        setScanning(false);\n        if (onError) {\n          onError(error);\n        }\n      }\n    }\n  };\n\n  const handleCameraChange = (e) => {\n    setSelectedCamera(e.target.value);\n    if (scanning) {\n      stopScanner();\n    }\n  };\n\n  return (\n    <div className={cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm', className)}>\n      <div id=\"qr-reader\" className=\"w-full max-w-[300px] h-[300px] bg-muted rounded-lg overflow-hidden\"></div>\n      \n      {permissionDenied && (\n        <div className=\"mt-4 p-3 bg-destructive/10 text-destructive rounded-md text-sm\">\n          Camera permission denied. Please allow camera access to scan QR codes.\n        </div>\n      )}\n      \n      {cameras.length > 1 && (\n        <div className=\"mt-4 w-full\">\n          <label htmlFor=\"camera-select\" className=\"block text-sm font-medium mb-1\">\n            Select Camera\n          </label>\n          <select\n            id=\"camera-select\"\n            value={selectedCamera || ''}\n            onChange={handleCameraChange}\n            className=\"w-full p-2 rounded-md border border-input bg-background\"\n            disabled={scanning}\n          >\n            {cameras.map(camera => (\n              <option key={camera.id} value={camera.id}>\n                {camera.label || `Camera ${camera.id}`}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n      \n      <div className=\"mt-4 space-x-2\">\n        {!scanning ? (\n          <Button \n            onClick={startScanner} \n            disabled={!selectedCamera}\n            aria-label=\"Start scanning QR code\"\n          >\n            Start Scanning\n          </Button>\n        ) : (\n          <Button \n            onClick={stopScanner} \n            variant=\"secondary\"\n            aria-label=\"Stop scanning QR code\"\n          >\n            Stop Scanning\n          </Button>\n        )}\n        \n        <Button \n          onClick={() => {\n            stopScanner();\n            if (onClose) {\n              onClose();\n            }\n          }} \n          variant=\"outline\"\n          aria-label=\"Close QR scanner\"\n        >\n          Close\n        </Button>\n      </div>\n      \n      <p className=\"mt-4 text-sm text-muted-foreground text-center\">\n        Point your camera at a Secure Voice Chat QR code to connect\n      </p>\n    </div>\n  );\n};\n\nexport default QRCodeScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,EAAE,QAAQ,cAAc;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA,SAAAC,MAAA,IAAAC,OAAA;AAYA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMsB,cAAc,GAAG,IAAIrB,WAAW,CAAC,WAAW,CAAC;IACnDc,cAAc,CAACO,cAAc,CAAC;;IAE9B;IACArB,WAAW,CAACsB,UAAU,CAAC,CAAC,CACrBC,IAAI,CAACC,OAAO,IAAI;MACf,IAAIA,OAAO,IAAIA,OAAO,CAACC,MAAM,EAAE;QAC7BT,UAAU,CAACQ,OAAO,CAAC;QACnBN,iBAAiB,CAACM,OAAO,CAAC,CAAC,CAAC,CAACE,EAAE,CAAC,CAAC,CAAC;MACpC;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;MAC3C,IAAIrB,OAAO,EAAE;QACXA,OAAO,CAACqB,GAAG,CAAC;MACd;IACF,CAAC,CAAC;;IAEJ;IACA,OAAO,MAAM;MACX,IAAIP,cAAc,EAAE;QAClB,IAAI;UACF,IAAIA,cAAc,CAACU,UAAU,EAAE;YAC7BV,cAAc,CAACW,IAAI,CAAC,CAAC,CAClBL,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC,CAAC;UAC1E;QACF,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACzD;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAACvB,OAAO,CAAC,CAAC;EAEb,MAAM0B,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACpB,WAAW,IAAI,CAACI,cAAc,EAAE;IAErCL,WAAW,CAAC,IAAI,CAAC;IACjBQ,mBAAmB,CAAC,KAAK,CAAC;IAE1B,MAAMc,MAAM,GAAG;MACbC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAI,CAAC;MAClCC,WAAW,EAAE;IACf,CAAC;IAED1B,WAAW,CAAC2B,KAAK,CACfvB,cAAc,EACdiB,MAAM,EACLO,WAAW,IAAK;MACf;MACA,IAAI;QACF,IAAIC,cAAc;;QAElB;QACA,IAAI;UACFA,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC;QAC1C,CAAC,CAAC,MAAM;UACN;UACAC,cAAc,GAAGD,WAAW;QAC9B;;QAEA;QACA5B,WAAW,CAACmB,IAAI,CAAC,CAAC,CACfT,IAAI,CAAC,MAAM;UACVX,WAAW,CAAC,KAAK,CAAC;UAClB,IAAIN,MAAM,EAAE;YACVA,MAAM,CAACoC,cAAc,CAAC;UACxB;QACF,CAAC,CAAC,CACDf,KAAK,CAACC,GAAG,IAAI;UACZC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC;UACvD,IAAIrB,OAAO,EAAE;YACXA,OAAO,CAACqB,GAAG,CAAC;UACd;QACF,CAAC,CAAC;MACN,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD,IAAIvB,OAAO,EAAE;UACXA,OAAO,CAACuB,KAAK,CAAC;QAChB;MACF;IACF,CAAC,EACAe,YAAY,IAAK;MAChB;MACAhB,OAAO,CAACiB,GAAG,CAAC,yBAAyB,EAAED,YAAY,CAAC;MACpD;IACF,CACF,CAAC,CAAClB,KAAK,CAACC,GAAG,IAAI;MACbC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC5C,IAAIA,GAAG,CAACmB,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC,EAAE;QACzC5B,mBAAmB,CAAC,IAAI,CAAC;MAC3B;MACAR,WAAW,CAAC,KAAK,CAAC;MAClB,IAAIL,OAAO,EAAE;QACXA,OAAO,CAACqB,GAAG,CAAC;MACd;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIpC,WAAW,EAAE;MACf,IAAI;QACF,IAAIA,WAAW,CAACkB,UAAU,EAAE;UAC1BlB,WAAW,CAACmB,IAAI,CAAC,CAAC,CACfT,IAAI,CAAC,MAAM;YACVX,WAAW,CAAC,KAAK,CAAC;YAClB,IAAIJ,OAAO,EAAE;cACXA,OAAO,CAAC,CAAC;YACX;UACF,CAAC,CAAC,CACDmB,KAAK,CAACC,GAAG,IAAI;YACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;YAC5C,IAAIrB,OAAO,EAAE;cACXA,OAAO,CAACqB,GAAG,CAAC;YACd;UACF,CAAC,CAAC;QACN,CAAC,MAAM;UACLhB,WAAW,CAAC,KAAK,CAAC;UAClB,IAAIJ,OAAO,EAAE;YACXA,OAAO,CAAC,CAAC;UACX;QACF;MACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDlB,WAAW,CAAC,KAAK,CAAC;QAClB,IAAIL,OAAO,EAAE;UACXA,OAAO,CAACuB,KAAK,CAAC;QAChB;MACF;IACF;EACF,CAAC;EAED,MAAMoB,kBAAkB,GAAIC,CAAC,IAAK;IAChCjC,iBAAiB,CAACiC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACjC,IAAI1C,QAAQ,EAAE;MACZsC,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACE7C,OAAA;IAAKK,SAAS,EAAEP,EAAE,CAAC,6DAA6D,EAAEO,SAAS,CAAE;IAAA6C,QAAA,gBAC3FlD,OAAA;MAAKsB,EAAE,EAAC,WAAW;MAACjB,SAAS,EAAC;IAAoE;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAExGvC,gBAAgB,iBACff,OAAA;MAAKK,SAAS,EAAC,gEAAgE;MAAA6C,QAAA,EAAC;IAEhF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,EAEA3C,OAAO,CAACU,MAAM,GAAG,CAAC,iBACjBrB,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAA6C,QAAA,gBAC1BlD,OAAA;QAAOuD,OAAO,EAAC,eAAe;QAAClD,SAAS,EAAC,gCAAgC;QAAA6C,QAAA,EAAC;MAE1E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRtD,OAAA;QACEsB,EAAE,EAAC,eAAe;QAClB2B,KAAK,EAAEpC,cAAc,IAAI,EAAG;QAC5B2C,QAAQ,EAAEV,kBAAmB;QAC7BzC,SAAS,EAAC,yDAAyD;QACnEoD,QAAQ,EAAElD,QAAS;QAAA2C,QAAA,EAElBvC,OAAO,CAAC+C,GAAG,CAACC,MAAM,iBACjB3D,OAAA;UAAwBiD,KAAK,EAAEU,MAAM,CAACrC,EAAG;UAAA4B,QAAA,EACtCS,MAAM,CAACC,KAAK,IAAI,UAAUD,MAAM,CAACrC,EAAE;QAAE,GAD3BqC,MAAM,CAACrC,EAAE;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEd,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,eAEDtD,OAAA;MAAKK,SAAS,EAAC,gBAAgB;MAAA6C,QAAA,GAC5B,CAAC3C,QAAQ,gBACRP,OAAA,CAACH,MAAM;QACLgE,OAAO,EAAEhC,YAAa;QACtB4B,QAAQ,EAAE,CAAC5C,cAAe;QAC1B,cAAW,wBAAwB;QAAAqC,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAETtD,OAAA,CAACH,MAAM;QACLgE,OAAO,EAAEhB,WAAY;QACrBiB,OAAO,EAAC,WAAW;QACnB,cAAW,uBAAuB;QAAAZ,QAAA,EACnC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT,eAEDtD,OAAA,CAACH,MAAM;QACLgE,OAAO,EAAEA,CAAA,KAAM;UACbhB,WAAW,CAAC,CAAC;UACb,IAAIzC,OAAO,EAAE;YACXA,OAAO,CAAC,CAAC;UACX;QACF,CAAE;QACF0D,OAAO,EAAC,SAAS;QACjB,cAAW,kBAAkB;QAAAZ,QAAA,EAC9B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENtD,OAAA;MAAGK,SAAS,EAAC,gDAAgD;MAAA6C,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAChD,EAAA,CAzNIL,aAAa;AAAA8D,EAAA,GAAb9D,aAAa;AA2NnB,eAAeA,aAAa;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}