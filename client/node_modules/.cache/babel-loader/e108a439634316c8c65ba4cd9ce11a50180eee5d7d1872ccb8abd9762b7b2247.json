{"ast":null,"code":"/**\n * Responsive design helper for mobile optimization\n */\n\n/**\n * Check if the current device is mobile\n * @returns {boolean} True if mobile device\n */\nexport const isMobileDevice = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n  // Check for mobile device patterns in user agent\n  const mobileRegex = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n  return mobileRegex.test(userAgent) || window.innerWidth < 768;\n};\n\n/**\n * Get optimal video constraints for the current device\n * @param {string} quality - Quality preset (low, medium, high, hd, auto)\n * @returns {Object} Video constraints\n */\nexport const getOptimalVideoConstraints = (quality = 'auto') => {\n  const isMobile = isMobileDevice();\n\n  // Default constraints based on device type\n  const defaultConstraints = isMobile ? {\n    width: 640,\n    height: 360,\n    frameRate: 24\n  } :\n  // Mobile\n  {\n    width: 1280,\n    height: 720,\n    frameRate: 30\n  }; // Desktop\n\n  // Return constraints based on quality preset\n  switch (quality) {\n    case 'low':\n      return {\n        width: 320,\n        height: 240,\n        frameRate: 15\n      };\n    case 'medium':\n      return {\n        width: 640,\n        height: 360,\n        frameRate: 24\n      };\n    case 'high':\n      return {\n        width: 1280,\n        height: 720,\n        frameRate: 30\n      };\n    case 'hd':\n      return {\n        width: 1920,\n        height: 1080,\n        frameRate: 30\n      };\n    case 'auto':\n    default:\n      return defaultConstraints;\n  }\n};\n\n/**\n * Get optimal layout for the current device\n * @returns {Object} Layout configuration\n */\nexport const getOptimalLayout = () => {\n  const isMobile = isMobileDevice();\n  const isLandscape = window.innerWidth > window.innerHeight;\n  return {\n    isMobile,\n    isLandscape,\n    controlsLayout: isMobile ? 'compact' : 'standard',\n    videoLayout: isMobile && !isLandscape ? 'stack' : 'grid'\n  };\n};\n\n/**\n * Add device orientation change listener\n * @param {Function} callback - Function to call on orientation change\n * @returns {Function} Function to remove the listener\n */\nexport const addOrientationChangeListener = callback => {\n  const handler = () => {\n    callback(window.innerWidth > window.innerHeight);\n  };\n  window.addEventListener('resize', handler);\n  return () => {\n    window.removeEventListener('resize', handler);\n  };\n};\nexport default {\n  isMobileDevice,\n  getOptimalVideoConstraints,\n  getOptimalLayout,\n  addOrientationChangeListener\n};","map":{"version":3,"names":["isMobileDevice","userAgent","navigator","vendor","window","opera","mobileRegex","test","innerWidth","getOptimalVideoConstraints","quality","isMobile","defaultConstraints","width","height","frameRate","getOptimalLayout","isLandscape","innerHeight","controlsLayout","videoLayout","addOrientationChangeListener","callback","handler","addEventListener","removeEventListener"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/utils/responsiveHelper.js"],"sourcesContent":["/**\n * Responsive design helper for mobile optimization\n */\n\n/**\n * Check if the current device is mobile\n * @returns {boolean} True if mobile device\n */\nexport const isMobileDevice = () => {\n  const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n  \n  // Check for mobile device patterns in user agent\n  const mobileRegex = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i;\n  \n  return mobileRegex.test(userAgent) || window.innerWidth < 768;\n};\n\n/**\n * Get optimal video constraints for the current device\n * @param {string} quality - Quality preset (low, medium, high, hd, auto)\n * @returns {Object} Video constraints\n */\nexport const getOptimalVideoConstraints = (quality = 'auto') => {\n  const isMobile = isMobileDevice();\n  \n  // Default constraints based on device type\n  const defaultConstraints = isMobile ? \n    { width: 640, height: 360, frameRate: 24 } : // Mobile\n    { width: 1280, height: 720, frameRate: 30 }; // Desktop\n  \n  // Return constraints based on quality preset\n  switch (quality) {\n    case 'low':\n      return { width: 320, height: 240, frameRate: 15 };\n    case 'medium':\n      return { width: 640, height: 360, frameRate: 24 };\n    case 'high':\n      return { width: 1280, height: 720, frameRate: 30 };\n    case 'hd':\n      return { width: 1920, height: 1080, frameRate: 30 };\n    case 'auto':\n    default:\n      return defaultConstraints;\n  }\n};\n\n/**\n * Get optimal layout for the current device\n * @returns {Object} Layout configuration\n */\nexport const getOptimalLayout = () => {\n  const isMobile = isMobileDevice();\n  const isLandscape = window.innerWidth > window.innerHeight;\n  \n  return {\n    isMobile,\n    isLandscape,\n    controlsLayout: isMobile ? 'compact' : 'standard',\n    videoLayout: isMobile && !isLandscape ? 'stack' : 'grid'\n  };\n};\n\n/**\n * Add device orientation change listener\n * @param {Function} callback - Function to call on orientation change\n * @returns {Function} Function to remove the listener\n */\nexport const addOrientationChangeListener = (callback) => {\n  const handler = () => {\n    callback(window.innerWidth > window.innerHeight);\n  };\n  \n  window.addEventListener('resize', handler);\n  \n  return () => {\n    window.removeEventListener('resize', handler);\n  };\n};\n\nexport default {\n  isMobileDevice,\n  getOptimalVideoConstraints,\n  getOptimalLayout,\n  addOrientationChangeListener\n};\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,SAAS,GAAGC,SAAS,CAACD,SAAS,IAAIC,SAAS,CAACC,MAAM,IAAIC,MAAM,CAACC,KAAK;;EAEzE;EACA,MAAMC,WAAW,GAAG,gEAAgE;EAEpF,OAAOA,WAAW,CAACC,IAAI,CAACN,SAAS,CAAC,IAAIG,MAAM,CAACI,UAAU,GAAG,GAAG;AAC/D,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,0BAA0B,GAAGA,CAACC,OAAO,GAAG,MAAM,KAAK;EAC9D,MAAMC,QAAQ,GAAGX,cAAc,CAAC,CAAC;;EAEjC;EACA,MAAMY,kBAAkB,GAAGD,QAAQ,GACjC;IAAEE,KAAK,EAAE,GAAG;IAAEC,MAAM,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAG,CAAC;EAAG;EAC7C;IAAEF,KAAK,EAAE,IAAI;IAAEC,MAAM,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAG,CAAC,CAAC,CAAC;;EAE/C;EACA,QAAQL,OAAO;IACb,KAAK,KAAK;MACR,OAAO;QAAEG,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACnD,KAAK,QAAQ;MACX,OAAO;QAAEF,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACnD,KAAK,MAAM;MACT,OAAO;QAAEF,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACpD,KAAK,IAAI;MACP,OAAO;QAAEF,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAG,CAAC;IACrD,KAAK,MAAM;IACX;MACE,OAAOH,kBAAkB;EAC7B;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;EACpC,MAAML,QAAQ,GAAGX,cAAc,CAAC,CAAC;EACjC,MAAMiB,WAAW,GAAGb,MAAM,CAACI,UAAU,GAAGJ,MAAM,CAACc,WAAW;EAE1D,OAAO;IACLP,QAAQ;IACRM,WAAW;IACXE,cAAc,EAAER,QAAQ,GAAG,SAAS,GAAG,UAAU;IACjDS,WAAW,EAAET,QAAQ,IAAI,CAACM,WAAW,GAAG,OAAO,GAAG;EACpD,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,4BAA4B,GAAIC,QAAQ,IAAK;EACxD,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBD,QAAQ,CAAClB,MAAM,CAACI,UAAU,GAAGJ,MAAM,CAACc,WAAW,CAAC;EAClD,CAAC;EAEDd,MAAM,CAACoB,gBAAgB,CAAC,QAAQ,EAAED,OAAO,CAAC;EAE1C,OAAO,MAAM;IACXnB,MAAM,CAACqB,mBAAmB,CAAC,QAAQ,EAAEF,OAAO,CAAC;EAC/C,CAAC;AACH,CAAC;AAED,eAAe;EACbvB,cAAc;EACdS,0BAA0B;EAC1BO,gBAAgB;EAChBK;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}