{"ast":null,"code":"import { clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Combines multiple class names using clsx and tailwind-merge\n * This utility helps with conditional class names and prevents class conflicts\n */\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n\n/**\n * Formats a timestamp into a readable time string\n * @param {Date|number} timestamp - Date object or timestamp\n * @returns {string} Formatted time string\n */\nexport function formatTime(timestamp) {\n  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n  return date.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\n/**\n * Generates a random string ID\n * @param {number} length - Length of the ID\n * @returns {string} Random ID\n */\nexport function generateId(length = 8) {\n  return Math.random().toString(36).substring(2, 2 + length);\n}\n\n/**\n * Debounces a function call\n * @param {Function} func - Function to debounce\n * @param {number} wait - Wait time in milliseconds\n * @returns {Function} Debounced function\n */\nexport function debounce(func, wait = 300) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n/**\n * Throttles a function call\n * @param {Function} func - Function to throttle\n * @param {number} limit - Limit in milliseconds\n * @returns {Function} Throttled function\n */\nexport function throttle(func, limit = 300) {\n  let inThrottle;\n  return function executedFunction(...args) {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n}\n\n/**\n * Creates a logger with prefixed messages\n * @param {string} prefix - Prefix for log messages\n * @returns {Object} Logger object\n */\nexport function createLogger(prefix) {\n  return {\n    log: (...args) => console.log(`[${prefix}]`, ...args),\n    warn: (...args) => console.warn(`[${prefix}]`, ...args),\n    error: (...args) => console.error(`[${prefix}]`, ...args),\n    info: (...args) => console.info(`[${prefix}]`, ...args)\n  };\n}\n\n/**\n * Checks if the device is a mobile device\n * @returns {boolean} True if mobile device\n */\nexport function isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\n/**\n * Safely parses JSON with error handling\n * @param {string} json - JSON string to parse\n * @param {*} fallback - Fallback value if parsing fails\n * @returns {*} Parsed object or fallback\n */\nexport function safeJsonParse(json, fallback = {}) {\n  try {\n    return JSON.parse(json);\n  } catch (error) {\n    console.error('Error parsing JSON:', error);\n    return fallback;\n  }\n}","map":{"version":3,"names":["clsx","twMerge","cn","inputs","formatTime","timestamp","date","Date","toLocaleTimeString","hour","minute","generateId","length","Math","random","toString","substring","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","throttle","limit","inThrottle","createLogger","prefix","log","console","warn","error","info","isMobileDevice","test","navigator","userAgent","safeJsonParse","json","fallback","JSON","parse"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/lib/utils.js"],"sourcesContent":["import { clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\n/**\n * Combines multiple class names using clsx and tailwind-merge\n * This utility helps with conditional class names and prevents class conflicts\n */\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Formats a timestamp into a readable time string\n * @param {Date|number} timestamp - Date object or timestamp\n * @returns {string} Formatted time string\n */\nexport function formatTime(timestamp) {\n  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n  return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n}\n\n/**\n * Generates a random string ID\n * @param {number} length - Length of the ID\n * @returns {string} Random ID\n */\nexport function generateId(length = 8) {\n  return Math.random().toString(36).substring(2, 2 + length);\n}\n\n/**\n * Debounces a function call\n * @param {Function} func - Function to debounce\n * @param {number} wait - Wait time in milliseconds\n * @returns {Function} Debounced function\n */\nexport function debounce(func, wait = 300) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n\n/**\n * Throttles a function call\n * @param {Function} func - Function to throttle\n * @param {number} limit - Limit in milliseconds\n * @returns {Function} Throttled function\n */\nexport function throttle(func, limit = 300) {\n  let inThrottle;\n  return function executedFunction(...args) {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => {\n        inThrottle = false;\n      }, limit);\n    }\n  };\n}\n\n/**\n * Creates a logger with prefixed messages\n * @param {string} prefix - Prefix for log messages\n * @returns {Object} Logger object\n */\nexport function createLogger(prefix) {\n  return {\n    log: (...args) => console.log(`[${prefix}]`, ...args),\n    warn: (...args) => console.warn(`[${prefix}]`, ...args),\n    error: (...args) => console.error(`[${prefix}]`, ...args),\n    info: (...args) => console.info(`[${prefix}]`, ...args),\n  };\n}\n\n/**\n * Checks if the device is a mobile device\n * @returns {boolean} True if mobile device\n */\nexport function isMobileDevice() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\n/**\n * Safely parses JSON with error handling\n * @param {string} json - JSON string to parse\n * @param {*} fallback - Fallback value if parsing fails\n * @returns {*} Parsed object or fallback\n */\nexport function safeJsonParse(json, fallback = {}) {\n  try {\n    return JSON.parse(json);\n  } catch (error) {\n    console.error('Error parsing JSON:', error);\n    return fallback;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}