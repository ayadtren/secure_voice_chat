{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport UserList from './components/UserList';\nimport AudioControls from './components/AudioControls';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport Login from './components/Login';\nimport { WebRTCManager } from './utils/webrtcManager';\nimport QRCodeGenerator from './components/QRCodeGenerator';\nimport QRCodeScanner from './components/QRCodeScanner';\nimport MicrophonePermissionGuide from './components/MicrophonePermissionGuide';\nimport VideoChat from './VideoChat';\nimport { Button } from './components/ui/button';\n\n// Configuration - prioritize runtime config over environment variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = 'http://localhost:3001';\nconst WS_URL = 'ws://localhost:3001';\nconsole.log('Using server URL:', SERVER_URL);\nconsole.log('Using WebSocket URL:', WS_URL);\nfunction App() {\n  _s();\n  // State\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n  const [currentCall, setCurrentCall] = useState(null);\n  const [callStatus, setCallStatus] = useState('idle'); // idle, calling, connected\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [networkQuality, setNetworkQuality] = useState(100); // 0-100\n  const [darkMode, setDarkMode] = useState(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [showQRScanner, setShowQRScanner] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState(false);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [microphoneStatus, setMicrophoneStatus] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [showVideoChat, setShowVideoChat] = useState(false);\n\n  // Refs\n  const localStream = useRef(null);\n  const localAudioRef = useRef(null);\n  const remoteAudioRef = useRef(null);\n\n  // Cleanup local audio stream\n  const cleanupLocalStream = () => {\n    if (localStream.current) {\n      const tracks = localStream.current.getTracks();\n      tracks.forEach(track => track.stop());\n      localStream.current = null;\n    }\n    if (localAudioRef.current) {\n      localAudioRef.current.srcObject = null;\n    }\n  };\n\n  // Handle call end (cleanup)\n  const handleCallEnd = useCallback(() => {\n    if (webrtcManager) {\n      webrtcManager.dispose();\n      setWebrtcManager(null);\n    }\n    cleanupLocalStream();\n    setCurrentCall(null);\n    setCallStatus('idle');\n    setNetworkQuality(100);\n    setIsSpeaking(false);\n    setPeerSpeaking(false);\n  }, [webrtcManager]);\n\n  // Initialize WebRTC manager\n  const initializeWebRTC = useCallback(async socketInstance => {\n    try {\n      const manager = new WebRTCManager(socketInstance, {\n        userId: socketInstance.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: peerId => {\n          setCallStatus('idle');\n          setCurrentCall(null);\n          setPeerSpeaking(false);\n        },\n        onSpeakingChange: speaking => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: quality => {\n          setNetworkQuality(quality.overall);\n        },\n        onError: error => {\n          console.error('WebRTC error:', error);\n          setErrorMessage(error);\n          setTimeout(() => setErrorMessage(null), 5000);\n        },\n        onMicrophoneStatus: status => {\n          console.log('Microphone status:', status);\n          setMicrophoneStatus(status);\n        }\n      });\n      await manager.initialize('lobby');\n      setWebrtcManager(manager);\n      return manager;\n    } catch (error) {\n      console.error('Failed to initialize WebRTC:', error);\n      return null;\n    }\n  }, []);\n\n  // Handle socket events\n  useEffect(() => {\n    if (!WS_URL) {\n      console.error('WebSocket URL is not defined');\n      return;\n    }\n    console.log('Connecting to WebSocket server at:', WS_URL);\n    const newSocket = io(WS_URL, {\n      reconnectionAttempts: 10,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n      transports: ['websocket', 'polling']\n    });\n    setSocket(newSocket);\n\n    // Connection events\n    newSocket.on('connect', () => {\n      console.log('Connected to server with ID:', newSocket.id);\n      setConnected(true);\n\n      // Initialize WebRTC after connection\n      initializeWebRTC(newSocket).catch(error => {\n        console.error('Error initializing WebRTC:', error);\n      });\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n      handleCallEnd();\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setConnected(false);\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n      alert(`Error: ${error.message}`);\n    });\n    newSocket.on('userList', userList => {\n      setUsers(userList.filter(user => user.id !== newSocket.id));\n    });\n    newSocket.on('registered', data => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n    });\n\n    // WebRTC signaling events\n    newSocket.on('offer', async ({\n      from,\n      offer\n    }) => {\n      console.log('Received offer from:', from);\n\n      // If already in a call, reject\n      if (callStatus !== 'idle') {\n        newSocket.emit('busy', {\n          target: from\n        });\n        return;\n      }\n\n      // Get caller info\n      const caller = users.find(user => user.id === from);\n      if (!caller) return;\n\n      // Ask user to accept call\n      const accept = window.confirm(`Incoming call from ${caller.username}. Accept?`);\n      if (!accept) {\n        newSocket.emit('reject', {\n          target: from\n        });\n        return;\n      }\n      try {\n        // Accept call using existing WebRTC manager\n        if (!webrtcManager) {\n          throw new Error('WebRTC not initialized');\n        }\n        await webrtcManager.acceptIncomingCall(from, offer);\n        setCurrentCall(caller);\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error accepting call:', error);\n        newSocket.emit('error', {\n          target: from,\n          message: 'Failed to accept call'\n        });\n      }\n    });\n    newSocket.on('answer', async ({\n      from,\n      answer\n    }) => {\n      console.log('Received answer from:', from);\n      if (!webrtcManager || callStatus !== 'calling') return;\n      try {\n        await webrtcManager.handleAnswer(from, answer);\n        console.log('Remote description set successfully');\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error setting remote description:', error);\n        handleCallEnd();\n      }\n    });\n    newSocket.on('iceCandidate', async ({\n      from,\n      candidate\n    }) => {\n      console.log('Received ICE candidate from:', from);\n      if (!webrtcManager) return;\n      try {\n        await webrtcManager.addIceCandidate(from, candidate);\n        console.log('Added ICE candidate successfully');\n      } catch (error) {\n        console.error('Error adding ICE candidate:', error);\n      }\n    });\n    newSocket.on('speaking', ({\n      userId,\n      speaking\n    }) => {\n      if (currentCall && userId === currentCall.id) {\n        setPeerSpeaking(speaking);\n      }\n    });\n    newSocket.on('reject', () => {\n      alert('Call was rejected');\n      handleCallEnd();\n    });\n    newSocket.on('busy', () => {\n      alert('User is busy');\n      handleCallEnd();\n    });\n    newSocket.on('callEnded', () => {\n      alert('Call ended by the other user');\n      handleCallEnd();\n    });\n\n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n      cleanupLocalStream();\n      if (webrtcManager) {\n        webrtcManager.dispose();\n      }\n    };\n  }, [callStatus, currentCall, handleCallEnd, users, initializeWebRTC, webrtcManager]);\n\n  // Handle dark mode preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = e => setDarkMode(e.matches);\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Apply dark mode class to body\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  // Handle user registration\n  const handleLogin = async username => {\n    if (!socket || !connected) {\n      console.error('Not connected to server');\n      alert('Not connected to server. Please try again.');\n      return;\n    }\n    console.log('Attempting to register with username:', username);\n\n    // Add event listeners for registration response\n    const onRegistered = data => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n    const onError = error => {\n      console.error('Registration error:', error);\n      alert(`Registration error: ${error.message}`);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n\n    // Listen for the response\n    socket.on('registered', onRegistered);\n    socket.on('error', onError);\n\n    // Send registration request\n    socket.emit('register', {\n      username\n    });\n  };\n\n  // Start a call with a user\n  const startCall = async targetUser => {\n    if (callStatus !== 'idle') return;\n    try {\n      // Create new WebRTC manager\n      const manager = new WebRTCManager(socket, {\n        userId: socket.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: () => {\n          handleCallEnd();\n        },\n        onSpeakingChange: speaking => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (peerId, quality) => {\n          setNetworkQuality(Math.round(quality));\n        },\n        onError: error => {\n          console.error('WebRTC error:', error);\n          alert(`WebRTC error: ${error}`);\n        }\n      });\n      setWebrtcManager(manager);\n\n      // Initialize and start the call\n      await manager.initialize(targetUser.id);\n      await manager.startCall(targetUser.id);\n      setCurrentCall(targetUser);\n      setCallStatus('calling');\n    } catch (error) {\n      console.error('Error starting call:', error);\n      alert('Failed to start call. Please try again.');\n      handleCallEnd();\n    }\n  };\n\n  // End the current call\n  const endCall = () => {\n    if (!socket || !currentCall) return;\n    socket.emit('callEnded', {\n      target: currentCall.id\n    });\n    handleCallEnd();\n  };\n\n  // Toggle microphone\n  const toggleMicrophone = () => {\n    if (webrtcManager) {\n      const enabled = webrtcManager.toggleMicrophone();\n      setAudioEnabled(enabled);\n    } else if (localStream.current) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setAudioEnabled(audioTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Toggle video chat mode\n  const toggleVideoChat = () => {\n    // End any ongoing call before switching to video chat\n    if (callStatus !== 'idle') {\n      endCall();\n    }\n    setShowVideoChat(!showVideoChat);\n  };\n\n  // Handle QR code scan result\n  const handleQRScan = data => {\n    try {\n      const connectionData = JSON.parse(data);\n      if (connectionData.roomId && connectionData.userId) {\n        // Start call with scanned user\n        const user = {\n          id: connectionData.userId,\n          username: connectionData.username || 'User via QR'\n        };\n        startCall(user);\n        setShowQRScanner(false);\n      }\n    } catch (error) {\n      console.error('Invalid QR code data:', error);\n      alert('Invalid QR code. Please try again.');\n    }\n  };\n\n  // Generate QR code data\n  const getQRCodeData = () => {\n    return JSON.stringify({\n      roomId: socket === null || socket === void 0 ? void 0 : socket.id,\n      userId: socket === null || socket === void 0 ? void 0 : socket.id,\n      username: username\n    });\n  };\n\n  // Handle retry for microphone permissions\n  const handleRetryMicrophoneAccess = useCallback(async () => {\n    setMicrophoneStatus({\n      status: 'requesting',\n      message: 'Requesting microphone access...'\n    });\n    try {\n      if (webrtcManager) {\n        // Use the dedicated retry method instead of reinitializing\n        const success = await webrtcManager.retryMicrophoneAccess();\n        if (!success) {\n          console.error('Failed to get microphone access after retry');\n        }\n      } else if (socket) {\n        // If no webrtcManager exists yet, create a new one\n        await initializeWebRTC(socket);\n      }\n    } catch (error) {\n      console.error('Error retrying microphone access:', error);\n    }\n  }, [socket, webrtcManager, initializeWebRTC]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Secure \", showVideoChat ? 'Video' : 'Voice', \" Chat\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleDarkMode,\n        \"aria-label\": darkMode ? 'Switch to light mode' : 'Switch to dark mode',\n        children: darkMode ? '☀️' : '🌙'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setErrorMessage(null),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this), !username ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        connected: connected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this) : showVideoChat ? /*#__PURE__*/_jsxDEV(VideoChat, {\n        username: username,\n        onBack: () => setShowVideoChat(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Username: \", username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", connected ? 'Connected' : 'Disconnected']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {\n              connected: connected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-list-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Online Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UserList, {\n              users: users,\n              onCallUser: startCall,\n              currentCall: currentCall,\n              callStatus: callStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qr-options\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShowQRCode(!showQRCode);\n                setShowQRScanner(false);\n              },\n              variant: showQRCode ? \"secondary\" : \"default\",\n              children: showQRCode ? 'Hide QR Code' : 'Show My QR Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShowQRScanner(!showQRScanner);\n                setShowQRCode(false);\n              },\n              variant: showQRScanner ? \"secondary\" : \"default\",\n              children: showQRScanner ? 'Hide Scanner' : 'Scan QR Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: toggleVideoChat,\n              variant: \"default\",\n              className: \"mt-2\",\n              children: \"Switch to Video Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(MicrophonePermissionGuide, {\n            status: microphoneStatus,\n            onRetry: handleRetryMicrophoneAccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"call-status-container\",\n            children: callStatus === 'idle' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"idle-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Not in a call\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Select a user from the list to start a call or join a video room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 21\n              }, this), showQRCode && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"qr-container\",\n                children: /*#__PURE__*/_jsxDEV(QRCodeGenerator, {\n                  data: {\n                    userId: socket === null || socket === void 0 ? void 0 : socket.id,\n                    username,\n                    roomId: 'lobby'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 545,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 23\n              }, this), showQRScanner && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"qr-container\",\n                children: /*#__PURE__*/_jsxDEV(QRCodeScanner, {\n                  onScan: handleQRScan,\n                  onError: error => console.error('QR scan error:', error),\n                  onClose: () => setShowQRScanner(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"call-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: callStatus === 'calling' ? `Calling ${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username}...` : `In call with ${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"speaking-indicators\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `indicator ${isSpeaking ? 'speaking' : ''}`,\n                  children: [\"You \", isSpeaking ? '(Speaking)' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `indicator ${peerSpeaking ? 'speaking' : ''}`,\n                  children: [currentCall === null || currentCall === void 0 ? void 0 : currentCall.username, \" \", peerSpeaking ? '(Speaking)' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"call-actions\",\n                children: [/*#__PURE__*/_jsxDEV(AudioControls, {\n                  muted: !audioEnabled,\n                  onToggleMute: toggleMicrophone,\n                  onHangup: endCall,\n                  quality: networkQuality\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => {\n                    endCall();\n                    toggleVideoChat();\n                  },\n                  variant: \"default\",\n                  className: \"ml-2\",\n                  children: \"Switch to Video\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: localAudioRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: remoteAudioRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Secure \", showVideoChat ? 'Video' : 'Voice', \" Chat \\xA9 2025 - End-to-End Encrypted | Zero Persistence | Privacy First\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 453,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WotKdOCYyPmnx49O13RKsFpip1Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","UserList","AudioControls","ConnectionStatus","Login","WebRTCManager","QRCodeGenerator","QRCodeScanner","MicrophonePermissionGuide","VideoChat","Button","jsxDEV","_jsxDEV","SERVER_URL","WS_URL","console","log","App","_s","socket","setSocket","connected","setConnected","username","setUsername","users","setUsers","currentCall","setCurrentCall","callStatus","setCallStatus","audioEnabled","setAudioEnabled","networkQuality","setNetworkQuality","darkMode","setDarkMode","window","matchMedia","matches","showQRCode","setShowQRCode","showQRScanner","setShowQRScanner","isSpeaking","setIsSpeaking","peerSpeaking","setPeerSpeaking","webrtcManager","setWebrtcManager","microphoneStatus","setMicrophoneStatus","errorMessage","setErrorMessage","showVideoChat","setShowVideoChat","localStream","localAudioRef","remoteAudioRef","cleanupLocalStream","current","tracks","getTracks","forEach","track","stop","srcObject","handleCallEnd","dispose","initializeWebRTC","socketInstance","manager","userId","id","onPeerConnect","peerId","stream","onPeerDisconnect","onSpeakingChange","speaking","onAudioQualityChange","quality","overall","onError","error","setTimeout","onMicrophoneStatus","status","initialize","newSocket","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","transports","on","catch","alert","message","userList","filter","user","data","from","offer","emit","target","caller","find","accept","confirm","Error","acceptIncomingCall","answer","handleAnswer","candidate","addIceCandidate","disconnect","mediaQuery","handleChange","e","addEventListener","removeEventListener","document","body","classList","add","remove","handleLogin","onRegistered","off","startCall","targetUser","Math","round","endCall","toggleMicrophone","enabled","audioTrack","getAudioTracks","toggleDarkMode","toggleVideoChat","handleQRScan","connectionData","JSON","parse","roomId","getQRCodeData","stringify","handleRetryMicrophoneAccess","success","retryMicrophoneAccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onLogin","onBack","onCallUser","variant","onRetry","onScan","onClose","muted","onToggleMute","onHangup","ref","autoPlay","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport UserList from './components/UserList';\nimport AudioControls from './components/AudioControls';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport Login from './components/Login';\nimport { WebRTCManager } from './utils/webrtcManager';\nimport QRCodeGenerator from './components/QRCodeGenerator';\nimport QRCodeScanner from './components/QRCodeScanner';\nimport MicrophonePermissionGuide from './components/MicrophonePermissionGuide';\nimport VideoChat from './VideoChat';\nimport { Button } from './components/ui/button';\n\n// Configuration - prioritize runtime config over environment variables\nconst SERVER_URL = 'http://localhost:3001';\nconst WS_URL = 'ws://localhost:3001';\n\nconsole.log('Using server URL:', SERVER_URL);\nconsole.log('Using WebSocket URL:', WS_URL);\n\nfunction App() {\n  // State\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n  const [currentCall, setCurrentCall] = useState(null);\n  const [callStatus, setCallStatus] = useState('idle'); // idle, calling, connected\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [networkQuality, setNetworkQuality] = useState(100); // 0-100\n  const [darkMode, setDarkMode] = useState(\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [showQRScanner, setShowQRScanner] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState(false);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [microphoneStatus, setMicrophoneStatus] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [showVideoChat, setShowVideoChat] = useState(false);\n  \n  // Refs\n  const localStream = useRef(null);\n  const localAudioRef = useRef(null);\n  const remoteAudioRef = useRef(null);\n  \n  // Cleanup local audio stream\n  const cleanupLocalStream = () => {\n    if (localStream.current) {\n      const tracks = localStream.current.getTracks();\n      tracks.forEach(track => track.stop());\n      localStream.current = null;\n    }\n    \n    if (localAudioRef.current) {\n      localAudioRef.current.srcObject = null;\n    }\n  };\n  \n  // Handle call end (cleanup)\n  const handleCallEnd = useCallback(() => {\n    if (webrtcManager) {\n      webrtcManager.dispose();\n      setWebrtcManager(null);\n    }\n    \n    cleanupLocalStream();\n    \n    setCurrentCall(null);\n    setCallStatus('idle');\n    setNetworkQuality(100);\n    setIsSpeaking(false);\n    setPeerSpeaking(false);\n  }, [webrtcManager]);\n  \n  // Initialize WebRTC manager\n  const initializeWebRTC = useCallback(async (socketInstance) => {\n    try {\n      const manager = new WebRTCManager(socketInstance, {\n        userId: socketInstance.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: (peerId) => {\n          setCallStatus('idle');\n          setCurrentCall(null);\n          setPeerSpeaking(false);\n        },\n        onSpeakingChange: (speaking) => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (quality) => {\n          setNetworkQuality(quality.overall);\n        },\n        onError: (error) => {\n          console.error('WebRTC error:', error);\n          setErrorMessage(error);\n          setTimeout(() => setErrorMessage(null), 5000);\n        },\n        onMicrophoneStatus: (status) => {\n          console.log('Microphone status:', status);\n          setMicrophoneStatus(status);\n        }\n      });\n      \n      await manager.initialize('lobby');\n      setWebrtcManager(manager);\n      return manager;\n    } catch (error) {\n      console.error('Failed to initialize WebRTC:', error);\n      return null;\n    }\n  }, []);\n  \n  // Handle socket events\n  useEffect(() => {\n    if (!WS_URL) {\n      console.error('WebSocket URL is not defined');\n      return;\n    }\n    \n    console.log('Connecting to WebSocket server at:', WS_URL);\n    const newSocket = io(WS_URL, {\n      reconnectionAttempts: 10,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n      transports: ['websocket', 'polling']\n    });\n    \n    setSocket(newSocket);\n    \n    // Connection events\n    newSocket.on('connect', () => {\n      console.log('Connected to server with ID:', newSocket.id);\n      setConnected(true);\n      \n      // Initialize WebRTC after connection\n      initializeWebRTC(newSocket).catch(error => {\n        console.error('Error initializing WebRTC:', error);\n      });\n    });\n    \n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n      handleCallEnd();\n    });\n    \n    newSocket.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n      setConnected(false);\n    });\n    \n    newSocket.on('error', (error) => {\n      console.error('Socket error:', error);\n      alert(`Error: ${error.message}`);\n    });\n    \n    newSocket.on('userList', (userList) => {\n      setUsers(userList.filter(user => user.id !== newSocket.id));\n    });\n    \n    newSocket.on('registered', (data) => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n    });\n    \n    // WebRTC signaling events\n    newSocket.on('offer', async ({ from, offer }) => {\n      console.log('Received offer from:', from);\n      \n      // If already in a call, reject\n      if (callStatus !== 'idle') {\n        newSocket.emit('busy', { target: from });\n        return;\n      }\n      \n      // Get caller info\n      const caller = users.find(user => user.id === from);\n      if (!caller) return;\n      \n      // Ask user to accept call\n      const accept = window.confirm(`Incoming call from ${caller.username}. Accept?`);\n      if (!accept) {\n        newSocket.emit('reject', { target: from });\n        return;\n      }\n      \n      try {\n        // Accept call using existing WebRTC manager\n        if (!webrtcManager) {\n          throw new Error('WebRTC not initialized');\n        }\n        \n        await webrtcManager.acceptIncomingCall(from, offer);\n        setCurrentCall(caller);\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error accepting call:', error);\n        newSocket.emit('error', { target: from, message: 'Failed to accept call' });\n      }\n    });\n    \n    newSocket.on('answer', async ({ from, answer }) => {\n      console.log('Received answer from:', from);\n      \n      if (!webrtcManager || callStatus !== 'calling') return;\n      \n      try {\n        await webrtcManager.handleAnswer(from, answer);\n        console.log('Remote description set successfully');\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error setting remote description:', error);\n        handleCallEnd();\n      }\n    });\n    \n    newSocket.on('iceCandidate', async ({ from, candidate }) => {\n      console.log('Received ICE candidate from:', from);\n      \n      if (!webrtcManager) return;\n      \n      try {\n        await webrtcManager.addIceCandidate(from, candidate);\n        console.log('Added ICE candidate successfully');\n      } catch (error) {\n        console.error('Error adding ICE candidate:', error);\n      }\n    });\n    \n    newSocket.on('speaking', ({ userId, speaking }) => {\n      if (currentCall && userId === currentCall.id) {\n        setPeerSpeaking(speaking);\n      }\n    });\n    \n    newSocket.on('reject', () => {\n      alert('Call was rejected');\n      handleCallEnd();\n    });\n    \n    newSocket.on('busy', () => {\n      alert('User is busy');\n      handleCallEnd();\n    });\n    \n    newSocket.on('callEnded', () => {\n      alert('Call ended by the other user');\n      handleCallEnd();\n    });\n    \n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n      cleanupLocalStream();\n      if (webrtcManager) {\n        webrtcManager.dispose();\n      }\n    };\n  }, [callStatus, currentCall, handleCallEnd, users, initializeWebRTC, webrtcManager]);\n  \n  // Handle dark mode preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => setDarkMode(e.matches);\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  \n  // Apply dark mode class to body\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  \n  // Handle user registration\n  const handleLogin = async (username) => {\n    if (!socket || !connected) {\n      console.error('Not connected to server');\n      alert('Not connected to server. Please try again.');\n      return;\n    }\n    \n    console.log('Attempting to register with username:', username);\n    \n    // Add event listeners for registration response\n    const onRegistered = (data) => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n    \n    const onError = (error) => {\n      console.error('Registration error:', error);\n      alert(`Registration error: ${error.message}`);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n    \n    // Listen for the response\n    socket.on('registered', onRegistered);\n    socket.on('error', onError);\n    \n    // Send registration request\n    socket.emit('register', { username });\n  };\n  \n  // Start a call with a user\n  const startCall = async (targetUser) => {\n    if (callStatus !== 'idle') return;\n    \n    try {\n      // Create new WebRTC manager\n      const manager = new WebRTCManager(socket, {\n        userId: socket.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: () => {\n          handleCallEnd();\n        },\n        onSpeakingChange: (speaking) => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (peerId, quality) => {\n          setNetworkQuality(Math.round(quality));\n        },\n        onError: (error) => {\n          console.error('WebRTC error:', error);\n          alert(`WebRTC error: ${error}`);\n        }\n      });\n      \n      setWebrtcManager(manager);\n      \n      // Initialize and start the call\n      await manager.initialize(targetUser.id);\n      await manager.startCall(targetUser.id);\n      \n      setCurrentCall(targetUser);\n      setCallStatus('calling');\n      \n    } catch (error) {\n      console.error('Error starting call:', error);\n      alert('Failed to start call. Please try again.');\n      handleCallEnd();\n    }\n  };\n  \n  // End the current call\n  const endCall = () => {\n    if (!socket || !currentCall) return;\n    \n    socket.emit('callEnded', { target: currentCall.id });\n    handleCallEnd();\n  };\n  \n  // Toggle microphone\n  const toggleMicrophone = () => {\n    if (webrtcManager) {\n      const enabled = webrtcManager.toggleMicrophone();\n      setAudioEnabled(enabled);\n    } else if (localStream.current) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setAudioEnabled(audioTrack.enabled);\n      }\n    }\n  };\n  \n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  \n  // Toggle video chat mode\n  const toggleVideoChat = () => {\n    // End any ongoing call before switching to video chat\n    if (callStatus !== 'idle') {\n      endCall();\n    }\n    setShowVideoChat(!showVideoChat);\n  };\n  \n  // Handle QR code scan result\n  const handleQRScan = (data) => {\n    try {\n      const connectionData = JSON.parse(data);\n      if (connectionData.roomId && connectionData.userId) {\n        // Start call with scanned user\n        const user = {\n          id: connectionData.userId,\n          username: connectionData.username || 'User via QR'\n        };\n        startCall(user);\n        setShowQRScanner(false);\n      }\n    } catch (error) {\n      console.error('Invalid QR code data:', error);\n      alert('Invalid QR code. Please try again.');\n    }\n  };\n  \n  // Generate QR code data\n  const getQRCodeData = () => {\n    return JSON.stringify({\n      roomId: socket?.id,\n      userId: socket?.id,\n      username: username\n    });\n  };\n  \n  // Handle retry for microphone permissions\n  const handleRetryMicrophoneAccess = useCallback(async () => {\n    setMicrophoneStatus({ status: 'requesting', message: 'Requesting microphone access...' });\n    \n    try {\n      if (webrtcManager) {\n        // Use the dedicated retry method instead of reinitializing\n        const success = await webrtcManager.retryMicrophoneAccess();\n        \n        if (!success) {\n          console.error('Failed to get microphone access after retry');\n        }\n      } else if (socket) {\n        // If no webrtcManager exists yet, create a new one\n        await initializeWebRTC(socket);\n      }\n    } catch (error) {\n      console.error('Error retrying microphone access:', error);\n    }\n  }, [socket, webrtcManager, initializeWebRTC]);\n  \n  return (\n    <div className={`app ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <header className=\"app-header\">\n        <h1>Secure {showVideoChat ? 'Video' : 'Voice'} Chat</h1>\n        <button \n          className=\"theme-toggle\" \n          onClick={toggleDarkMode} \n          aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\n        >\n          {darkMode ? '☀️' : '🌙'}\n        </button>\n      </header>\n      \n      <main className=\"app-content\">\n        {errorMessage && (\n          <div className=\"error-message\">\n            <p>{errorMessage}</p>\n            <button onClick={() => setErrorMessage(null)}>✕</button>\n          </div>\n        )}\n        \n        {!username ? (\n          <Login onLogin={handleLogin} connected={connected} />\n        ) : showVideoChat ? (\n          <VideoChat \n            username={username} \n            onBack={() => setShowVideoChat(false)} \n          />\n        ) : (\n          <div className=\"chat-container\">\n            <div className=\"sidebar\">\n              <div className=\"user-info\">\n                <h3>Your Profile</h3>\n                <p>Username: {username}</p>\n                <p>Status: {connected ? 'Connected' : 'Disconnected'}</p>\n                <ConnectionStatus connected={connected} />\n              </div>\n              \n              <div className=\"user-list-container\">\n                <h3>Online Users</h3>\n                <UserList \n                  users={users} \n                  onCallUser={startCall} \n                  currentCall={currentCall}\n                  callStatus={callStatus}\n                />\n              </div>\n              \n              <div className=\"qr-options\">\n                <Button \n                  onClick={() => {\n                    setShowQRCode(!showQRCode);\n                    setShowQRScanner(false);\n                  }}\n                  variant={showQRCode ? \"secondary\" : \"default\"}\n                >\n                  {showQRCode ? 'Hide QR Code' : 'Show My QR Code'}\n                </Button>\n                \n                <Button \n                  onClick={() => {\n                    setShowQRScanner(!showQRScanner);\n                    setShowQRCode(false);\n                  }}\n                  variant={showQRScanner ? \"secondary\" : \"default\"}\n                >\n                  {showQRScanner ? 'Hide Scanner' : 'Scan QR Code'}\n                </Button>\n                \n                <Button\n                  onClick={toggleVideoChat}\n                  variant=\"default\"\n                  className=\"mt-2\"\n                >\n                  Switch to Video Chat\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"content\">\n              <MicrophonePermissionGuide \n                status={microphoneStatus} \n                onRetry={handleRetryMicrophoneAccess} \n              />\n              \n              <div className=\"call-status-container\">\n                {callStatus === 'idle' ? (\n                  <div className=\"idle-container\">\n                    <h2>Not in a call</h2>\n                    <p>Select a user from the list to start a call or join a video room</p>\n                    \n                    {showQRCode && (\n                      <div className=\"qr-container\">\n                        <QRCodeGenerator \n                          data={{\n                            userId: socket?.id,\n                            username,\n                            roomId: 'lobby'\n                          }}\n                        />\n                      </div>\n                    )}\n                    \n                    {showQRScanner && (\n                      <div className=\"qr-container\">\n                        <QRCodeScanner \n                          onScan={handleQRScan}\n                          onError={(error) => console.error('QR scan error:', error)}\n                          onClose={() => setShowQRScanner(false)}\n                        />\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"call-container\">\n                    <h2>\n                      {callStatus === 'calling' \n                        ? `Calling ${currentCall?.username}...` \n                        : `In call with ${currentCall?.username}`}\n                    </h2>\n                    \n                    <div className=\"speaking-indicators\">\n                      <div className={`indicator ${isSpeaking ? 'speaking' : ''}`}>\n                        You {isSpeaking ? '(Speaking)' : ''}\n                      </div>\n                      <div className={`indicator ${peerSpeaking ? 'speaking' : ''}`}>\n                        {currentCall?.username} {peerSpeaking ? '(Speaking)' : ''}\n                      </div>\n                    </div>\n                    \n                    <div className=\"call-actions\">\n                      <AudioControls \n                        muted={!audioEnabled}\n                        onToggleMute={toggleMicrophone}\n                        onHangup={endCall}\n                        quality={networkQuality}\n                      />\n                      \n                      <Button\n                        onClick={() => {\n                          endCall();\n                          toggleVideoChat();\n                        }}\n                        variant=\"default\"\n                        className=\"ml-2\"\n                      >\n                        Switch to Video\n                      </Button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Audio elements */}\n        <audio ref={localAudioRef} autoPlay muted></audio>\n        <audio ref={remoteAudioRef} autoPlay></audio>\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>Secure {showVideoChat ? 'Video' : 'Voice'} Chat &copy; 2025 - End-to-End Encrypted | Zero Persistence | Privacy First</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}