{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/components/QRCodeGenerator.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { Button } from './ui/button';\nimport { cn } from '../lib/utils';\n\n/**\n * QR Code Generator Component\n * \n * Generates a QR code for easy connection between devices on the local network.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {string} props.connectionData - Data to encode in the QR code (typically room ID or connection details)\n * @param {string} props.className - Optional CSS class names\n * @param {Function} props.onDownload - Optional callback when QR code is downloaded\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = ({\n  connectionData,\n  className,\n  onDownload\n}) => {\n  _s();\n  const [qrValue, setQrValue] = useState('');\n  useEffect(() => {\n    // Format the connection data for QR code\n    // This could be a JSON string with room ID and any other necessary connection details\n    if (connectionData) {\n      try {\n        const formattedData = typeof connectionData === 'string' ? connectionData : JSON.stringify(connectionData);\n        setQrValue(formattedData);\n      } catch (error) {\n        console.error('Error formatting QR code data:', error);\n        setQrValue('');\n      }\n    }\n  }, [connectionData]);\n\n  // Handle QR code download\n  const handleDownload = () => {\n    const canvas = document.getElementById('connection-qrcode');\n    if (canvas) {\n      const dataUrl = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = 'secure-voice-chat-qrcode.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      if (onDownload) {\n        onDownload();\n      }\n    }\n  };\n  if (!qrValue) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm', className),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-white rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(QRCode, {\n        id: \"connection-qrcode\",\n        value: qrValue,\n        size: 200,\n        level: \"H\" // High error correction for better scanning\n        ,\n        includeMargin: true,\n        renderAs: \"canvas\",\n        \"aria-label\": \"QR code for secure connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2 w-full\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDownload,\n        variant: \"outline\",\n        className: \"w-full\",\n        \"aria-label\": \"Download QR code\",\n        children: \"Download QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-muted-foreground text-center\",\n        children: \"Scan this code with another device to connect securely\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"Wiv8nE0rEamguhRX/jxqRdIxD+U=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useEffect","useState","QRCode","Button","cn","jsxDEV","_jsxDEV","QRCodeGenerator","connectionData","className","onDownload","_s","qrValue","setQrValue","formattedData","JSON","stringify","error","console","handleDownload","canvas","document","getElementById","dataUrl","toDataURL","link","createElement","href","download","body","appendChild","click","removeChild","children","id","value","size","level","includeMargin","renderAs","fileName","_jsxFileName","lineNumber","columnNumber","onClick","variant","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/QRCodeGenerator.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport QRCode from 'qrcode.react';\nimport { Button } from './ui/button';\nimport { cn } from '../lib/utils';\n\n/**\n * QR Code Generator Component\n * \n * Generates a QR code for easy connection between devices on the local network.\n * Includes accessibility features and responsive design.\n * \n * @param {Object} props - Component properties\n * @param {string} props.connectionData - Data to encode in the QR code (typically room ID or connection details)\n * @param {string} props.className - Optional CSS class names\n * @param {Function} props.onDownload - Optional callback when QR code is downloaded\n */\nconst QRCodeGenerator = ({ connectionData, className, onDownload }) => {\n  const [qrValue, setQrValue] = useState('');\n  \n  useEffect(() => {\n    // Format the connection data for QR code\n    // This could be a JSON string with room ID and any other necessary connection details\n    if (connectionData) {\n      try {\n        const formattedData = typeof connectionData === 'string' \n          ? connectionData \n          : JSON.stringify(connectionData);\n        setQrValue(formattedData);\n      } catch (error) {\n        console.error('Error formatting QR code data:', error);\n        setQrValue('');\n      }\n    }\n  }, [connectionData]);\n\n  // Handle QR code download\n  const handleDownload = () => {\n    const canvas = document.getElementById('connection-qrcode');\n    if (canvas) {\n      const dataUrl = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.href = dataUrl;\n      link.download = 'secure-voice-chat-qrcode.png';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      \n      if (onDownload) {\n        onDownload();\n      }\n    }\n  };\n\n  if (!qrValue) {\n    return null;\n  }\n\n  return (\n    <div className={cn('flex flex-col items-center p-4 bg-card rounded-lg shadow-sm', className)}>\n      <div className=\"mb-4 p-4 bg-white rounded-lg\">\n        <QRCode\n          id=\"connection-qrcode\"\n          value={qrValue}\n          size={200}\n          level=\"H\" // High error correction for better scanning\n          includeMargin={true}\n          renderAs=\"canvas\"\n          aria-label=\"QR code for secure connection\"\n        />\n      </div>\n      \n      <div className=\"space-y-2 w-full\">\n        <Button \n          onClick={handleDownload}\n          variant=\"outline\"\n          className=\"w-full\"\n          aria-label=\"Download QR code\"\n        >\n          Download QR Code\n        </Button>\n        \n        <p className=\"text-sm text-muted-foreground text-center\">\n          Scan this code with another device to connect securely\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default QRCodeGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}