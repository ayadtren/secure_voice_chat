{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/components/VideoChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { WebRTCManager } from '../utils/webrtcManager';\nimport { clsx } from 'clsx';\nimport { cn } from '../lib/utils';\nimport QRCodeGenerator from './QRCodeGenerator';\nimport VideoContainer from './VideoContainer';\nimport VideoControls from './VideoControls';\nimport CameraPermissionGuide from './CameraPermissionGuide';\nimport VideoQualityControls from './VideoQualityControls';\nimport NetworkQualityIndicator from './NetworkQualityIndicator';\nimport ScreenShareButton from './ScreenShareButton';\nimport RecordButton from './RecordButton';\nimport RecordingHelper from './../utils/recordingHelper';\nimport { getOptimalLayout, addOrientationChangeListener } from './../utils/responsiveHelper';\nimport { cleanupWebRTCResources, cleanupRecordingResources } from './../utils/resourceCleanupHelper';\n\n/**\n * VideoChatRoom Component\n * \n * Main component for the video/voice chat room functionality.\n * Handles WebRTC connections, audio/video processing, and UI for the chat.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoChatRoom = ({\n  roomId,\n  userId,\n  onLeave\n}) => {\n  _s();\n  var _cameraStatus$browser;\n  const [socket, setSocket] = useState(null);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [connectedPeers, setConnectedPeers] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState({});\n  const [audioLevels, setAudioLevels] = useState({});\n  const [connectionQualities, setConnectionQualities] = useState({});\n  const [error, setError] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [showQRCode, setShowQRCode] = useState(false);\n\n  // Video-related state\n  const [isVideoEnabled, setIsVideoEnabled] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [cameraStatus, setCameraStatus] = useState(null);\n  const [localVideoStream, setLocalVideoStream] = useState(null);\n  const [remoteVideoStreams, setRemoteVideoStreams] = useState({});\n\n  // Phase 2 features - Video quality and network monitoring\n  const [currentVideoQuality, setCurrentVideoQuality] = useState('high');\n  const [networkQuality, setNetworkQuality] = useState(100);\n  const [networkMetrics, setNetworkMetrics] = useState(null);\n\n  // Phase 3 features - Screen sharing\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [screenStream, setScreenStream] = useState(null);\n\n  // Phase 3 features - Recording\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n\n  // Layout state for responsive design\n  const [layout, setLayout] = useState(getOptimalLayout());\n\n  // References\n  const audioRefs = useRef({});\n  const animationFrameRef = useRef(null);\n  const webrtcManagerRef = useRef(null);\n  const recordingHelperRef = useRef(null);\n\n  // Initialize socket and WebRTC manager\n  useEffect(() => {\n    // Create socket connection to signaling server\n    const newSocket = io(process.env.REACT_APP_SIGNALING_SERVER || window.location.origin, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: window.location.protocol === 'https:',\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n    setSocket(newSocket);\n\n    // Socket event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to signaling server');\n    });\n    newSocket.on('connect_error', err => {\n      console.error('Connection error:', err);\n      setError('Failed to connect to the signaling server. Please try again.');\n    });\n\n    // Clean up on unmount\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Initialize WebRTC manager when socket is ready\n  // Handle device orientation changes\n  useEffect(() => {\n    const removeListener = addOrientationChangeListener(() => {\n      setLayout(getOptimalLayout());\n    });\n    return () => {\n      removeListener();\n    };\n  }, []);\n  useEffect(() => {\n    if (!socket || !roomId) return;\n    const manager = new WebRTCManager(socket, {\n      userId,\n      onPeerConnect: handlePeerConnect,\n      onPeerDisconnect: handlePeerDisconnect,\n      onSpeakingChange: handleSpeakingChange,\n      onAudioQualityChange: handleAudioQualityChange,\n      onError: errorMsg => setError(errorMsg),\n      onMicrophoneStatus: handleMicrophoneStatus,\n      onCameraStatus: handleCameraStatus,\n      onLocalVideo: handleLocalVideo,\n      onRemoteVideo: handleRemoteVideo,\n      onVideoStatusChange: handleVideoStatusChange,\n      onNetworkQualityChange: handleNetworkQualityChange,\n      // Phase 2 - Network quality monitoring\n      onScreenSharingChange: handleScreenSharingChange // Phase 3 - Screen sharing\n    });\n    setWebrtcManager(manager);\n    webrtcManagerRef.current = manager;\n\n    // Initialize WebRTC and join room\n    manager.initialize(roomId).then(() => {\n      setIsConnecting(false);\n      startAudioLevelMonitoring(manager);\n\n      // Get available video devices\n      manager.getVideoDevices().then(devices => {\n        setVideoDevices(devices);\n      });\n\n      // Set initial video quality (Phase 2)\n      if (manager.setVideoQuality) {\n        manager.setVideoQuality(currentVideoQuality);\n      }\n\n      // Initialize recording helper (Phase 3)\n      recordingHelperRef.current = new RecordingHelper();\n    }).catch(err => {\n      console.error('Failed to initialize WebRTC:', err);\n      setError('Failed to access microphone. Please check your permissions.');\n      setIsConnecting(false);\n    });\n\n    // Clean up on unmount\n    return () => {\n      if (manager) {\n        manager.dispose();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [socket, roomId, userId]);\n\n  // Handle peer connection\n  const handlePeerConnect = (peerId, stream) => {\n    console.log(`Peer connected: ${peerId}`);\n\n    // Add to connected peers\n    setConnectedPeers(prevPeers => {\n      if (!prevPeers.includes(peerId)) {\n        return [...prevPeers, peerId];\n      }\n      return prevPeers;\n    });\n\n    // Create audio element for peer\n    if (stream) {\n      const audioElement = new Audio();\n      audioElement.srcObject = stream;\n      audioElement.autoplay = true;\n\n      // Store audio element reference\n      audioRefs.current[peerId] = audioElement;\n\n      // Start playing\n      audioElement.play().catch(err => {\n        console.error('Error playing audio:', err);\n      });\n    }\n  };\n\n  // Handle peer disconnection\n  const handlePeerDisconnect = peerId => {\n    console.log(`Peer disconnected: ${peerId}`);\n\n    // Remove from connected peers\n    setConnectedPeers(prevPeers => prevPeers.filter(id => id !== peerId));\n\n    // Remove speaking status\n    setPeerSpeaking(prevState => {\n      const newState = {\n        ...prevState\n      };\n      delete newState[peerId];\n      return newState;\n    });\n\n    // Remove audio levels\n    setAudioLevels(prevLevels => {\n      const newLevels = {\n        ...prevLevels\n      };\n      delete newLevels[peerId];\n      return newLevels;\n    });\n\n    // Remove connection quality\n    setConnectionQualities(prevQualities => {\n      const newQualities = {\n        ...prevQualities\n      };\n      delete newQualities[peerId];\n      return newQualities;\n    });\n\n    // Remove video stream\n    setRemoteVideoStreams(prevStreams => {\n      const newStreams = {\n        ...prevStreams\n      };\n      delete newStreams[peerId];\n      return newStreams;\n    });\n\n    // Clean up audio element\n    if (audioRefs.current[peerId]) {\n      audioRefs.current[peerId].srcObject = null;\n      delete audioRefs.current[peerId];\n    }\n  };\n\n  // Handle speaking change\n  const handleSpeakingChange = speaking => {\n    setIsSpeaking(speaking);\n  };\n\n  // Handle remote peer speaking change\n  const handlePeerSpeakingChange = (peerId, speaking) => {\n    setPeerSpeaking(prevState => ({\n      ...prevState,\n      [peerId]: speaking\n    }));\n  };\n\n  // Handle audio quality change\n  const handleAudioQualityChange = (peerId, quality, metrics) => {\n    setConnectionQualities(prevQualities => ({\n      ...prevQualities,\n      [peerId]: {\n        quality,\n        metrics\n      }\n    }));\n  };\n\n  // Handle microphone status change\n  const handleMicrophoneStatus = status => {\n    // This can be used to show microphone permission UI if needed\n    console.log('Microphone status:', status);\n  };\n\n  // Handle camera status change\n  const handleCameraStatus = status => {\n    setCameraStatus(status);\n  };\n\n  // Handle local video stream\n  const handleLocalVideo = stream => {\n    setLocalVideoStream(stream);\n  };\n\n  // Handle remote video stream\n  const handleRemoteVideo = (peerId, stream) => {\n    setRemoteVideoStreams(prevStreams => ({\n      ...prevStreams,\n      [peerId]: stream\n    }));\n  };\n\n  // Handle video status change\n  const handleVideoStatusChange = enabled => {\n    setIsVideoEnabled(enabled);\n  };\n\n  // Handle network quality change\n  const handleNetworkQualityChange = (quality, metrics) => {\n    setNetworkQuality(quality);\n    setNetworkMetrics(metrics);\n  };\n\n  // Handle video quality change (Phase 2)\n  const handleVideoQualityChange = qualityPreset => {\n    if (webrtcManager && webrtcManager.setVideoQuality) {\n      webrtcManager.setVideoQuality(qualityPreset.id);\n      setCurrentVideoQuality(qualityPreset.id);\n    }\n  };\n\n  // Start monitoring audio levels\n  const startAudioLevelMonitoring = manager => {\n    const updateAudioLevels = () => {\n      if (!manager) return;\n\n      // Update local audio level\n      const localLevel = manager.getAudioLevel();\n      setAudioLevels(prevLevels => ({\n        ...prevLevels,\n        local: localLevel\n      }));\n\n      // Continue monitoring\n      animationFrameRef.current = requestAnimationFrame(updateAudioLevels);\n    };\n\n    // Start monitoring\n    updateAudioLevels();\n  };\n\n  // Toggle mute\n  const handleToggleMute = () => {\n    if (webrtcManager) {\n      const newMuteState = webrtcManager.toggleMute();\n      setIsMuted(newMuteState);\n    }\n  };\n\n  // Toggle video\n  const handleToggleVideo = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n\n  // Switch camera\n  const handleSwitchCamera = async deviceId => {\n    if (webrtcManager) {\n      await webrtcManager.switchCamera(deviceId);\n    }\n  };\n\n  // Retry camera access\n  const handleRetryCameraAccess = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n\n  // Leave room\n  const handleLeaveRoom = () => {\n    // Clean up WebRTC resources\n    if (webrtcManagerRef.current) {\n      cleanupWebRTCResources(webrtcManagerRef.current);\n    }\n\n    // Clean up recording resources\n    if (recordingHelperRef.current) {\n      cleanupRecordingResources(recordingHelperRef.current);\n    }\n\n    // Stop recording if active\n    if (recordingHelperRef.current && recordingHelperRef.current.isCurrentlyRecording()) {\n      recordingHelperRef.current.stopRecording().catch(console.error);\n      setIsRecording(false);\n      setRecordingTime(0);\n    }\n    if (webrtcManager) {\n      webrtcManager.leaveRoom();\n    }\n    if (onLeave) {\n      onLeave();\n    }\n  };\n\n  // Toggle QR code display\n  const handleToggleQRCode = () => {\n    setShowQRCode(prev => !prev);\n  };\n\n  // Generate connection data for QR code\n  const getConnectionData = () => {\n    return JSON.stringify({\n      roomId,\n      server: window.location.origin\n    });\n  };\n\n  // Calculate grid columns based on number of participants\n  const getGridColumns = () => {\n    // Use layout for responsive grid\n    if (layout.videoLayout === 'stack') {\n      return 'grid-cols-1';\n    }\n    const totalParticipants = 1 + connectedPeers.length; // Local user + peers\n\n    if (totalParticipants === 1) return 'grid-cols-1';\n    if (totalParticipants === 2) return 'grid-cols-1 md:grid-cols-2';\n    if (totalParticipants <= 4) return 'grid-cols-2';\n    if (totalParticipants <= 6) return 'grid-cols-2 md:grid-cols-3';\n    return 'grid-cols-2 md:grid-cols-3 lg:grid-cols-4';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-gradient-to-b from-white to-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between p-4 border-b border-gray-200 bg-white shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-medium text-gray-900\",\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: [connectedPeers.length, \" \", connectedPeers.length === 1 ? 'peer' : 'peers', \" connected\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm text-gray-500 mr-2\",\n            children: \"Network:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NetworkQualityIndicator, {\n            quality: networkQuality\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), networkMetrics && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ml-2 text-xs text-gray-500\",\n            children: [networkMetrics.bitrate ? `${Math.round(networkMetrics.bitrate / 1000)} kbps` : '', networkMetrics.rtt ? ` | ${Math.round(networkMetrics.rtt)}ms` : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleQRCode,\n          className: clsx('inline-flex items-center justify-center px-2 py-[calc(--spacing(1.5)-1px)]', 'rounded-lg border border-transparent ring-1 shadow-sm ring-black/10', 'text-sm font-medium whitespace-nowrap text-gray-950', 'data-hover:bg-gray-50'),\n          \"aria-label\": showQRCode ? \"Hide QR code\" : \"Show QR code for connection\",\n          children: showQRCode ? \"Hide QR\" : \"Show QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleMute,\n          className: clsx('inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]', 'rounded-full border border-transparent shadow-md', 'text-base font-medium whitespace-nowrap', isMuted ? 'bg-white/15 ring-1 ring-[#D15052]/15 text-gray-950 data-hover:bg-white/20' : 'bg-gray-950 text-white data-hover:bg-gray-800', 'after:absolute after:inset-0 after:rounded-full after:shadow-[inset_0_0_2px_1px_#ffffff4d]'),\n          \"aria-label\": isMuted ? \"Unmute microphone\" : \"Mute microphone\",\n          children: isMuted ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"w-5 h-5 mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"1\",\n                y1: \"1\",\n                x2: \"23\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"19\",\n                x2: \"12\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"8\",\n                y1: \"23\",\n                x2: \"16\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 17\n            }, this), \"Unmute\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              className: \"w-5 h-5 mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M19 10v2a7 7 0 0 1-14 0v-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"12\",\n                y1: \"19\",\n                x2: \"12\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"8\",\n                y1: \"23\",\n                x2: \"16\",\n                y2: \"23\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this), \"Mute\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoControls, {\n          isVideoEnabled: isVideoEnabled,\n          onToggleVideo: handleToggleVideo,\n          onSwitchCamera: handleSwitchCamera,\n          videoDevices: videoDevices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoQualityControls, {\n          currentQuality: currentVideoQuality,\n          onQualityChange: handleVideoQualityChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveRoom,\n          className: clsx('inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]', 'rounded-full border border-transparent bg-[#D15052] shadow-md', 'text-base font-medium whitespace-nowrap text-white', 'data-hover:bg-[#C04042]'),\n          \"aria-label\": \"Leave chat room\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 overflow-auto\",\n      children: isConnecting ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2 text-gray-900\",\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Setting up secure connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium text-[#D15052] mb-2\",\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-500 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLeaveRoom,\n          className: clsx('inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]', 'rounded-full border border-transparent bg-gray-950 shadow-md', 'text-base font-medium whitespace-nowrap text-white', 'data-hover:bg-gray-800'),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-4\",\n        children: [showQRCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-xl shadow-md mx-auto max-w-xs\",\n          children: [/*#__PURE__*/_jsxDEV(QRCodeGenerator, {\n            connectionData: getConnectionData(),\n            className: \"mx-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center mt-4 text-sm text-gray-500\",\n            children: \"Scan to join this room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 15\n        }, this), cameraStatus && cameraStatus.status !== 'granted' && isVideoEnabled && /*#__PURE__*/_jsxDEV(CameraPermissionGuide, {\n          status: cameraStatus.status,\n          instructions: cameraStatus.instructions,\n          browser: (_cameraStatus$browser = cameraStatus.browser) === null || _cameraStatus$browser === void 0 ? void 0 : _cameraStatus$browser.name,\n          onRetry: handleRetryCameraAccess,\n          className: \"mx-auto max-w-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: clsx('grid gap-4', getGridColumns(), 'auto-rows-fr'),\n          children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n            stream: localVideoStream,\n            isMuted: true,\n            isLocal: true,\n            displayName: userId,\n            isSpeaking: isSpeaking,\n            isVideoEnabled: isVideoEnabled && localVideoStream !== null,\n            connectionQuality: networkQuality,\n            className: \"aspect-video h-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), connectedPeers.map(peerId => {\n            var _connectionQualities$;\n            return /*#__PURE__*/_jsxDEV(VideoContainer, {\n              stream: remoteVideoStreams[peerId],\n              isMuted: false,\n              isLocal: false,\n              displayName: peerId,\n              isSpeaking: peerSpeaking[peerId] || false,\n              isVideoEnabled: remoteVideoStreams[peerId] !== undefined,\n              connectionQuality: ((_connectionQualities$ = connectionQualities[peerId]) === null || _connectionQualities$ === void 0 ? void 0 : _connectionQualities$.quality) || 100,\n              className: \"aspect-video h-full\"\n            }, peerId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoChatRoom, \"yXnPmVaAdShXjn8FS8TAWHhCrmQ=\");\n_c = VideoChatRoom;\nexport default VideoChatRoom;\n\n// Handle screen sharing change (Phase 3)\nconst handleScreenSharingChange = (isSharing, stream) => {\n  setIsScreenSharing(isSharing);\n  setScreenStream(stream);\n};\n\n// Handle toggle screen sharing\nconst handleToggleScreenShare = async () => {\n  if (webrtcManager) {\n    await webrtcManager.toggleScreenSharing();\n  }\n};\n\n// Handle recording time update\nconst handleRecordingTimeUpdate = time => {\n  setRecordingTime(time);\n};\n\n// Handle toggle recording\nconst handleToggleRecording = async () => {\n  const recordingHelper = recordingHelperRef.current;\n  if (!recordingHelper) {\n    return;\n  }\n  if (recordingHelper.isCurrentlyRecording()) {\n    try {\n      // Stop recording\n      const recordedBlob = await recordingHelper.stopRecording();\n\n      // Download the recording\n      recordingHelper.downloadRecording(recordedBlob, `video-chat-${roomId}`);\n\n      // Update state\n      setIsRecording(false);\n      setRecordingTime(0);\n    } catch (error) {\n      console.error('Error stopping recording:', error);\n    }\n  } else {\n    // Start recording\n    const streamsToRecord = [localVideoStream];\n\n    // Add remote streams\n    Object.values(remoteVideoStreams).forEach(stream => {\n      if (stream) {\n        streamsToRecord.push(stream);\n      }\n    });\n\n    // Add screen sharing stream if active\n    if (isScreenSharing && screenStream) {\n      streamsToRecord.push(screenStream);\n    }\n\n    // Start recording\n    const success = recordingHelper.startRecording(streamsToRecord.filter(Boolean), handleRecordingTimeUpdate);\n    if (success) {\n      setIsRecording(true);\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"VideoChatRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","WebRTCManager","clsx","cn","QRCodeGenerator","VideoContainer","VideoControls","CameraPermissionGuide","VideoQualityControls","NetworkQualityIndicator","ScreenShareButton","RecordButton","RecordingHelper","getOptimalLayout","addOrientationChangeListener","cleanupWebRTCResources","cleanupRecordingResources","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoChatRoom","roomId","userId","onLeave","_s","_cameraStatus$browser","socket","setSocket","webrtcManager","setWebrtcManager","connectedPeers","setConnectedPeers","isMuted","setIsMuted","isSpeaking","setIsSpeaking","peerSpeaking","setPeerSpeaking","audioLevels","setAudioLevels","connectionQualities","setConnectionQualities","error","setError","isConnecting","setIsConnecting","showQRCode","setShowQRCode","isVideoEnabled","setIsVideoEnabled","videoDevices","setVideoDevices","cameraStatus","setCameraStatus","localVideoStream","setLocalVideoStream","remoteVideoStreams","setRemoteVideoStreams","currentVideoQuality","setCurrentVideoQuality","networkQuality","setNetworkQuality","networkMetrics","setNetworkMetrics","isScreenSharing","setIsScreenSharing","screenStream","setScreenStream","isRecording","setIsRecording","recordingTime","setRecordingTime","layout","setLayout","audioRefs","animationFrameRef","webrtcManagerRef","recordingHelperRef","newSocket","process","env","REACT_APP_SIGNALING_SERVER","window","location","origin","path","transports","secure","protocol","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","err","current","cancelAnimationFrame","disconnect","removeListener","manager","onPeerConnect","handlePeerConnect","onPeerDisconnect","handlePeerDisconnect","onSpeakingChange","handleSpeakingChange","onAudioQualityChange","handleAudioQualityChange","onError","errorMsg","onMicrophoneStatus","handleMicrophoneStatus","onCameraStatus","handleCameraStatus","onLocalVideo","handleLocalVideo","onRemoteVideo","handleRemoteVideo","onVideoStatusChange","handleVideoStatusChange","onNetworkQualityChange","handleNetworkQualityChange","onScreenSharingChange","handleScreenSharingChange","initialize","then","startAudioLevelMonitoring","getVideoDevices","devices","setVideoQuality","catch","dispose","peerId","stream","prevPeers","includes","audioElement","Audio","srcObject","autoplay","play","filter","id","prevState","newState","prevLevels","newLevels","prevQualities","newQualities","prevStreams","newStreams","speaking","handlePeerSpeakingChange","quality","metrics","status","enabled","handleVideoQualityChange","qualityPreset","updateAudioLevels","localLevel","getAudioLevel","local","requestAnimationFrame","handleToggleMute","newMuteState","toggleMute","handleToggleVideo","videoEnabled","toggleVideo","handleSwitchCamera","deviceId","switchCamera","handleRetryCameraAccess","handleLeaveRoom","isCurrentlyRecording","stopRecording","leaveRoom","handleToggleQRCode","prev","getConnectionData","JSON","stringify","server","getGridColumns","videoLayout","totalParticipants","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","bitrate","Math","round","rtt","onClick","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","onToggleVideo","onSwitchCamera","currentQuality","onQualityChange","connectionData","instructions","browser","name","onRetry","isLocal","displayName","connectionQuality","map","_connectionQualities$","undefined","_c","isSharing","handleToggleScreenShare","toggleScreenSharing","handleRecordingTimeUpdate","time","handleToggleRecording","recordingHelper","recordedBlob","downloadRecording","streamsToRecord","Object","values","forEach","push","success","startRecording","Boolean","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/VideoChatRoom.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { WebRTCManager } from '../utils/webrtcManager';\nimport { clsx } from 'clsx';\nimport { cn } from '../lib/utils';\nimport QRCodeGenerator from './QRCodeGenerator';\nimport VideoContainer from './VideoContainer';\nimport VideoControls from './VideoControls';\nimport CameraPermissionGuide from './CameraPermissionGuide';\nimport VideoQualityControls from './VideoQualityControls';\nimport NetworkQualityIndicator from './NetworkQualityIndicator';\nimport ScreenShareButton from './ScreenShareButton';\nimport RecordButton from './RecordButton';\nimport RecordingHelper from './../utils/recordingHelper';\nimport { getOptimalLayout, addOrientationChangeListener } from './../utils/responsiveHelper';\nimport { cleanupWebRTCResources, cleanupRecordingResources } from './../utils/resourceCleanupHelper';\n\n/**\n * VideoChatRoom Component\n * \n * Main component for the video/voice chat room functionality.\n * Handles WebRTC connections, audio/video processing, and UI for the chat.\n */\nconst VideoChatRoom = ({ roomId, userId, onLeave }) => {\n  const [socket, setSocket] = useState(null);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [connectedPeers, setConnectedPeers] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState({});\n  const [audioLevels, setAudioLevels] = useState({});\n  const [connectionQualities, setConnectionQualities] = useState({});\n  const [error, setError] = useState(null);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [showQRCode, setShowQRCode] = useState(false);\n  \n  // Video-related state\n  const [isVideoEnabled, setIsVideoEnabled] = useState(false);\n  const [videoDevices, setVideoDevices] = useState([]);\n  const [cameraStatus, setCameraStatus] = useState(null);\n  const [localVideoStream, setLocalVideoStream] = useState(null);\n  const [remoteVideoStreams, setRemoteVideoStreams] = useState({});\n  \n  // Phase 2 features - Video quality and network monitoring\n  const [currentVideoQuality, setCurrentVideoQuality] = useState('high');\n  const [networkQuality, setNetworkQuality] = useState(100);\n  const [networkMetrics, setNetworkMetrics] = useState(null);\n  \n  // Phase 3 features - Screen sharing\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [screenStream, setScreenStream] = useState(null);\n  \n  // Phase 3 features - Recording\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  \n  // Layout state for responsive design\n  const [layout, setLayout] = useState(getOptimalLayout());\n  \n  // References\n  const audioRefs = useRef({});\n  const animationFrameRef = useRef(null);\n  const webrtcManagerRef = useRef(null);\n  const recordingHelperRef = useRef(null);\n  \n  // Initialize socket and WebRTC manager\n  useEffect(() => {\n    // Create socket connection to signaling server\n    const newSocket = io(process.env.REACT_APP_SIGNALING_SERVER || window.location.origin, {\n      path: '/socket.io',\n      transports: ['websocket'],\n      secure: window.location.protocol === 'https:',\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n    });\n    \n    setSocket(newSocket);\n    \n    // Socket event handlers\n    newSocket.on('connect', () => {\n      console.log('Connected to signaling server');\n    });\n    \n    newSocket.on('connect_error', (err) => {\n      console.error('Connection error:', err);\n      setError('Failed to connect to the signaling server. Please try again.');\n    });\n    \n    // Clean up on unmount\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      \n      newSocket.disconnect();\n    };\n  }, []);\n  \n  // Initialize WebRTC manager when socket is ready\n  // Handle device orientation changes\n  useEffect(() => {\n    const removeListener = addOrientationChangeListener(() => {\n      setLayout(getOptimalLayout());\n    });\n    \n    return () => {\n      removeListener();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!socket || !roomId) return;\n    \n    const manager = new WebRTCManager(socket, {\n      userId,\n      onPeerConnect: handlePeerConnect,\n      onPeerDisconnect: handlePeerDisconnect,\n      onSpeakingChange: handleSpeakingChange,\n      onAudioQualityChange: handleAudioQualityChange,\n      onError: (errorMsg) => setError(errorMsg),\n      onMicrophoneStatus: handleMicrophoneStatus,\n      onCameraStatus: handleCameraStatus,\n      onLocalVideo: handleLocalVideo,\n      onRemoteVideo: handleRemoteVideo,\n      onVideoStatusChange: handleVideoStatusChange,\n      onNetworkQualityChange: handleNetworkQualityChange, // Phase 2 - Network quality monitoring\n      onScreenSharingChange: handleScreenSharingChange, // Phase 3 - Screen sharing\n    });\n    \n    setWebrtcManager(manager);\n    webrtcManagerRef.current = manager;\n    \n    // Initialize WebRTC and join room\n    manager.initialize(roomId)\n      .then(() => {\n        setIsConnecting(false);\n        startAudioLevelMonitoring(manager);\n        \n        // Get available video devices\n        manager.getVideoDevices().then(devices => {\n          setVideoDevices(devices);\n        });\n        \n        // Set initial video quality (Phase 2)\n        if (manager.setVideoQuality) {\n          manager.setVideoQuality(currentVideoQuality);\n        }\n        \n        // Initialize recording helper (Phase 3)\n        recordingHelperRef.current = new RecordingHelper();\n      })\n      .catch((err) => {\n        console.error('Failed to initialize WebRTC:', err);\n        setError('Failed to access microphone. Please check your permissions.');\n        setIsConnecting(false);\n      });\n    \n    // Clean up on unmount\n    return () => {\n      if (manager) {\n        manager.dispose();\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [socket, roomId, userId]);\n  \n  // Handle peer connection\n  const handlePeerConnect = (peerId, stream) => {\n    console.log(`Peer connected: ${peerId}`);\n    \n    // Add to connected peers\n    setConnectedPeers((prevPeers) => {\n      if (!prevPeers.includes(peerId)) {\n        return [...prevPeers, peerId];\n      }\n      return prevPeers;\n    });\n    \n    // Create audio element for peer\n    if (stream) {\n      const audioElement = new Audio();\n      audioElement.srcObject = stream;\n      audioElement.autoplay = true;\n      \n      // Store audio element reference\n      audioRefs.current[peerId] = audioElement;\n      \n      // Start playing\n      audioElement.play().catch((err) => {\n        console.error('Error playing audio:', err);\n      });\n    }\n  };\n  \n  // Handle peer disconnection\n  const handlePeerDisconnect = (peerId) => {\n    console.log(`Peer disconnected: ${peerId}`);\n    \n    // Remove from connected peers\n    setConnectedPeers((prevPeers) => prevPeers.filter((id) => id !== peerId));\n    \n    // Remove speaking status\n    setPeerSpeaking((prevState) => {\n      const newState = { ...prevState };\n      delete newState[peerId];\n      return newState;\n    });\n    \n    // Remove audio levels\n    setAudioLevels((prevLevels) => {\n      const newLevels = { ...prevLevels };\n      delete newLevels[peerId];\n      return newLevels;\n    });\n    \n    // Remove connection quality\n    setConnectionQualities((prevQualities) => {\n      const newQualities = { ...prevQualities };\n      delete newQualities[peerId];\n      return newQualities;\n    });\n    \n    // Remove video stream\n    setRemoteVideoStreams((prevStreams) => {\n      const newStreams = { ...prevStreams };\n      delete newStreams[peerId];\n      return newStreams;\n    });\n    \n    // Clean up audio element\n    if (audioRefs.current[peerId]) {\n      audioRefs.current[peerId].srcObject = null;\n      delete audioRefs.current[peerId];\n    }\n  };\n  \n  // Handle speaking change\n  const handleSpeakingChange = (speaking) => {\n    setIsSpeaking(speaking);\n  };\n  \n  // Handle remote peer speaking change\n  const handlePeerSpeakingChange = (peerId, speaking) => {\n    setPeerSpeaking((prevState) => ({\n      ...prevState,\n      [peerId]: speaking,\n    }));\n  };\n  \n  // Handle audio quality change\n  const handleAudioQualityChange = (peerId, quality, metrics) => {\n    setConnectionQualities((prevQualities) => ({\n      ...prevQualities,\n      [peerId]: { quality, metrics },\n    }));\n  };\n  \n  // Handle microphone status change\n  const handleMicrophoneStatus = (status) => {\n    // This can be used to show microphone permission UI if needed\n    console.log('Microphone status:', status);\n  };\n  \n  // Handle camera status change\n  const handleCameraStatus = (status) => {\n    setCameraStatus(status);\n  };\n  \n  // Handle local video stream\n  const handleLocalVideo = (stream) => {\n    setLocalVideoStream(stream);\n  };\n  \n  // Handle remote video stream\n  const handleRemoteVideo = (peerId, stream) => {\n    setRemoteVideoStreams((prevStreams) => ({\n      ...prevStreams,\n      [peerId]: stream,\n    }));\n  };\n  \n  // Handle video status change\n  const handleVideoStatusChange = (enabled) => {\n    setIsVideoEnabled(enabled);\n  };\n  \n  // Handle network quality change\n  const handleNetworkQualityChange = (quality, metrics) => {\n    setNetworkQuality(quality);\n    setNetworkMetrics(metrics);\n  };\n  \n  // Handle video quality change (Phase 2)\n  const handleVideoQualityChange = (qualityPreset) => {\n    if (webrtcManager && webrtcManager.setVideoQuality) {\n      webrtcManager.setVideoQuality(qualityPreset.id);\n      setCurrentVideoQuality(qualityPreset.id);\n    }\n  };\n  \n  // Start monitoring audio levels\n  const startAudioLevelMonitoring = (manager) => {\n    const updateAudioLevels = () => {\n      if (!manager) return;\n      \n      // Update local audio level\n      const localLevel = manager.getAudioLevel();\n      \n      setAudioLevels((prevLevels) => ({\n        ...prevLevels,\n        local: localLevel,\n      }));\n      \n      // Continue monitoring\n      animationFrameRef.current = requestAnimationFrame(updateAudioLevels);\n    };\n    \n    // Start monitoring\n    updateAudioLevels();\n  };\n  \n  // Toggle mute\n  const handleToggleMute = () => {\n    if (webrtcManager) {\n      const newMuteState = webrtcManager.toggleMute();\n      setIsMuted(newMuteState);\n    }\n  };\n  \n  // Toggle video\n  const handleToggleVideo = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n  \n  // Switch camera\n  const handleSwitchCamera = async (deviceId) => {\n    if (webrtcManager) {\n      await webrtcManager.switchCamera(deviceId);\n    }\n  };\n  \n  // Retry camera access\n  const handleRetryCameraAccess = async () => {\n    if (webrtcManager) {\n      const videoEnabled = await webrtcManager.toggleVideo();\n      setIsVideoEnabled(videoEnabled);\n    }\n  };\n  \n  // Leave room\n  const handleLeaveRoom = () => {\n    // Clean up WebRTC resources\n    if (webrtcManagerRef.current) {\n      cleanupWebRTCResources(webrtcManagerRef.current);\n    }\n    \n    // Clean up recording resources\n    if (recordingHelperRef.current) {\n      cleanupRecordingResources(recordingHelperRef.current);\n    }\n\n    // Stop recording if active\n    if (recordingHelperRef.current && recordingHelperRef.current.isCurrentlyRecording()) {\n      recordingHelperRef.current.stopRecording().catch(console.error);\n      setIsRecording(false);\n      setRecordingTime(0);\n    }\n    if (webrtcManager) {\n      webrtcManager.leaveRoom();\n    }\n    \n    if (onLeave) {\n      onLeave();\n    }\n  };\n  \n  // Toggle QR code display\n  const handleToggleQRCode = () => {\n    setShowQRCode((prev) => !prev);\n  };\n  \n  // Generate connection data for QR code\n  const getConnectionData = () => {\n    return JSON.stringify({\n      roomId,\n      server: window.location.origin,\n    });\n  };\n  \n  // Calculate grid columns based on number of participants\n  const getGridColumns = () => {\n    // Use layout for responsive grid\n    if (layout.videoLayout === 'stack') {\n      return 'grid-cols-1';\n    }\n    \n    const totalParticipants = 1 + connectedPeers.length; // Local user + peers\n    \n    if (totalParticipants === 1) return 'grid-cols-1';\n    if (totalParticipants === 2) return 'grid-cols-1 md:grid-cols-2';\n    if (totalParticipants <= 4) return 'grid-cols-2';\n    if (totalParticipants <= 6) return 'grid-cols-2 md:grid-cols-3';\n    return 'grid-cols-2 md:grid-cols-3 lg:grid-cols-4';\n  };\n  \n  return (\n    <div className=\"flex flex-col h-full bg-gradient-to-b from-white to-gray-50\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-white shadow-sm\">\n        <div className=\"flex items-center space-x-2\">\n          <h2 className=\"text-lg font-medium text-gray-900\">Room: {roomId}</h2>\n          <div className=\"text-sm text-gray-500\">\n            {connectedPeers.length} {connectedPeers.length === 1 ? 'peer' : 'peers'} connected\n          </div>\n          {/* Network quality indicator (Phase 2) */}\n          <div className=\"flex items-center ml-4\">\n            <span className=\"text-sm text-gray-500 mr-2\">Network:</span>\n            <NetworkQualityIndicator quality={networkQuality} />\n            {networkMetrics && (\n              <div className=\"ml-2 text-xs text-gray-500\">\n                {networkMetrics.bitrate ? `${Math.round(networkMetrics.bitrate / 1000)} kbps` : ''}\n                {networkMetrics.rtt ? ` | ${Math.round(networkMetrics.rtt)}ms` : ''}\n              </div>\n            )}\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <button\n            onClick={handleToggleQRCode}\n            className={clsx(\n              'inline-flex items-center justify-center px-2 py-[calc(--spacing(1.5)-1px)]',\n              'rounded-lg border border-transparent ring-1 shadow-sm ring-black/10',\n              'text-sm font-medium whitespace-nowrap text-gray-950',\n              'data-hover:bg-gray-50'\n            )}\n            aria-label={showQRCode ? \"Hide QR code\" : \"Show QR code for connection\"}\n          >\n            {showQRCode ? \"Hide QR\" : \"Show QR\"}\n          </button>\n          \n          <button\n            onClick={handleToggleMute}\n            className={clsx(\n              'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]',\n              'rounded-full border border-transparent shadow-md',\n              'text-base font-medium whitespace-nowrap',\n              isMuted ? \n                'bg-white/15 ring-1 ring-[#D15052]/15 text-gray-950 data-hover:bg-white/20' : \n                'bg-gray-950 text-white data-hover:bg-gray-800',\n              'after:absolute after:inset-0 after:rounded-full after:shadow-[inset_0_0_2px_1px_#ffffff4d]'\n            )}\n            aria-label={isMuted ? \"Unmute microphone\" : \"Mute microphone\"}\n          >\n            {isMuted ? (\n              <>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-5 h-5 mr-2\">\n                  <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n                  <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n                  <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n                  <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n                  <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n                </svg>\n                Unmute\n              </>\n            ) : (\n              <>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"w-5 h-5 mr-2\">\n                  <path d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"></path>\n                  <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n                  <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n                  <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n                </svg>\n                Mute\n              </>\n            )}\n          </button>\n          \n          <VideoControls \n            isVideoEnabled={isVideoEnabled}\n            onToggleVideo={handleToggleVideo}\n            onSwitchCamera={handleSwitchCamera}\n            videoDevices={videoDevices}\n          />\n          \n          <VideoQualityControls \n            currentQuality={currentVideoQuality}\n            onQualityChange={handleVideoQualityChange}\n          />\n          \n          <button\n            onClick={handleLeaveRoom}\n            className={clsx(\n              'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]',\n              'rounded-full border border-transparent bg-[#D15052] shadow-md',\n              'text-base font-medium whitespace-nowrap text-white',\n              'data-hover:bg-[#C04042]'\n            )}\n            aria-label=\"Leave chat room\"\n          >\n            Leave\n          </button>\n        </div>\n      </div>\n      \n      {/* Main content */}\n      <div className=\"flex-1 p-4 overflow-auto\">\n        {isConnecting ? (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            <div className=\"text-lg font-medium mb-2 text-gray-900\">Connecting...</div>\n            <div className=\"text-sm text-gray-500\">\n              Setting up secure connection\n            </div>\n          </div>\n        ) : error ? (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            <div className=\"text-lg font-medium text-[#D15052] mb-2\">Error</div>\n            <div className=\"text-sm text-gray-500 mb-4\">{error}</div>\n            <button\n              onClick={handleLeaveRoom}\n              className={clsx(\n                'inline-flex items-center justify-center px-4 py-[calc(--spacing(2)-1px)]',\n                'rounded-full border border-transparent bg-gray-950 shadow-md',\n                'text-base font-medium whitespace-nowrap text-white',\n                'data-hover:bg-gray-800'\n              )}\n            >\n              Go Back\n            </button>\n          </div>\n        ) : (\n          <div className=\"flex flex-col space-y-4\">\n            {/* QR Code */}\n            {showQRCode && (\n              <div className=\"bg-white p-6 rounded-xl shadow-md mx-auto max-w-xs\">\n                <QRCodeGenerator\n                  connectionData={getConnectionData()}\n                  className=\"mx-auto\"\n                />\n                <p className=\"text-center mt-4 text-sm text-gray-500\">\n                  Scan to join this room\n                </p>\n              </div>\n            )}\n            \n            {/* Camera permission guide */}\n            {cameraStatus && cameraStatus.status !== 'granted' && isVideoEnabled && (\n              <CameraPermissionGuide\n                status={cameraStatus.status}\n                instructions={cameraStatus.instructions}\n                browser={cameraStatus.browser?.name}\n                onRetry={handleRetryCameraAccess}\n                className=\"mx-auto max-w-md\"\n              />\n            )}\n            \n            {/* Video grid */}\n            <div className={clsx(\n              'grid gap-4',\n              getGridColumns(),\n              'auto-rows-fr'\n            )}>\n              {/* Local user */}\n              <VideoContainer\n                stream={localVideoStream}\n                isMuted={true}\n                isLocal={true}\n                displayName={userId}\n                isSpeaking={isSpeaking}\n                isVideoEnabled={isVideoEnabled && localVideoStream !== null}\n                connectionQuality={networkQuality}\n                className=\"aspect-video h-full\"\n              />\n              \n              {/* Connected peers */}\n              {connectedPeers.map((peerId) => (\n                <VideoContainer\n                  key={peerId}\n                  stream={remoteVideoStreams[peerId]}\n                  isMuted={false}\n                  isLocal={false}\n                  displayName={peerId}\n                  isSpeaking={peerSpeaking[peerId] || false}\n                  isVideoEnabled={remoteVideoStreams[peerId] !== undefined}\n                  connectionQuality={connectionQualities[peerId]?.quality || 100}\n                  className=\"aspect-video h-full\"\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoChatRoom;\n\n  // Handle screen sharing change (Phase 3)\n  const handleScreenSharingChange = (isSharing, stream) => {\n    setIsScreenSharing(isSharing);\n    setScreenStream(stream);\n  };\n\n  // Handle toggle screen sharing\n  const handleToggleScreenShare = async () => {\n    if (webrtcManager) {\n      await webrtcManager.toggleScreenSharing();\n    }\n  };\n\n  // Handle recording time update\n  const handleRecordingTimeUpdate = (time) => {\n    setRecordingTime(time);\n  };\n\n  // Handle toggle recording\n  const handleToggleRecording = async () => {\n    const recordingHelper = recordingHelperRef.current;\n    \n    if (!recordingHelper) {\n      return;\n    }\n    \n    if (recordingHelper.isCurrentlyRecording()) {\n      try {\n        // Stop recording\n        const recordedBlob = await recordingHelper.stopRecording();\n        \n        // Download the recording\n        recordingHelper.downloadRecording(recordedBlob, `video-chat-${roomId}`);\n        \n        // Update state\n        setIsRecording(false);\n        setRecordingTime(0);\n      } catch (error) {\n        console.error('Error stopping recording:', error);\n      }\n    } else {\n      // Start recording\n      const streamsToRecord = [localVideoStream];\n      \n      // Add remote streams\n      Object.values(remoteVideoStreams).forEach(stream => {\n        if (stream) {\n          streamsToRecord.push(stream);\n        }\n      });\n      \n      // Add screen sharing stream if active\n      if (isScreenSharing && screenStream) {\n        streamsToRecord.push(screenStream);\n      }\n      \n      // Start recording\n      const success = recordingHelper.startRecording(\n        streamsToRecord.filter(Boolean),\n        handleRecordingTimeUpdate\n      );\n      \n      if (success) {\n        setIsRecording(true);\n      }\n    }\n  };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}