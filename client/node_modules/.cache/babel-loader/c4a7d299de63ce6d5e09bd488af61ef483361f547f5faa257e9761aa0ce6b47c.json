{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/App.js\",\n  _window$APP_CONFIG,\n  _window$APP_CONFIG2,\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport UserList from './components/UserList';\nimport AudioControls from './components/AudioControls';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport Login from './components/Login';\nimport { WebRTCManager } from './utils/webrtcManager';\nimport QRCodeGenerator from './components/QRCodeGenerator';\nimport QRCodeScanner from './components/QRCodeScanner';\nimport MicrophonePermissionGuide from './components/MicrophonePermissionGuide';\nimport { Button } from './components/ui/button';\n\n// Configuration - prioritize runtime config over environment variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SERVER_URL = ((_window$APP_CONFIG = window.APP_CONFIG) === null || _window$APP_CONFIG === void 0 ? void 0 : _window$APP_CONFIG.SERVER_URL) || process.env.REACT_APP_SERVER_URL;\nconst WS_URL = ((_window$APP_CONFIG2 = window.APP_CONFIG) === null || _window$APP_CONFIG2 === void 0 ? void 0 : _window$APP_CONFIG2.WS_URL) || process.env.REACT_APP_WS_URL;\nconsole.log('Using server URL:', SERVER_URL);\nconsole.log('Using WebSocket URL:', WS_URL);\nfunction App() {\n  _s();\n  // State\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n  const [currentCall, setCurrentCall] = useState(null);\n  const [callStatus, setCallStatus] = useState('idle'); // idle, calling, connected\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [networkQuality, setNetworkQuality] = useState(100); // 0-100\n  const [darkMode, setDarkMode] = useState(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [showQRScanner, setShowQRScanner] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState(false);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [microphoneStatus, setMicrophoneStatus] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  // Refs\n  const localStream = useRef(null);\n  const localAudioRef = useRef(null);\n  const remoteAudioRef = useRef(null);\n\n  // Cleanup local audio stream\n  const cleanupLocalStream = () => {\n    if (localStream.current) {\n      const tracks = localStream.current.getTracks();\n      tracks.forEach(track => track.stop());\n      localStream.current = null;\n    }\n    if (localAudioRef.current) {\n      localAudioRef.current.srcObject = null;\n    }\n  };\n\n  // Handle call end (cleanup)\n  const handleCallEnd = useCallback(() => {\n    if (webrtcManager) {\n      webrtcManager.dispose();\n      setWebrtcManager(null);\n    }\n    cleanupLocalStream();\n    setCurrentCall(null);\n    setCallStatus('idle');\n    setNetworkQuality(100);\n    setIsSpeaking(false);\n    setPeerSpeaking(false);\n  }, [webrtcManager]);\n\n  // Initialize WebRTC manager\n  const initializeWebRTC = useCallback(async socketInstance => {\n    try {\n      const manager = new WebRTCManager(socketInstance, {\n        userId: socketInstance.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: peerId => {\n          setCallStatus('idle');\n          setCurrentCall(null);\n          setPeerSpeaking(false);\n        },\n        onSpeakingChange: speaking => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: quality => {\n          setNetworkQuality(quality.overall);\n        },\n        onError: error => {\n          console.error('WebRTC error:', error);\n          setErrorMessage(error);\n          setTimeout(() => setErrorMessage(null), 5000);\n        },\n        onMicrophoneStatus: status => {\n          console.log('Microphone status:', status);\n          setMicrophoneStatus(status);\n        }\n      });\n      await manager.initialize('lobby');\n      setWebrtcManager(manager);\n      return manager;\n    } catch (error) {\n      console.error('Failed to initialize WebRTC:', error);\n      return null;\n    }\n  }, []);\n\n  // Handle socket events\n  useEffect(() => {\n    if (!WS_URL) {\n      console.error('WebSocket URL is not defined');\n      return;\n    }\n    console.log('Connecting to WebSocket server at:', WS_URL);\n    const newSocket = io(WS_URL, {\n      reconnectionAttempts: 10,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n      transports: ['websocket', 'polling']\n    });\n    setSocket(newSocket);\n\n    // Connection events\n    newSocket.on('connect', () => {\n      console.log('Connected to server with ID:', newSocket.id);\n      setConnected(true);\n\n      // Initialize WebRTC after connection\n      initializeWebRTC(newSocket).catch(error => {\n        console.error('Error initializing WebRTC:', error);\n      });\n    });\n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n      handleCallEnd();\n    });\n    newSocket.on('connect_error', error => {\n      console.error('Connection error:', error);\n      setConnected(false);\n    });\n    newSocket.on('error', error => {\n      console.error('Socket error:', error);\n      alert(`Error: ${error.message}`);\n    });\n    newSocket.on('userList', userList => {\n      setUsers(userList.filter(user => user.id !== newSocket.id));\n    });\n    newSocket.on('registered', data => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n    });\n\n    // WebRTC signaling events\n    newSocket.on('offer', async ({\n      from,\n      offer\n    }) => {\n      console.log('Received offer from:', from);\n\n      // If already in a call, reject\n      if (callStatus !== 'idle') {\n        newSocket.emit('busy', {\n          target: from\n        });\n        return;\n      }\n\n      // Get caller info\n      const caller = users.find(user => user.id === from);\n      if (!caller) return;\n\n      // Ask user to accept call\n      const accept = window.confirm(`Incoming call from ${caller.username}. Accept?`);\n      if (!accept) {\n        newSocket.emit('reject', {\n          target: from\n        });\n        return;\n      }\n      try {\n        // Accept call using existing WebRTC manager\n        if (!webrtcManager) {\n          throw new Error('WebRTC not initialized');\n        }\n        await webrtcManager.acceptIncomingCall(from, offer);\n        setCurrentCall(caller);\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error accepting call:', error);\n        newSocket.emit('error', {\n          target: from,\n          message: 'Failed to accept call'\n        });\n      }\n    });\n    newSocket.on('answer', async ({\n      from,\n      answer\n    }) => {\n      console.log('Received answer from:', from);\n      if (!webrtcManager || callStatus !== 'calling') return;\n      try {\n        await webrtcManager.handleAnswer(from, answer);\n        console.log('Remote description set successfully');\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error setting remote description:', error);\n        handleCallEnd();\n      }\n    });\n    newSocket.on('iceCandidate', async ({\n      from,\n      candidate\n    }) => {\n      console.log('Received ICE candidate from:', from);\n      if (!webrtcManager) return;\n      try {\n        await webrtcManager.addIceCandidate(from, candidate);\n        console.log('Added ICE candidate successfully');\n      } catch (error) {\n        console.error('Error adding ICE candidate:', error);\n      }\n    });\n    newSocket.on('speaking', ({\n      userId,\n      speaking\n    }) => {\n      if (currentCall && userId === currentCall.id) {\n        setPeerSpeaking(speaking);\n      }\n    });\n    newSocket.on('reject', () => {\n      alert('Call was rejected');\n      handleCallEnd();\n    });\n    newSocket.on('busy', () => {\n      alert('User is busy');\n      handleCallEnd();\n    });\n    newSocket.on('callEnded', () => {\n      alert('Call ended by the other user');\n      handleCallEnd();\n    });\n\n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n      cleanupLocalStream();\n      if (webrtcManager) {\n        webrtcManager.dispose();\n      }\n    };\n  }, [callStatus, currentCall, handleCallEnd, users, initializeWebRTC, webrtcManager]);\n\n  // Handle dark mode preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = e => setDarkMode(e.matches);\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Apply dark mode class to body\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n\n  // Handle user registration\n  const handleLogin = async username => {\n    if (!socket || !connected) {\n      console.error('Not connected to server');\n      alert('Not connected to server. Please try again.');\n      return;\n    }\n    console.log('Attempting to register with username:', username);\n\n    // Add event listeners for registration response\n    const onRegistered = data => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n    const onError = error => {\n      console.error('Registration error:', error);\n      alert(`Registration error: ${error.message}`);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n\n    // Listen for the response\n    socket.on('registered', onRegistered);\n    socket.on('error', onError);\n\n    // Send registration request\n    socket.emit('register', {\n      username\n    });\n  };\n\n  // Start a call with a user\n  const startCall = async targetUser => {\n    if (callStatus !== 'idle') return;\n    try {\n      // Create new WebRTC manager\n      const manager = new WebRTCManager(socket, {\n        userId: socket.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: () => {\n          handleCallEnd();\n        },\n        onSpeakingChange: speaking => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (peerId, quality) => {\n          setNetworkQuality(Math.round(quality));\n        },\n        onError: error => {\n          console.error('WebRTC error:', error);\n          alert(`WebRTC error: ${error}`);\n        }\n      });\n      setWebrtcManager(manager);\n\n      // Initialize and start the call\n      await manager.initialize(targetUser.id);\n      await manager.startCall(targetUser.id);\n      setCurrentCall(targetUser);\n      setCallStatus('calling');\n    } catch (error) {\n      console.error('Error starting call:', error);\n      alert('Failed to start call. Please try again.');\n      handleCallEnd();\n    }\n  };\n\n  // End the current call\n  const endCall = () => {\n    if (!socket || !currentCall) return;\n    socket.emit('callEnded', {\n      target: currentCall.id\n    });\n    handleCallEnd();\n  };\n\n  // Toggle microphone\n  const toggleMicrophone = () => {\n    if (webrtcManager) {\n      const enabled = webrtcManager.toggleMicrophone();\n      setAudioEnabled(enabled);\n    } else if (localStream.current) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setAudioEnabled(audioTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  // Handle QR code scan result\n  const handleQRScan = data => {\n    try {\n      const connectionData = JSON.parse(data);\n      if (connectionData.roomId && connectionData.userId) {\n        // Start call with scanned user\n        const user = {\n          id: connectionData.userId,\n          username: connectionData.username || 'User via QR'\n        };\n        startCall(user);\n        setShowQRScanner(false);\n      }\n    } catch (error) {\n      console.error('Invalid QR code data:', error);\n      alert('Invalid QR code. Please try again.');\n    }\n  };\n\n  // Generate QR code data\n  const getQRCodeData = () => {\n    return JSON.stringify({\n      roomId: socket === null || socket === void 0 ? void 0 : socket.id,\n      userId: socket === null || socket === void 0 ? void 0 : socket.id,\n      username: username\n    });\n  };\n\n  // Handle retry for microphone permissions\n  const handleRetryMicrophoneAccess = useCallback(async () => {\n    setMicrophoneStatus({\n      status: 'requesting',\n      message: 'Requesting microphone access...'\n    });\n    try {\n      if (webrtcManager) {\n        // Use the dedicated retry method instead of reinitializing\n        const success = await webrtcManager.retryMicrophoneAccess();\n        if (!success) {\n          console.error('Failed to get microphone access after retry');\n        }\n      } else if (socket) {\n        // If no webrtcManager exists yet, create a new one\n        await initializeWebRTC(socket);\n      }\n    } catch (error) {\n      console.error('Error retrying microphone access:', error);\n    }\n  }, [socket, webrtcManager, initializeWebRTC]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `app ${darkMode ? 'dark-mode' : 'light-mode'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Secure Voice Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleDarkMode,\n        \"aria-label\": darkMode ? 'Switch to light mode' : 'Switch to dark mode',\n        children: darkMode ? '☀️' : '🌙'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-content\",\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setErrorMessage(null),\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), !username ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        connected: connected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Your Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Username: \", username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Status: \", connected ? 'Connected' : 'Disconnected']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {\n              connected: connected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-list-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Online Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(UserList, {\n              users: users,\n              onCallUser: startCall,\n              currentCall: currentCall,\n              callStatus: callStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qr-options\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShowQRCode(!showQRCode);\n                setShowQRScanner(false);\n              },\n              variant: showQRCode ? \"secondary\" : \"default\",\n              children: showQRCode ? 'Hide QR Code' : 'Show My QR Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShowQRScanner(!showQRScanner);\n                setShowQRCode(false);\n              },\n              variant: showQRScanner ? \"secondary\" : \"default\",\n              children: showQRScanner ? 'Hide Scanner' : 'Scan QR Code'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(MicrophonePermissionGuide, {\n            status: microphoneStatus,\n            onRetry: handleRetryMicrophoneAccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"call-status-container\",\n            children: callStatus === 'idle' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"idle-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Not in a call\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Select a user from the list to start a call\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this), showQRCode && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"qr-container\",\n                children: /*#__PURE__*/_jsxDEV(QRCodeGenerator, {\n                  data: {\n                    userId: socket === null || socket === void 0 ? void 0 : socket.id,\n                    username,\n                    roomId: 'lobby'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 23\n              }, this), showQRScanner && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"qr-container\",\n                children: /*#__PURE__*/_jsxDEV(QRCodeScanner, {\n                  onScan: handleQRScan,\n                  onError: error => console.error('QR scan error:', error),\n                  onClose: () => setShowQRScanner(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"call-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: callStatus === 'calling' ? `Calling ${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username}...` : `In call with ${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"speaking-indicators\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `indicator ${isSpeaking ? 'speaking' : ''}`,\n                  children: [\"You \", isSpeaking ? '(Speaking)' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `indicator ${peerSpeaking ? 'speaking' : ''}`,\n                  children: [currentCall === null || currentCall === void 0 ? void 0 : currentCall.username, \" \", peerSpeaking ? '(Speaking)' : '']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 553,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"call-actions\",\n                children: /*#__PURE__*/_jsxDEV(AudioControls, {\n                  muted: !audioEnabled,\n                  onToggleMute: toggleMicrophone,\n                  onHangup: endCall,\n                  quality: networkQuality\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: localAudioRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: remoteAudioRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Secure Voice Chat \\xA9 2025 - End-to-End Encrypted | Zero Persistence | Privacy First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qzlPtKUtAkTDzBCpVt8saq80RDM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","io","UserList","AudioControls","ConnectionStatus","Login","WebRTCManager","QRCodeGenerator","QRCodeScanner","MicrophonePermissionGuide","Button","jsxDEV","_jsxDEV","SERVER_URL","_window$APP_CONFIG","window","APP_CONFIG","process","env","REACT_APP_SERVER_URL","WS_URL","_window$APP_CONFIG2","REACT_APP_WS_URL","console","log","App","_s","socket","setSocket","connected","setConnected","username","setUsername","users","setUsers","currentCall","setCurrentCall","callStatus","setCallStatus","audioEnabled","setAudioEnabled","networkQuality","setNetworkQuality","darkMode","setDarkMode","matchMedia","matches","showQRCode","setShowQRCode","showQRScanner","setShowQRScanner","isSpeaking","setIsSpeaking","peerSpeaking","setPeerSpeaking","webrtcManager","setWebrtcManager","microphoneStatus","setMicrophoneStatus","errorMessage","setErrorMessage","localStream","localAudioRef","remoteAudioRef","cleanupLocalStream","current","tracks","getTracks","forEach","track","stop","srcObject","handleCallEnd","dispose","initializeWebRTC","socketInstance","manager","userId","id","onPeerConnect","peerId","stream","onPeerDisconnect","onSpeakingChange","speaking","onAudioQualityChange","quality","overall","onError","error","setTimeout","onMicrophoneStatus","status","initialize","newSocket","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","timeout","transports","on","catch","alert","message","userList","filter","user","data","from","offer","emit","target","caller","find","accept","confirm","Error","acceptIncomingCall","answer","handleAnswer","candidate","addIceCandidate","disconnect","mediaQuery","handleChange","e","addEventListener","removeEventListener","document","body","classList","add","remove","handleLogin","onRegistered","off","startCall","targetUser","Math","round","endCall","toggleMicrophone","enabled","audioTrack","getAudioTracks","toggleDarkMode","handleQRScan","connectionData","JSON","parse","roomId","getQRCodeData","stringify","handleRetryMicrophoneAccess","success","retryMicrophoneAccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onLogin","onCallUser","variant","onRetry","onScan","onClose","muted","onToggleMute","onHangup","ref","autoPlay","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport UserList from './components/UserList';\nimport AudioControls from './components/AudioControls';\nimport ConnectionStatus from './components/ConnectionStatus';\nimport Login from './components/Login';\nimport { WebRTCManager } from './utils/webrtcManager';\nimport QRCodeGenerator from './components/QRCodeGenerator';\nimport QRCodeScanner from './components/QRCodeScanner';\nimport MicrophonePermissionGuide from './components/MicrophonePermissionGuide';\nimport { Button } from './components/ui/button';\n\n// Configuration - prioritize runtime config over environment variables\nconst SERVER_URL = window.APP_CONFIG?.SERVER_URL || process.env.REACT_APP_SERVER_URL;\nconst WS_URL = window.APP_CONFIG?.WS_URL || process.env.REACT_APP_WS_URL;\n\nconsole.log('Using server URL:', SERVER_URL);\nconsole.log('Using WebSocket URL:', WS_URL);\n\nfunction App() {\n  // State\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [username, setUsername] = useState('');\n  const [users, setUsers] = useState([]);\n  const [currentCall, setCurrentCall] = useState(null);\n  const [callStatus, setCallStatus] = useState('idle'); // idle, calling, connected\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [networkQuality, setNetworkQuality] = useState(100); // 0-100\n  const [darkMode, setDarkMode] = useState(\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n  );\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [showQRScanner, setShowQRScanner] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [peerSpeaking, setPeerSpeaking] = useState(false);\n  const [webrtcManager, setWebrtcManager] = useState(null);\n  const [microphoneStatus, setMicrophoneStatus] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  \n  // Refs\n  const localStream = useRef(null);\n  const localAudioRef = useRef(null);\n  const remoteAudioRef = useRef(null);\n  \n  // Cleanup local audio stream\n  const cleanupLocalStream = () => {\n    if (localStream.current) {\n      const tracks = localStream.current.getTracks();\n      tracks.forEach(track => track.stop());\n      localStream.current = null;\n    }\n    \n    if (localAudioRef.current) {\n      localAudioRef.current.srcObject = null;\n    }\n  };\n  \n  // Handle call end (cleanup)\n  const handleCallEnd = useCallback(() => {\n    if (webrtcManager) {\n      webrtcManager.dispose();\n      setWebrtcManager(null);\n    }\n    \n    cleanupLocalStream();\n    \n    setCurrentCall(null);\n    setCallStatus('idle');\n    setNetworkQuality(100);\n    setIsSpeaking(false);\n    setPeerSpeaking(false);\n  }, [webrtcManager]);\n  \n  // Initialize WebRTC manager\n  const initializeWebRTC = useCallback(async (socketInstance) => {\n    try {\n      const manager = new WebRTCManager(socketInstance, {\n        userId: socketInstance.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: (peerId) => {\n          setCallStatus('idle');\n          setCurrentCall(null);\n          setPeerSpeaking(false);\n        },\n        onSpeakingChange: (speaking) => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (quality) => {\n          setNetworkQuality(quality.overall);\n        },\n        onError: (error) => {\n          console.error('WebRTC error:', error);\n          setErrorMessage(error);\n          setTimeout(() => setErrorMessage(null), 5000);\n        },\n        onMicrophoneStatus: (status) => {\n          console.log('Microphone status:', status);\n          setMicrophoneStatus(status);\n        }\n      });\n      \n      await manager.initialize('lobby');\n      setWebrtcManager(manager);\n      return manager;\n    } catch (error) {\n      console.error('Failed to initialize WebRTC:', error);\n      return null;\n    }\n  }, []);\n  \n  // Handle socket events\n  useEffect(() => {\n    if (!WS_URL) {\n      console.error('WebSocket URL is not defined');\n      return;\n    }\n    \n    console.log('Connecting to WebSocket server at:', WS_URL);\n    const newSocket = io(WS_URL, {\n      reconnectionAttempts: 10,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n      transports: ['websocket', 'polling']\n    });\n    \n    setSocket(newSocket);\n    \n    // Connection events\n    newSocket.on('connect', () => {\n      console.log('Connected to server with ID:', newSocket.id);\n      setConnected(true);\n      \n      // Initialize WebRTC after connection\n      initializeWebRTC(newSocket).catch(error => {\n        console.error('Error initializing WebRTC:', error);\n      });\n    });\n    \n    newSocket.on('disconnect', () => {\n      console.log('Disconnected from server');\n      setConnected(false);\n      handleCallEnd();\n    });\n    \n    newSocket.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n      setConnected(false);\n    });\n    \n    newSocket.on('error', (error) => {\n      console.error('Socket error:', error);\n      alert(`Error: ${error.message}`);\n    });\n    \n    newSocket.on('userList', (userList) => {\n      setUsers(userList.filter(user => user.id !== newSocket.id));\n    });\n    \n    newSocket.on('registered', (data) => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n    });\n    \n    // WebRTC signaling events\n    newSocket.on('offer', async ({ from, offer }) => {\n      console.log('Received offer from:', from);\n      \n      // If already in a call, reject\n      if (callStatus !== 'idle') {\n        newSocket.emit('busy', { target: from });\n        return;\n      }\n      \n      // Get caller info\n      const caller = users.find(user => user.id === from);\n      if (!caller) return;\n      \n      // Ask user to accept call\n      const accept = window.confirm(`Incoming call from ${caller.username}. Accept?`);\n      if (!accept) {\n        newSocket.emit('reject', { target: from });\n        return;\n      }\n      \n      try {\n        // Accept call using existing WebRTC manager\n        if (!webrtcManager) {\n          throw new Error('WebRTC not initialized');\n        }\n        \n        await webrtcManager.acceptIncomingCall(from, offer);\n        setCurrentCall(caller);\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error accepting call:', error);\n        newSocket.emit('error', { target: from, message: 'Failed to accept call' });\n      }\n    });\n    \n    newSocket.on('answer', async ({ from, answer }) => {\n      console.log('Received answer from:', from);\n      \n      if (!webrtcManager || callStatus !== 'calling') return;\n      \n      try {\n        await webrtcManager.handleAnswer(from, answer);\n        console.log('Remote description set successfully');\n        setCallStatus('connected');\n      } catch (error) {\n        console.error('Error setting remote description:', error);\n        handleCallEnd();\n      }\n    });\n    \n    newSocket.on('iceCandidate', async ({ from, candidate }) => {\n      console.log('Received ICE candidate from:', from);\n      \n      if (!webrtcManager) return;\n      \n      try {\n        await webrtcManager.addIceCandidate(from, candidate);\n        console.log('Added ICE candidate successfully');\n      } catch (error) {\n        console.error('Error adding ICE candidate:', error);\n      }\n    });\n    \n    newSocket.on('speaking', ({ userId, speaking }) => {\n      if (currentCall && userId === currentCall.id) {\n        setPeerSpeaking(speaking);\n      }\n    });\n    \n    newSocket.on('reject', () => {\n      alert('Call was rejected');\n      handleCallEnd();\n    });\n    \n    newSocket.on('busy', () => {\n      alert('User is busy');\n      handleCallEnd();\n    });\n    \n    newSocket.on('callEnded', () => {\n      alert('Call ended by the other user');\n      handleCallEnd();\n    });\n    \n    // Cleanup on unmount\n    return () => {\n      if (newSocket) {\n        newSocket.disconnect();\n      }\n      cleanupLocalStream();\n      if (webrtcManager) {\n        webrtcManager.dispose();\n      }\n    };\n  }, [callStatus, currentCall, handleCallEnd, users, initializeWebRTC, webrtcManager]);\n  \n  // Handle dark mode preference changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = (e) => setDarkMode(e.matches);\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n  \n  // Apply dark mode class to body\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  \n  // Handle user registration\n  const handleLogin = async (username) => {\n    if (!socket || !connected) {\n      console.error('Not connected to server');\n      alert('Not connected to server. Please try again.');\n      return;\n    }\n    \n    console.log('Attempting to register with username:', username);\n    \n    // Add event listeners for registration response\n    const onRegistered = (data) => {\n      console.log('Successfully registered as:', data.username);\n      setUsername(data.username);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n    \n    const onError = (error) => {\n      console.error('Registration error:', error);\n      alert(`Registration error: ${error.message}`);\n      socket.off('registered', onRegistered);\n      socket.off('error', onError);\n    };\n    \n    // Listen for the response\n    socket.on('registered', onRegistered);\n    socket.on('error', onError);\n    \n    // Send registration request\n    socket.emit('register', { username });\n  };\n  \n  // Start a call with a user\n  const startCall = async (targetUser) => {\n    if (callStatus !== 'idle') return;\n    \n    try {\n      // Create new WebRTC manager\n      const manager = new WebRTCManager(socket, {\n        userId: socket.id,\n        onPeerConnect: (peerId, stream) => {\n          if (remoteAudioRef.current && stream) {\n            remoteAudioRef.current.srcObject = stream;\n          }\n          setCallStatus('connected');\n        },\n        onPeerDisconnect: () => {\n          handleCallEnd();\n        },\n        onSpeakingChange: (speaking) => {\n          setIsSpeaking(speaking);\n        },\n        onAudioQualityChange: (peerId, quality) => {\n          setNetworkQuality(Math.round(quality));\n        },\n        onError: (error) => {\n          console.error('WebRTC error:', error);\n          alert(`WebRTC error: ${error}`);\n        }\n      });\n      \n      setWebrtcManager(manager);\n      \n      // Initialize and start the call\n      await manager.initialize(targetUser.id);\n      await manager.startCall(targetUser.id);\n      \n      setCurrentCall(targetUser);\n      setCallStatus('calling');\n      \n    } catch (error) {\n      console.error('Error starting call:', error);\n      alert('Failed to start call. Please try again.');\n      handleCallEnd();\n    }\n  };\n  \n  // End the current call\n  const endCall = () => {\n    if (!socket || !currentCall) return;\n    \n    socket.emit('callEnded', { target: currentCall.id });\n    handleCallEnd();\n  };\n  \n  // Toggle microphone\n  const toggleMicrophone = () => {\n    if (webrtcManager) {\n      const enabled = webrtcManager.toggleMicrophone();\n      setAudioEnabled(enabled);\n    } else if (localStream.current) {\n      const audioTrack = localStream.current.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setAudioEnabled(audioTrack.enabled);\n      }\n    }\n  };\n  \n  // Toggle dark mode\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n  \n  // Handle QR code scan result\n  const handleQRScan = (data) => {\n    try {\n      const connectionData = JSON.parse(data);\n      if (connectionData.roomId && connectionData.userId) {\n        // Start call with scanned user\n        const user = {\n          id: connectionData.userId,\n          username: connectionData.username || 'User via QR'\n        };\n        startCall(user);\n        setShowQRScanner(false);\n      }\n    } catch (error) {\n      console.error('Invalid QR code data:', error);\n      alert('Invalid QR code. Please try again.');\n    }\n  };\n  \n  // Generate QR code data\n  const getQRCodeData = () => {\n    return JSON.stringify({\n      roomId: socket?.id,\n      userId: socket?.id,\n      username: username\n    });\n  };\n  \n  // Handle retry for microphone permissions\n  const handleRetryMicrophoneAccess = useCallback(async () => {\n    setMicrophoneStatus({ status: 'requesting', message: 'Requesting microphone access...' });\n    \n    try {\n      if (webrtcManager) {\n        // Use the dedicated retry method instead of reinitializing\n        const success = await webrtcManager.retryMicrophoneAccess();\n        \n        if (!success) {\n          console.error('Failed to get microphone access after retry');\n        }\n      } else if (socket) {\n        // If no webrtcManager exists yet, create a new one\n        await initializeWebRTC(socket);\n      }\n    } catch (error) {\n      console.error('Error retrying microphone access:', error);\n    }\n  }, [socket, webrtcManager, initializeWebRTC]);\n  \n  return (\n    <div className={`app ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n      <header className=\"app-header\">\n        <h1>Secure Voice Chat</h1>\n        <button \n          className=\"theme-toggle\" \n          onClick={toggleDarkMode} \n          aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\n        >\n          {darkMode ? '☀️' : '🌙'}\n        </button>\n      </header>\n      \n      <main className=\"app-content\">\n        {errorMessage && (\n          <div className=\"error-message\">\n            <p>{errorMessage}</p>\n            <button onClick={() => setErrorMessage(null)}>✕</button>\n          </div>\n        )}\n        \n        {!username ? (\n          <Login onLogin={handleLogin} connected={connected} />\n        ) : (\n          <div className=\"chat-container\">\n            <div className=\"sidebar\">\n              <div className=\"user-info\">\n                <h3>Your Profile</h3>\n                <p>Username: {username}</p>\n                <p>Status: {connected ? 'Connected' : 'Disconnected'}</p>\n                <ConnectionStatus connected={connected} />\n              </div>\n              \n              <div className=\"user-list-container\">\n                <h3>Online Users</h3>\n                <UserList \n                  users={users} \n                  onCallUser={startCall} \n                  currentCall={currentCall}\n                  callStatus={callStatus}\n                />\n              </div>\n              \n              <div className=\"qr-options\">\n                <Button \n                  onClick={() => {\n                    setShowQRCode(!showQRCode);\n                    setShowQRScanner(false);\n                  }}\n                  variant={showQRCode ? \"secondary\" : \"default\"}\n                >\n                  {showQRCode ? 'Hide QR Code' : 'Show My QR Code'}\n                </Button>\n                \n                <Button \n                  onClick={() => {\n                    setShowQRScanner(!showQRScanner);\n                    setShowQRCode(false);\n                  }}\n                  variant={showQRScanner ? \"secondary\" : \"default\"}\n                >\n                  {showQRScanner ? 'Hide Scanner' : 'Scan QR Code'}\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"content\">\n              <MicrophonePermissionGuide \n                status={microphoneStatus} \n                onRetry={handleRetryMicrophoneAccess} \n              />\n              \n              <div className=\"call-status-container\">\n                {callStatus === 'idle' ? (\n                  <div className=\"idle-container\">\n                    <h2>Not in a call</h2>\n                    <p>Select a user from the list to start a call</p>\n                    \n                    {showQRCode && (\n                      <div className=\"qr-container\">\n                        <QRCodeGenerator \n                          data={{\n                            userId: socket?.id,\n                            username,\n                            roomId: 'lobby'\n                          }}\n                        />\n                      </div>\n                    )}\n                    \n                    {showQRScanner && (\n                      <div className=\"qr-container\">\n                        <QRCodeScanner \n                          onScan={handleQRScan}\n                          onError={(error) => console.error('QR scan error:', error)}\n                          onClose={() => setShowQRScanner(false)}\n                        />\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"call-container\">\n                    <h2>\n                      {callStatus === 'calling' \n                        ? `Calling ${currentCall?.username}...` \n                        : `In call with ${currentCall?.username}`}\n                    </h2>\n                    \n                    <div className=\"speaking-indicators\">\n                      <div className={`indicator ${isSpeaking ? 'speaking' : ''}`}>\n                        You {isSpeaking ? '(Speaking)' : ''}\n                      </div>\n                      <div className={`indicator ${peerSpeaking ? 'speaking' : ''}`}>\n                        {currentCall?.username} {peerSpeaking ? '(Speaking)' : ''}\n                      </div>\n                    </div>\n                    \n                    <div className=\"call-actions\">\n                      <AudioControls \n                        muted={!audioEnabled}\n                        onToggleMute={toggleMicrophone}\n                        onHangup={endCall}\n                        quality={networkQuality}\n                      />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Audio elements */}\n        <audio ref={localAudioRef} autoPlay muted></audio>\n        <audio ref={remoteAudioRef} autoPlay></audio>\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>Secure Voice Chat &copy; 2025 - End-to-End Encrypted | Zero Persistence | Privacy First</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}