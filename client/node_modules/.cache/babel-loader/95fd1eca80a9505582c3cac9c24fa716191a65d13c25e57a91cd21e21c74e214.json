{"ast":null,"code":"var _jsxFileName = \"/Users/ayadyousifshahi/Documents/webchat app/client/src/components/ConnectionStatus.js\";\nimport React from 'react';\n\n/**\n * ConnectionStatus component displays the current connection state\n * and call status, as well as network quality indicators\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ConnectionStatus({\n  connected,\n  callStatus,\n  currentCall,\n  networkQuality,\n  isSpeaking,\n  peerSpeaking\n}) {\n  // Determine status text based on connection and call state\n  let statusText = connected ? 'Connected to server' : 'Disconnected from server';\n  if (connected && callStatus === 'calling') {\n    statusText = `Calling ${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username}...`;\n  } else if (connected && callStatus === 'connected') {\n    statusText = `In call with ${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username}`;\n  }\n\n  // Determine quality color based on network quality\n  let qualityColor = '#4caf50'; // Good (green)\n\n  if (networkQuality < 50) {\n    qualityColor = '#f44336'; // Poor (red)\n  } else if (networkQuality < 80) {\n    qualityColor = '#ff9800'; // Fair (orange)\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-status\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-indicator ${connected ? 'status-connected' : 'status-disconnected'}`,\n      title: connected ? 'Connected' : 'Disconnected',\n      \"aria-hidden\": \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: statusText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), callStatus === 'connected' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"network-quality\",\n        title: `Network quality: ${networkQuality}%`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Quality:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quality-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quality-bar\",\n            style: {\n              width: `${networkQuality}%`,\n              backgroundColor: qualityColor\n            },\n            \"aria-label\": `Network quality: ${networkQuality}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-speaking you\",\n        title: \"You are speaking\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"speaking-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), peerSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-speaking peer\",\n        title: `${currentCall === null || currentCall === void 0 ? void 0 : currentCall.username} is speaking`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"speaking-dot peer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = ConnectionStatus;\nexport default ConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"ConnectionStatus\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectionStatus","connected","callStatus","currentCall","networkQuality","isSpeaking","peerSpeaking","statusText","username","qualityColor","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","style","width","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/ayadyousifshahi/Documents/webchat app/client/src/components/ConnectionStatus.js"],"sourcesContent":["import React from 'react';\n\n/**\n * ConnectionStatus component displays the current connection state\n * and call status, as well as network quality indicators\n */\nfunction ConnectionStatus({ connected, callStatus, currentCall, networkQuality, isSpeaking, peerSpeaking }) {\n  // Determine status text based on connection and call state\n  let statusText = connected ? 'Connected to server' : 'Disconnected from server';\n  \n  if (connected && callStatus === 'calling') {\n    statusText = `Calling ${currentCall?.username}...`;\n  } else if (connected && callStatus === 'connected') {\n    statusText = `In call with ${currentCall?.username}`;\n  }\n  \n  // Determine quality color based on network quality\n  let qualityColor = '#4caf50'; // Good (green)\n  \n  if (networkQuality < 50) {\n    qualityColor = '#f44336'; // Poor (red)\n  } else if (networkQuality < 80) {\n    qualityColor = '#ff9800'; // Fair (orange)\n  }\n  \n  return (\n    <div className=\"connection-status\">\n      <div \n        className={`status-indicator ${connected ? 'status-connected' : 'status-disconnected'}`}\n        title={connected ? 'Connected' : 'Disconnected'}\n        aria-hidden=\"true\"\n      />\n      \n      <span>{statusText}</span>\n      \n      {callStatus === 'connected' && (\n        <>\n          <div className=\"network-quality\" title={`Network quality: ${networkQuality}%`}>\n            <span>Quality:</span>\n            <div className=\"quality-indicator\">\n              <div \n                className=\"quality-bar\" \n                style={{ \n                  width: `${networkQuality}%`,\n                  backgroundColor: qualityColor\n                }}\n                aria-label={`Network quality: ${networkQuality}%`}\n              />\n            </div>\n          </div>\n          \n          {isSpeaking && (\n            <div className=\"status-speaking you\" title=\"You are speaking\">\n              <span className=\"speaking-dot\"></span>\n            </div>\n          )}\n          \n          {peerSpeaking && (\n            <div className=\"status-speaking peer\" title={`${currentCall?.username} is speaking`}>\n              <span className=\"speaking-dot peer\"></span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIA,SAASC,gBAAgBA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC,WAAW;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAa,CAAC,EAAE;EAC1G;EACA,IAAIC,UAAU,GAAGN,SAAS,GAAG,qBAAqB,GAAG,0BAA0B;EAE/E,IAAIA,SAAS,IAAIC,UAAU,KAAK,SAAS,EAAE;IACzCK,UAAU,GAAG,WAAWJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,QAAQ,KAAK;EACpD,CAAC,MAAM,IAAIP,SAAS,IAAIC,UAAU,KAAK,WAAW,EAAE;IAClDK,UAAU,GAAG,gBAAgBJ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,QAAQ,EAAE;EACtD;;EAEA;EACA,IAAIC,YAAY,GAAG,SAAS,CAAC,CAAC;;EAE9B,IAAIL,cAAc,GAAG,EAAE,EAAE;IACvBK,YAAY,GAAG,SAAS,CAAC,CAAC;EAC5B,CAAC,MAAM,IAAIL,cAAc,GAAG,EAAE,EAAE;IAC9BK,YAAY,GAAG,SAAS,CAAC,CAAC;EAC5B;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCd,OAAA;MACEa,SAAS,EAAE,oBAAoBT,SAAS,GAAG,kBAAkB,GAAG,qBAAqB,EAAG;MACxFW,KAAK,EAAEX,SAAS,GAAG,WAAW,GAAG,cAAe;MAChD,eAAY;IAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAEFnB,OAAA;MAAAc,QAAA,EAAOJ;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAExBd,UAAU,KAAK,WAAW,iBACzBL,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACEd,OAAA;QAAKa,SAAS,EAAC,iBAAiB;QAACE,KAAK,EAAE,oBAAoBR,cAAc,GAAI;QAAAO,QAAA,gBAC5Ed,OAAA;UAAAc,QAAA,EAAM;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrBnB,OAAA;UAAKa,SAAS,EAAC,mBAAmB;UAAAC,QAAA,eAChCd,OAAA;YACEa,SAAS,EAAC,aAAa;YACvBO,KAAK,EAAE;cACLC,KAAK,EAAE,GAAGd,cAAc,GAAG;cAC3Be,eAAe,EAAEV;YACnB,CAAE;YACF,cAAY,oBAAoBL,cAAc;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELX,UAAU,iBACTR,OAAA;QAAKa,SAAS,EAAC,qBAAqB;QAACE,KAAK,EAAC,kBAAkB;QAAAD,QAAA,eAC3Dd,OAAA;UAAMa,SAAS,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CACN,EAEAV,YAAY,iBACXT,OAAA;QAAKa,SAAS,EAAC,sBAAsB;QAACE,KAAK,EAAE,GAAGT,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEK,QAAQ,cAAe;QAAAG,QAAA,eAClFd,OAAA;UAAMa,SAAS,EAAC;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CACN;IAAA,eACD,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACI,EAAA,GA5DQpB,gBAAgB;AA8DzB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}